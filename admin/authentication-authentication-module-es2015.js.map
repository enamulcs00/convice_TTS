{"version":3,"sources":["./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","./src/app/authentication/404/not-found.component.ts","./src/app/authentication/404/not-found.component.html","./src/app/authentication/authentication.module.ts","./src/app/authentication/authentication.routing.ts","./src/app/authentication/lock/changepassword.component.ts","./src/app/authentication/lock/changepassword.component.html","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/login2/login2.component.ts","./src/app/authentication/login2/login2.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html","./src/app/authentication/signup2/signup2.component.ts","./src/app/authentication/signup2/signup2.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiD;AACa;AACqL;AACtJ;AACsD;AACtE;AACpB;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACI;AACK;AACA;;AAEjD;AACA,yBAAyB,SAAS,sBAAsB;AACxD;AACA,yCAAyC,4DAAc;AACvD;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4DAAc;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4EAAa,CAAC,yEAAU,CAAC,iFAAkB,CAAC,4EAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA,uCAAuC,0DAAY;AACnD;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,WAAW,0BAA0B,QAAQ;AAChE;AACA,oBAAoB,uBAAuB;AAC3C,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA,8BAA8B,mFAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,+BAA+B,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,CAAC,+DAAwB,GAAG,+DAAwB,CA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","file":"authentication-authentication-module-es2015.js","sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\r\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\r\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\r\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\r\nimport { ObserversModule } from '@angular/cdk/observers';\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** Injection token to be used to override the default options for `mat-checkbox`. */\r\nimport * as ɵngcc0 from '@angular/core';\r\nimport * as ɵngcc1 from '@angular/cdk/a11y';\r\nimport * as ɵngcc2 from '@angular/material/core';\r\nimport * as ɵngcc3 from '@angular/cdk/observers';\r\n\r\nconst _c0 = [\"input\"];\r\nconst _c1 = function () { return { enterDuration: 150 }; };\r\nconst _c2 = [\"*\"];\r\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\r\n    providedIn: 'root',\r\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\r\n});\r\n/** @docs-private */\r\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\r\n    return {\r\n        color: 'accent',\r\n        clickAction: 'check-indeterminate',\r\n    };\r\n}\r\n/**\r\n * Injection token that can be used to specify the checkbox click behavior.\r\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\r\n * @breaking-change 10.0.0\r\n */\r\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n// Increasing integer for generating unique ids for checkbox components.\r\nlet nextUniqueId = 0;\r\n/**\r\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\r\n * This allows it to support [(ngModel)].\r\n * @docs-private\r\n */\r\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => MatCheckbox),\r\n    multi: true\r\n};\r\n/** Change event object emitted by MatCheckbox. */\r\nclass MatCheckboxChange {\r\n}\r\n// Boilerplate for applying mixins to MatCheckbox.\r\n/** @docs-private */\r\nclass MatCheckboxBase {\r\n    constructor(_elementRef) {\r\n        this._elementRef = _elementRef;\r\n    }\r\n}\r\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\r\n/**\r\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\r\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\r\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\r\n * so there is no need to provide them yourself. However, if you want to omit a label and still\r\n * have the checkbox be accessible, you may supply an [aria-label] input.\r\n * See: https://material.io/design/components/selection-controls.html\r\n */\r\nclass MatCheckbox extends _MatCheckboxMixinBase {\r\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, \r\n    /**\r\n     * @deprecated `_clickAction` parameter to be removed, use\r\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\r\n     * @breaking-change 10.0.0\r\n     */\r\n    _clickAction, _animationMode, _options) {\r\n        super(elementRef);\r\n        this._changeDetectorRef = _changeDetectorRef;\r\n        this._focusMonitor = _focusMonitor;\r\n        this._ngZone = _ngZone;\r\n        this._clickAction = _clickAction;\r\n        this._animationMode = _animationMode;\r\n        this._options = _options;\r\n        /**\r\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\r\n         * take precedence so this may be omitted.\r\n         */\r\n        this.ariaLabel = '';\r\n        /**\r\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\r\n         */\r\n        this.ariaLabelledby = null;\r\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\r\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\r\n        this.id = this._uniqueId;\r\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\r\n        this.labelPosition = 'after';\r\n        /** Name value will be applied to the input element if present */\r\n        this.name = null;\r\n        /** Event emitted when the checkbox's `checked` value changes. */\r\n        this.change = new EventEmitter();\r\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\r\n        this.indeterminateChange = new EventEmitter();\r\n        /**\r\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\r\n         * @docs-private\r\n         */\r\n        this._onTouched = () => { };\r\n        this._currentAnimationClass = '';\r\n        this._currentCheckState = 0 /* Init */;\r\n        this._controlValueAccessorChangeFn = () => { };\r\n        this._checked = false;\r\n        this._disabled = false;\r\n        this._indeterminate = false;\r\n        this._options = this._options || {};\r\n        if (this._options.color) {\r\n            this.color = this.defaultColor = this._options.color;\r\n        }\r\n        this.tabIndex = parseInt(tabIndex) || 0;\r\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\r\n        this._clickAction = this._clickAction || this._options.clickAction;\r\n    }\r\n    /** Returns the unique id for the visual hidden input. */\r\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\r\n    /** Whether the checkbox is required. */\r\n    get required() { return this._required; }\r\n    set required(value) { this._required = coerceBooleanProperty(value); }\r\n    ngAfterViewInit() {\r\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\r\n            if (!focusOrigin) {\r\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\r\n                // Angular does not expect events to be raised during change detection, so any state change\r\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\r\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\r\n                // telling the form control it has been touched until the next tick.\r\n                Promise.resolve().then(() => {\r\n                    this._onTouched();\r\n                    this._changeDetectorRef.markForCheck();\r\n                });\r\n            }\r\n        });\r\n        this._syncIndeterminate(this._indeterminate);\r\n    }\r\n    // TODO: Delete next major revision.\r\n    ngAfterViewChecked() { }\r\n    ngOnDestroy() {\r\n        this._focusMonitor.stopMonitoring(this._elementRef);\r\n    }\r\n    /**\r\n     * Whether the checkbox is checked.\r\n     */\r\n    get checked() { return this._checked; }\r\n    set checked(value) {\r\n        if (value != this.checked) {\r\n            this._checked = value;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    /**\r\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\r\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\r\n     */\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value) {\r\n        const newValue = coerceBooleanProperty(value);\r\n        if (newValue !== this.disabled) {\r\n            this._disabled = newValue;\r\n            this._changeDetectorRef.markForCheck();\r\n        }\r\n    }\r\n    /**\r\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\r\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\r\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\r\n     * set to false.\r\n     */\r\n    get indeterminate() { return this._indeterminate; }\r\n    set indeterminate(value) {\r\n        const changed = value != this._indeterminate;\r\n        this._indeterminate = coerceBooleanProperty(value);\r\n        if (changed) {\r\n            if (this._indeterminate) {\r\n                this._transitionCheckState(3 /* Indeterminate */);\r\n            }\r\n            else {\r\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\r\n            }\r\n            this.indeterminateChange.emit(this._indeterminate);\r\n        }\r\n        this._syncIndeterminate(this._indeterminate);\r\n    }\r\n    _isRippleDisabled() {\r\n        return this.disableRipple || this.disabled;\r\n    }\r\n    /** Method being called whenever the label text changes. */\r\n    _onLabelTextChange() {\r\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\r\n        // component will be only marked for check, but no actual change detection runs automatically.\r\n        // Instead of going back into the zone in order to trigger a change detection which causes\r\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\r\n        // an explicit change detection for the checkbox view and its children.\r\n        this._changeDetectorRef.detectChanges();\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    writeValue(value) {\r\n        this.checked = !!value;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnChange(fn) {\r\n        this._controlValueAccessorChangeFn = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    registerOnTouched(fn) {\r\n        this._onTouched = fn;\r\n    }\r\n    // Implemented as part of ControlValueAccessor.\r\n    setDisabledState(isDisabled) {\r\n        this.disabled = isDisabled;\r\n    }\r\n    _getAriaChecked() {\r\n        if (this.checked) {\r\n            return 'true';\r\n        }\r\n        return this.indeterminate ? 'mixed' : 'false';\r\n    }\r\n    _transitionCheckState(newState) {\r\n        let oldState = this._currentCheckState;\r\n        let element = this._elementRef.nativeElement;\r\n        if (oldState === newState) {\r\n            return;\r\n        }\r\n        if (this._currentAnimationClass.length > 0) {\r\n            element.classList.remove(this._currentAnimationClass);\r\n        }\r\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\r\n        this._currentCheckState = newState;\r\n        if (this._currentAnimationClass.length > 0) {\r\n            element.classList.add(this._currentAnimationClass);\r\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\r\n            const animationClass = this._currentAnimationClass;\r\n            this._ngZone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    element.classList.remove(animationClass);\r\n                }, 1000);\r\n            });\r\n        }\r\n    }\r\n    _emitChangeEvent() {\r\n        const event = new MatCheckboxChange();\r\n        event.source = this;\r\n        event.checked = this.checked;\r\n        this._controlValueAccessorChangeFn(this.checked);\r\n        this.change.emit(event);\r\n    }\r\n    /** Toggles the `checked` state of the checkbox. */\r\n    toggle() {\r\n        this.checked = !this.checked;\r\n    }\r\n    /**\r\n     * Event handler for checkbox input element.\r\n     * Toggles checked state if element is not disabled.\r\n     * Do not toggle on (change) event since IE doesn't fire change event when\r\n     *   indeterminate checkbox is clicked.\r\n     * @param event\r\n     */\r\n    _onInputClick(event) {\r\n        // We have to stop propagation for click events on the visual hidden input element.\r\n        // By default, when a user clicks on a label element, a generated click event will be\r\n        // dispatched on the associated input element. Since we are using a label element as our\r\n        // root container, the click event on the `checkbox` will be executed twice.\r\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\r\n        // This will lead to multiple click events.\r\n        // Preventing bubbling for the second event will solve that issue.\r\n        event.stopPropagation();\r\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\r\n        if (!this.disabled && this._clickAction !== 'noop') {\r\n            // When user manually click on the checkbox, `indeterminate` is set to false.\r\n            if (this.indeterminate && this._clickAction !== 'check') {\r\n                Promise.resolve().then(() => {\r\n                    this._indeterminate = false;\r\n                    this.indeterminateChange.emit(this._indeterminate);\r\n                });\r\n            }\r\n            this.toggle();\r\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\r\n            // Emit our custom change event if the native input emitted one.\r\n            // It is important to only emit it, if the native input triggered one, because\r\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\r\n            this._emitChangeEvent();\r\n        }\r\n        else if (!this.disabled && this._clickAction === 'noop') {\r\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\r\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\r\n            this._inputElement.nativeElement.checked = this.checked;\r\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\r\n        }\r\n    }\r\n    /** Focuses the checkbox. */\r\n    focus(origin = 'keyboard', options) {\r\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\r\n    }\r\n    _onInteractionEvent(event) {\r\n        // We always have to stop propagation on the change event.\r\n        // Otherwise the change event, from the input element, will bubble up and\r\n        // emit its event object to the `change` output.\r\n        event.stopPropagation();\r\n    }\r\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\r\n        // Don't transition if animations are disabled.\r\n        if (this._animationMode === 'NoopAnimations') {\r\n            return '';\r\n        }\r\n        let animSuffix = '';\r\n        switch (oldState) {\r\n            case 0 /* Init */:\r\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\r\n                // [checked] bound to it.\r\n                if (newState === 1 /* Checked */) {\r\n                    animSuffix = 'unchecked-checked';\r\n                }\r\n                else if (newState == 3 /* Indeterminate */) {\r\n                    animSuffix = 'unchecked-indeterminate';\r\n                }\r\n                else {\r\n                    return '';\r\n                }\r\n                break;\r\n            case 2 /* Unchecked */:\r\n                animSuffix = newState === 1 /* Checked */ ?\r\n                    'unchecked-checked' : 'unchecked-indeterminate';\r\n                break;\r\n            case 1 /* Checked */:\r\n                animSuffix = newState === 2 /* Unchecked */ ?\r\n                    'checked-unchecked' : 'checked-indeterminate';\r\n                break;\r\n            case 3 /* Indeterminate */:\r\n                animSuffix = newState === 1 /* Checked */ ?\r\n                    'indeterminate-checked' : 'indeterminate-unchecked';\r\n                break;\r\n        }\r\n        return `mat-checkbox-anim-${animSuffix}`;\r\n    }\r\n    /**\r\n     * Syncs the indeterminate value with the checkbox DOM node.\r\n     *\r\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\r\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\r\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\r\n     * server-side rendering.\r\n     */\r\n    _syncIndeterminate(value) {\r\n        const nativeCheckbox = this._inputElement;\r\n        if (nativeCheckbox) {\r\n            nativeCheckbox.nativeElement.indeterminate = value;\r\n        }\r\n    }\r\n}\r\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\r\nMatCheckbox.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵviewQuery(_c0, true);\r\n        ɵngcc0.ɵɵviewQuery(MatRipple, true);\r\n    } if (rf & 2) {\r\n        var _t;\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\r\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\r\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\r\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\r\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\r\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\r\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 20, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\r\n        ɵngcc0.ɵɵprojectionDef();\r\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\r\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\r\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\r\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\r\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\r\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\r\n        ɵngcc0.ɵɵnamespaceSVG();\r\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\r\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵnamespaceHTML();\r\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\r\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\r\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\r\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵprojection(16);\r\n        ɵngcc0.ɵɵelementEnd();\r\n        ɵngcc0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        const _r0 = ɵngcc0.ɵɵreference(1);\r\n        const _r2 = ɵngcc0.ɵɵreference(13);\r\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\r\n        ɵngcc0.ɵɵadvance(2);\r\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\r\n        ɵngcc0.ɵɵadvance(1);\r\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\r\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\r\n        ɵngcc0.ɵɵadvance(2);\r\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(19, _c1));\r\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\r\nMatCheckbox.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: ChangeDetectorRef },\r\n    { type: FocusMonitor },\r\n    { type: NgZone },\r\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\r\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\r\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\r\n];\r\nMatCheckbox.propDecorators = {\r\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\r\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\r\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\r\n    id: [{ type: Input }],\r\n    required: [{ type: Input }],\r\n    labelPosition: [{ type: Input }],\r\n    name: [{ type: Input }],\r\n    change: [{ type: Output }],\r\n    indeterminateChange: [{ type: Output }],\r\n    value: [{ type: Input }],\r\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\r\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\r\n    checked: [{ type: Input }],\r\n    disabled: [{ type: Input }],\r\n    indeterminate: [{ type: Input }]\r\n};\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\r\n        type: Component,\r\n        args: [{\r\n                selector: 'mat-checkbox',\r\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\r\n                exportAs: 'matCheckbox',\r\n                host: {\r\n                    'class': 'mat-checkbox',\r\n                    '[id]': 'id',\r\n                    '[attr.tabindex]': 'null',\r\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\r\n                    '[class.mat-checkbox-checked]': 'checked',\r\n                    '[class.mat-checkbox-disabled]': 'disabled',\r\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\r\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\r\n                },\r\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\r\n                inputs: ['disableRipple', 'color', 'tabIndex'],\r\n                encapsulation: ViewEncapsulation.None,\r\n                changeDetection: ChangeDetectionStrategy.OnPush,\r\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\r\n            }]\r\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\r\n                type: Attribute,\r\n                args: ['tabindex']\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_CHECKBOX_CLICK_ACTION]\r\n            }] }, { type: String, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [ANIMATION_MODULE_TYPE]\r\n            }] }, { type: undefined, decorators: [{\r\n                type: Optional\r\n            }, {\r\n                type: Inject,\r\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\r\n            }] }]; }, { ariaLabel: [{\r\n            type: Input,\r\n            args: ['aria-label']\r\n        }], ariaLabelledby: [{\r\n            type: Input,\r\n            args: ['aria-labelledby']\r\n        }], id: [{\r\n            type: Input\r\n        }], labelPosition: [{\r\n            type: Input\r\n        }], name: [{\r\n            type: Input\r\n        }], change: [{\r\n            type: Output\r\n        }], indeterminateChange: [{\r\n            type: Output\r\n        }], required: [{\r\n            type: Input\r\n        }], checked: [{\r\n            type: Input\r\n        }], disabled: [{\r\n            type: Input\r\n        }], indeterminate: [{\r\n            type: Input\r\n        }], ariaDescribedby: [{\r\n            type: Input,\r\n            args: ['aria-describedby']\r\n        }], value: [{\r\n            type: Input\r\n        }], _inputElement: [{\r\n            type: ViewChild,\r\n            args: ['input']\r\n        }], ripple: [{\r\n            type: ViewChild,\r\n            args: [MatRipple]\r\n        }] }); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\r\n    provide: NG_VALIDATORS,\r\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\r\n    multi: true\r\n};\r\n/**\r\n * Validator for Material checkbox's required attribute in template-driven checkbox.\r\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\r\n * work with `mat-checkbox`.\r\n */\r\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\r\n}\r\nMatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) { return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator); };\r\nMatCheckboxRequiredValidator.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\r\nconst ɵMatCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator);\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\r\n        type: Directive,\r\n        args: [{\r\n                selector: `mat-checkbox[required][formControlName],\r\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\r\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n/** This module is used by both original and MDC-based checkbox implementations. */\r\nclass _MatCheckboxRequiredValidatorModule {\r\n}\r\n_MatCheckboxRequiredValidatorModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\r\n_MatCheckboxRequiredValidatorModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); } });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                exports: [MatCheckboxRequiredValidator],\r\n                declarations: [MatCheckboxRequiredValidator]\r\n            }]\r\n    }], null, null); })();\r\nclass MatCheckboxModule {\r\n}\r\nMatCheckboxModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\r\nMatCheckboxModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); }, imports: [[\r\n            MatRippleModule, MatCommonModule, ObserversModule,\r\n            _MatCheckboxRequiredValidatorModule\r\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\r\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\r\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\r\n        type: NgModule,\r\n        args: [{\r\n                imports: [\r\n                    MatRippleModule, MatCommonModule, ObserversModule,\r\n                    _MatCheckboxRequiredValidatorModule\r\n                ],\r\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\r\n                declarations: [MatCheckbox]\r\n            }]\r\n    }], null, null); })();\r\n\r\n/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\n\r\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\r\n\r\n//# sourceMappingURL=checkbox.js.map","import { Component, AfterViewInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html'\r\n})\r\nexport class NotfoundComponent implements AfterViewInit {\r\n  ngAfterViewInit() {}\r\n}\r\n","<div class=\"error-box\">\r\n    <div class=\"error-body text-center\">\r\n        <h1 class=\"error-title text-danger\">404</h1>\r\n        <h3 class=\"text-uppercase error-subtitle\">PAGE NOT FOUND !</h3>\r\n        <p class=\"text-muted m-t-30 m-b-30\">YOU SEEM TO BE TRYING TO FIND HIS WAY HOME</p>\r\n        <a href=\"#/dashboard/classic\" class=\"btn btn-danger btn-rounded waves-effect waves-light m-b-40\">Back to home</a> \r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport { NotfoundComponent } from './404/not-found.component';\r\nimport { changepasswordComponent } from './lock/changepassword.component'; \r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Signup2Component } from './signup2/signup2.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutes } from './authentication.routing';\r\nimport { CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(AuthenticationRoutes),\r\n    NgbModule,\r\n    MatCheckboxModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    NotfoundComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n\r\n    changepasswordComponent,\r\n    Login2Component,\r\n    Signup2Component\r\n  ],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { NotfoundComponent } from './404/not-found.component';\r\nimport { changepasswordComponent } from './lock/changepassword.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { Login2Component } from './login2/login2.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { Signup2Component } from './signup2/signup2.component';\r\n\r\nexport const AuthenticationRoutes: Routes = [\r\n  {\r\n    path: '',\r\n    children: [\r\n\r\n      {\r\n        path: '',\r\n        component: Login2Component\r\n\r\n      },\r\n      {\r\n        path: '404',\r\n        component: NotfoundComponent\r\n      },\r\n      {\r\n        path: 'changepassword',\r\n        component: changepasswordComponent\r\n      },\r\n      {\r\n        path: 'login2',\r\n        component: LoginComponent\r\n      },\r\n      {\r\n        path: 'login',\r\n        component: Login2Component\r\n      },\r\n      {\r\n        path: 'signup',\r\n        component: SignupComponent\r\n      },\r\n      {\r\n        path: 'signup2',\r\n        component: Signup2Component\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router, Routes } from '@angular/router';\r\nimport { NgForm, FormGroup, FormControl } from '@angular/forms';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport  { ConvserviceService } from 'src/app/convservice.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-changepassword',\r\n  templateUrl: './changepassword.component.html'\r\n})\r\nexport class changepasswordComponent {\r\n  changePswdform: FormGroup;\r\n  confirmErrorr: boolean;\r\n  pass: any = {}\r\n  submitted: boolean = false;\r\n  constructor(private route : Router,private _rout: ActivatedRoute,private formBuilder: FormBuilder,private Srvc:ConvserviceService) \r\n  {\r\n    this.changePswdform = this.formBuilder.group({\r\n      password:['',Validators.required],\r\n      newpassword:['',Validators.required],\r\n      confirmpassword:['',Validators.required]\r\n    });\r\n  }\r\n\r\n  onPasswordSubmit(f: NgForm) {\r\n \r\n    this.submitted = true;\r\nif (this.pass.newPassword != this.pass.cpassword) {\r\nthis.confirmErrorr = true\r\n} else {\r\nthis.confirmErrorr = false\r\nlet form =\r\n{\r\n\"oldPassword\": this.pass.oldPassword,\r\n\"newPassword\": this.pass.newPassword\r\n}\r\nconsole.log('res',form)\r\ndebugger\r\nthis.Srvc.changePass(form).subscribe((res:any)=>\r\n{\r\n  if(res.statusCode == 200)\r\n  {\r\n    Swal.fire('Done','Updated succesfully','success');\r\n    this.route.navigate(['/dashboard']);\r\n  }\r\n})\r\n}\r\n}\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box\">\r\n        <div>\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img alt=\"thumbnail\" class=\"\" width=\"100\" src=\"assets/images/logo.svg\"></span>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form name=\"formm\" class=\"form-horizontal m-t-20\" (ngSubmit)=\"f.valid && onPasswordSubmit(f)\" #f=\"ngForm\" novalidate>\r\n                      \r\n                                <label>Current Password</label>\r\n                                <div class=\"form-group row\">\r\n                                    <div class=\"col-12\">\r\n                                    <mat-form-field [floatLabel]=\"'never'\">\r\n                                        <input  class=\"form-control form-control-lg\" placeholder=\"Old Password\" matInput type=\"password\" [(ngModel)]=\"pass.oldPassword\" required name=\"oldPassword\" minlength=\"8\" maxlength=\"25\"  #password=\"ngModel\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                    <mat-error *ngIf=\"f.submitted && password.invalid\">\r\n                                        <div class=\"error\" *ngIf=\"password?.errors?.required\">\r\n                                            Current password is required \r\n    \r\n                                        </div>\r\n                                    </mat-error>\r\n                                </div>\r\n                             \r\n                            \r\n                         \r\n                                <label>New Password</label>\r\n                                <div class=\"form-group row\">\r\n                                    <div class=\"col-12\">\r\n                                    <mat-form-field [floatLabel]=\"'never'\">\r\n                                        <input  class=\"form-control form-control-lg\" placeholder=\"New Password\" matInput type=\"password\" name=\"mail\" placeholder=\"xxxx\" [(ngModel)]=\"pass.newPassword\" minlength=\"8\" maxlength=\"25\" required name=\"new Password\" placeholder=\"New password\" #newPassword=\"ngModel\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                    <mat-error *ngIf=\" f.submitted && newPassword.invalid \">\r\n                                        <div class=\"error\" *ngIf=\"newPassword?.errors?.required\">\r\n                                            New password is required!</div>\r\n                                        <div class=\"error\" *ngIf=\"newPassword.errors?.minlength\">\r\n                                            Password should be of atleast 8 characters!</div>\r\n                                        <!-- <div class=\"error\" *ngIf=\"newPassword.errors?.maxlength\">\r\n                                            {{\"VALIDATIONS.PASSWORDLSS\" | translate}}</div> -->\r\n    \r\n                                    </mat-error>\r\n                                </div>\r\n                             \r\n                             \r\n                          \r\n                                <label>Confirm password</label>\r\n                                <div class=\"form-group row\">\r\n                                    <div class=\"col-12\">\r\n                                    <mat-form-field [floatLabel]=\"'never'\">\r\n                                        <input  class=\"form-control form-control-lg\" placeholder=\"Retype Password\" matInput type=\"password\" (input)=\"confirmErrorr=false;\" name=\"mail\" placeholder=\"xxxx\" [(ngModel)]=\"pass.cpassword\" required name=\"cpassword\" minlength=\"8\" maxlength=\"25\" placeholder=\"Confirm password\" #cpassword=\"ngModel\">\r\n                                    </mat-form-field>\r\n                                </div>\r\n                                    <mat-error class=\"error\" *ngIf=\" f.submitted && cpassword.invalid \">\r\n                                        Please enter Confirm Password\r\n                                    </mat-error>\r\n                                    <mat-error class=\"error\" *ngIf=\" f.submitted && cpassword.valid \">\r\n                                        <div *ngIf=\"confirmErrorr\">\r\n                                            New Password and Confirm password doesn't match\r\n    \r\n                                        </div>\r\n                                    </mat-error>\r\n                                </div>\r\n                        \r\n                          \r\n                        <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\">Submit</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { NgForm, FormGroup, FormControl } from '@angular/forms';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html'\r\n})\r\nexport class LoginComponent {\r\n  Uloginform: FormGroup;\r\n  submitted:boolean = false;\r\n  constructor(private formBuilder: FormBuilder) { \r\n    this.Uloginform = this.formBuilder.group({\r\n      username:['',Validators.required],\r\n      password:['',Validators.required],\r\n    });\r\n  }\r\n\r\n  loginform = true;\r\n  recoverform = false;\r\n\r\n  showRecoverForm() {\r\n    this.loginform = !this.loginform;\r\n    this.recoverform = !this.recoverform;\r\n  }\r\n\r\n  public errorHandling = (control: string, error: string) => {\r\n    return this.Uloginform.controls[control].hasError(error);\r\n  }\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box\">\r\n        <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\" [formGroup]=\"Uloginform\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\r\n                            </div>\r\n                            <mat-form-field [floatLabel]=\"'never'\">\r\n                            <input matInput type=\"text\" class=\"form-control form-control-lg\" formControlName=\"username\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\">\r\n                            </mat-form-field>\r\n                            <mat-error class=\"error\" *ngIf=\"submitted && errorHandling('username', 'required')\">\r\n                                First name is required\r\n                            </mat-error>\r\n                        </div>\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\r\n                            </div>\r\n                            <mat-form-field [floatLabel]=\"'never'\">\r\n                            <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"password\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\">\r\n                            </mat-form-field>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\r\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-dark float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot pwd?</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center\">\r\n                            <div class=\"col-xs-12 p-b-20\">\r\n                                <button class=\"btn btn-block btn-lg btn-info\" type=\"submit\" ()>Log In</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\r\n                                <div class=\"social\">\r\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab fa-facebook\"></i> </a>\r\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab fa-google-plus\"></i> </a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group m-b-0 m-t-10\">\r\n                            <div class=\"col-sm-12 text-center\">\r\n                                Don't have an account? <a href=\"#/authentication/signup\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\r\n                <span>Enter your Email and instructions will be sent to you!</span>\r\n            </div>\r\n            <div class=\"row m-t-20\">\r\n                <!-- Form -->\r\n                <form class=\"col-12\">\r\n                    <!-- email -->\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-12\">\r\n                            <input class=\"form-control form-control-lg\" type=\"email\" required=\"\" placeholder=\"Username\">\r\n                        </div>\r\n                    </div>\r\n                    <!-- pwd -->\r\n                    <div class=\"row m-t-20\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn btn-block btn-lg btn-danger\" type=\"submit\" name=\"action\">Reset</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router, Routes } from '@angular/router';\r\nimport { NgForm, FormGroup, FormControl } from '@angular/forms';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport  { ConvserviceService } from 'src/app/convservice.service';\r\nimport Swal from 'sweetalert2'\r\nimport { de } from 'date-fns/locale';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login2.component.html',\r\n  styleUrls: ['./login2.scss']\r\n\r\n})\r\nexport class Login2Component {\r\n  Uloginform: FormGroup;\r\n  submitted:boolean = false;\r\n  forgotPass: FormGroup;\r\n  constructor(private route : Router,private _rout: ActivatedRoute,private formBuilder: FormBuilder,private Srvc:ConvserviceService) {\r\n\r\n    this.Uloginform = this.formBuilder.group({\r\n      username:['',Validators.required],\r\n      password:['',Validators.required],\r\n      rememberMe:['']\r\n    });\r\n\r\n    this.forgotPass = this.formBuilder.group({\r\n      forgotname:['',[Validators.required,Validators.email]]\r\n    })\r\n\r\n    if(localStorage.getItem('remember')) {\r\n      let formData = JSON.parse(localStorage.getItem('remember'))\r\n      this.Uloginform.patchValue({\r\n        username: formData.username,\r\n        password: formData.password,\r\n        rememberMe: formData.rememberMe\r\n      })\r\n    }\r\n  }\r\n\r\n  loginform = true;\r\n  recoverform = false;\r\n\r\n  showRecoverForm() {\r\n    this.loginform = !this.loginform;\r\n    this.recoverform = !this.recoverform;\r\n  }\r\n\r\n  public errorHandling = (control: string, error: string) => {\r\n    return this.Uloginform.controls[control].hasError(error);\r\n  }\r\n\r\n  public errorHandlingfog = (control: string, error: string) => {\r\n    return this.forgotPass.controls[control].hasError(error);\r\n  }\r\n\r\n  loginAdmin()\r\n  {\r\n    this.submitted = true;\r\n    const data=\r\n    {\r\n     email: this.Uloginform.controls['username'].value,\r\n     password:this.Uloginform.controls['password'].value\r\n    }\r\n    this.Srvc.login(data).subscribe((res:any)=>\r\n    {\r\n      if(res.statusCode == 200)\r\n      {\r\n        localStorage.setItem('token',res.data.accessToken)\r\n        if(this.Uloginform.value.rememberMe) {\r\n          localStorage.setItem('remember', JSON.stringify(this.Uloginform.value))\r\n        } else {\r\n          localStorage.removeItem('remember')\r\n        }\r\n      this.route.navigate(['/dashboard']);\r\n      }\r\n      if(res.statusCode == 400){\r\n        Swal.fire('Oops.',res.message,'error');\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  showOptions(event)\r\n  {\r\n   console.log('event',event);\r\n  }\r\n\r\n  submitEm()\r\n  {\r\n    this.submitted = true\r\n    debugger\r\n    const data =\r\n    {\r\n      \"email\":this.forgotPass.controls['forgotname'].value\r\n    }\r\n    if(this.forgotPass.valid)\r\n    {\r\n      this.Srvc.Forgotpassword(data).subscribe((res:any)=>\r\n      {\r\n        if(res.statusCode == 400)\r\n        {\r\n          Swal.fire('Oops',res.message,'error');\r\n        }\r\n        if(res.statusCode == 200)\r\n        {\r\n          Swal.fire(this.forgotPass.controls['forgotname'].value,res.message,'success');\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;background-size: cover;\">\r\n    <div class=\"auth-box on-sidebar\">\r\n        <div id=\"loginform\" [ngClass]=\"{'d-none': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo.svg\" alt=\"logo\"  /></span>\r\n                <!-- <h5 class=\"font-medium m-b-20\">Sign In to Admin</h5> -->\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" id=\"loginform\" [formGroup]=\"Uloginform\" action=\"index.html\">\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon1\"><i class=\"ti-user\"></i></span>\r\n                            </div>\r\n                            <mat-form-field [floatLabel]=\"'never'\">\r\n                            <input matInput type=\"text\" class=\"form-control form-control-lg\" formControlName=\"username\" placeholder=\"Email\" aria-label=\"Username\" aria-describedby=\"basic-addon1\" required>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"error\" *ngIf=\"submitted && errorHandling('username', 'required')\">\r\n                           Email required.\r\n                        </mat-error>\r\n                        </div>\r\n                        <div class=\"input-group mb-3\">\r\n                            <div class=\"input-group-prepend\">\r\n                                <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"ti-pencil\"></i></span>\r\n                            </div>\r\n                            <mat-form-field [floatLabel]=\"'never'\">\r\n                            <input matInput type=\"password\" class=\"form-control form-control-lg\" formControlName=\"password\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\" required>\r\n                        </mat-form-field>\r\n                        <mat-error class=\"error\" *ngIf=\"submitted && errorHandling('password', 'required')\">\r\n                           Password required.\r\n                         </mat-error>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12\">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\"  class=\"custom-control-input\"  formControlName=\"rememberMe\" id=\"customCheck1\">\r\n                                    <!-- <mat-checkbox class=\"example-margin\" (change)=\"showOptions($event)\">Remember me</mat-checkbox> -->\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">Remember me</label>\r\n                                    <a (click)=\"showRecoverForm()\" href=\"javascript:void(0)\" id=\"to-recover\" class=\"text-dark float-right\"><i class=\"fa fa-lock m-r-5\"></i> Forgot password</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center\">\r\n                            <div class=\"col-xs-12 p-b-20\">\r\n                                <button class=\"btn btn-block btn-lg btn-info text-white\" type=\"submit\" (click)=\"loginAdmin()\">Log In</button>\r\n                            </div>\r\n                        </div>\r\n                        <!-- <div class=\"row\">\r\n                            <div class=\"col-xs-12 col-sm-12 col-md-12 m-t-10 text-center\">\r\n                                <div class=\"social\">\r\n                                    <a href=\"javascript:void(0)\" class=\"btn  btn-facebook m-r-5\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Facebook\"> <i aria-hidden=\"true\" class=\"fab  fa-facebook\"></i> </a>\r\n                                    <a href=\"javascript:void(0)\" class=\"btn btn-googleplus\" data-toggle=\"tooltip\" title=\"\" data-original-title=\"Login with Google\"> <i aria-hidden=\"true\" class=\"fab  fa-google-plus\"></i> </a>\r\n                                </div>\r\n                            </div>\r\n                        </div> -->\r\n                        <!-- <div class=\"form-group m-b-0 m-t-10\">\r\n                            <div class=\"col-sm-12 text-center\">\r\n                                Don't have an account? <a href=\"#/authentication/signup2\" class=\"text-info m-l-5\"><b>Sign Up</b></a>\r\n                            </div>\r\n                        </div> -->\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"recoverform\" [ngClass]=\"{'d-block': recoverform}\">\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo.svg\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Recover Password</h5>\r\n                <span>Enter your Email and instructions will be sent to you!</span>\r\n            </div>\r\n            <div class=\"row m-t-20\">\r\n                <!-- Form -->\r\n                <form class=\"col-12\" action=\"index.html\" [formGroup]=\"forgotPass\">\r\n                    <!-- email -->\r\n                    <div class=\"form-group row\">\r\n                        <div class=\"col-12\">\r\n                            <mat-form-field [floatLabel]=\"'never'\">\r\n                            <input matInput class=\"form-control form-control-lg\" formControlName=\"forgotname\"  type=\"email\" required=\"\" placeholder=\"Email\">\r\n                        </mat-form-field>\r\n                        <mat-error class=\"error\" *ngIf=\"submitted && errorHandlingfog('forgotname', 'required')\">\r\n                            Email required.\r\n                         </mat-error>\r\n                         <mat-error class=\"error\" *ngIf=\"submitted && errorHandlingfog('forgotname', 'email')\">\r\n                            Email Invalid.\r\n                         </mat-error>\r\n                        </div>\r\n                    </div>\r\n                    <!-- pwd -->\r\n                    <div class=\"row m-t-20\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn btn-block btn-lg btn-info text-white\" type=\"submit\" (click)=\"submitEm()\" name=\"action\">Reset</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html'\r\n})\r\nexport class SignupComponent {\r\n  constructor() {}\r\n\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/big/auth-bg.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box\">\r\n        <div>\r\n            <div class=\"logo\">\r\n                <!-- <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span> -->\r\n                <h5 class=\"font-medium m-b-20\">Sign Up to Admin</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\r\n                        <div class=\"form-group row \">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center \">\r\n                            <div class=\"col-xs-12 p-b-20 \">\r\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group m-b-0 m-t-10 \">\r\n                            <div class=\"col-sm-12 text-center \">\r\n                                Already have an account? <a href=\"#/authentication/login \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup2.component.html'\r\n})\r\nexport class Signup2Component {\r\n  constructor() {}\r\n}\r\n","<div class=\"auth-wrapper d-flex no-block justify-content-center align-items-center\" style=\"background:url(assets/images/background/login-register.jpg) no-repeat center center;\">\r\n    <div class=\"auth-box on-sidebar\">\r\n        <div>\r\n            <div class=\"logo\">\r\n                <span class=\"db\"><img src=\"assets/images/logo-icon.png\" alt=\"logo\" /></span>\r\n                <h5 class=\"font-medium m-b-20\">Sign Up to Admin</h5>\r\n            </div>\r\n            <!-- Form -->\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <form class=\"form-horizontal m-t-20\" action=\"index.html\">\r\n                        <div class=\"form-group row \">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Name\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"text\" required=\" \" placeholder=\"Email\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-12 \">\r\n                                <input class=\"form-control form-control-lg\" type=\"password\" required=\" \" placeholder=\"Confirm Password\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group row\">\r\n                            <div class=\"col-md-12 \">\r\n                                <div class=\"custom-control custom-checkbox\">\r\n                                    <input type=\"checkbox\" class=\"custom-control-input\" id=\"customCheck1\">\r\n                                    <label class=\"custom-control-label\" for=\"customCheck1\">I agree to all <a href=\"javascript:void(0)\">Terms</a></label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group text-center \">\r\n                            <div class=\"col-xs-12 p-b-20 \">\r\n                                <button class=\"btn btn-block btn-lg btn-info \" type=\"submit \">SIGN UP</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group m-b-0 m-t-10 \">\r\n                            <div class=\"col-sm-12 text-center \">\r\n                                Already have an account? <a href=\"#/authentication/login2 \" class=\"text-info m-l-5 \"><b>Sign In</b></a>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>"],"sourceRoot":"webpack:///"}