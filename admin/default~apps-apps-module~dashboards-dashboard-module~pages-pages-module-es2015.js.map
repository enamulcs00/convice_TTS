{"version":3,"sources":["./node_modules/c3/c3.js","./node_modules/c3/node_modules/d3/d3.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA,IAAI,KAA4D;AAChE,IAAI,SACuB;AAC3B,CAAC,qBAAqB;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,gEAAgE,sBAAsB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,eAAe;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,QAAQ;AACrC;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uCAAuC;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACbaAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc;;AAEd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA,wCAAwC,KAA8B,GAAG,mBAAO,CAAC,mDAAI,IAAI,SAAS;AAClG;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA,wCAAwC;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,6CAA6C;;AAE7C;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,iEAAiE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb,SAAS;AACT,4CAA4C,yDAAyD;AACrG;;AAEA;AACA;AACA;;AAEA,gDAAgD;;AAEhD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,2BAA2B,4BAA4B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,8EAA8E;AAC9E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,8EAA8E;AAC9E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,8EAA8E;AAC9E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,8EAA8E;AAC9E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,oFAAoF;AACpF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,qFAAqF;AACrF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,qFAAqF;AACrF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,qFAAqF;AACrF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,qFAAqF;AACrF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,oFAAoF;AACpF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,qFAAqF;AACrF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,qFAAqF;AACrF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,qFAAqF;AACrF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,qFAAqF;AACrF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,wFAAwF;AACxF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,yFAAyF;AACzF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,yFAAyF;AACzF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,wFAAwF;AACxF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,yFAAyF;AACzF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,yFAAyF;AACzF;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,2EAA2E;AAC3E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,4EAA4E;AAC5E;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,4EAA4E;AAC5E;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,+EAA+E;AAC/E;AACA,iBAAiB;AACjB,wCAAwC;AACxC,iBAAiB,oBAAoB;AACrC,sFAAsF;AACtF;AACA,iBAAiB;AACjB,sDAAsD;AACtD,iBAAiB,oBAAoB;AACrC,mFAAmF;AACnF;AACA,iBAAiB;AACjB,gDAAgD;AAChD,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,2EAA2E;AAC3E;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,4EAA4E;AAC5E;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,4EAA4E;AAC5E;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,+EAA+E;AAC/E;AACA,iBAAiB;AACjB,wCAAwC;AACxC,iBAAiB,oBAAoB;AACrC,sFAAsF;AACtF;AACA,iBAAiB;AACjB,sDAAsD;AACtD,iBAAiB,oBAAoB;AACrC,mFAAmF;AACnF;AACA,iBAAiB;AACjB,gDAAgD;AAChD,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF;AACxF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF;AACtF;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,0FAA0F;AAC1F;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,2FAA2F;AAC3F;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,2FAA2F;AAC3F;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,0FAA0F;AAC1F;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,2FAA2F;AAC3F;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;AACrC,2FAA2F;AAC3F;AACA,iBAAiB;AACjB,kCAAkC;AAClC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,8FAA8F;AAC9F;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;AACrC,8FAA8F;AAC9F;AACA,iBAAiB;AACjB,gCAAgC;AAChC,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;AAChD;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,6FAA6F;AAC7F;AACA,iBAAiB,oBAAoB;AACrC,2FAA2F;AAC3F;AACA,iBAAiB,oBAAoB;AACrC,qGAAqG;AACrG;AACA,iBAAiB,oBAAoB;;AAErC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,oIAAoI;AACpI;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sDAAsD,sCAAsC;;AAE5F;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,mFAAmF;AACnF;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,sDAAsD;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,sDAAsD;AAC7E,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,6EAA6E;AACzG;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,uBAAuB,wBAAwB;AAC/C;AACA;AACA,+BAA+B,YAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,0DAA0D;;AAE1D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qEAAqE;;AAErE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;AACA;AACA;AACA;AACA,4BAA4B,mBAAmB;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT,oBAAoB;AACpB;AACA;AACA,uBAAuB,wEAAwE;AAC/F;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sCAAsC;AACtC,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,mBAAmB,wEAAwE;AAC3F;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA,mBAAmB,wEAAwE;AAC3F;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6DAA6D,sBAAsB;AACnF;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,sDAAsD;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sDAAsD;AAC7E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,uBAAuB,yDAAyD;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,6EAA6E;AACvH,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,WAAW;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD,4DAA4D;AAC5D,wDAAwD;AACxD;AACA;AACA;AACA;AACA,kDAAkD;AAClD,gDAAgD;AAChD,4CAA4C;AAC5C,8CAA8C;AAC9C,wCAAwC;AACxC,gDAAgD;AAChD;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,0BAA0B;AAC1B,4BAA4B;AAC5B;AACA,yBAAyB;AACzB;AACA,0BAA0B;AAC1B,2BAA2B;AAC3B;AACA,4BAA4B;AAC5B;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oDAAoD;AACpD,4DAA4D;AAC5D,0DAA0D;AAC1D,0DAA0D;AAC1D,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,oCAAoC,2BAA2B;AAC/D,wDAAwD;AACxD,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,kEAAkE,wBAAwB;AAC1F;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD,uCAAuC;AACvC;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA,uBAAuB,iBAAiB;AACxC;AACA,2BAA2B,oBAAoB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;;AAEA,uBAAuB,oBAAoB;AAC3C;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA,iBAAiB;AACjB;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gBAAgB;AACnC;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ;AACnC;AACA;AACA;AACA;AACA;AACA,uBAAuB,mBAAmB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC,OAAO;AAC1C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,mBAAmB,mBAAmB;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,8DAA8D;AAC9D;;AAEA;AACA;;AAEA;AACA,mBAAmB,wEAAwE;;AAE3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS,kBAAkB;AAC3B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS,kBAAkB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,iFAAiF;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,uBAAuB;AACvB,wBAAwB;AACxB;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,uBAAuB,+BAA+B;AACtD;AACA;AACA;AACA,2BAA2B,kCAAkC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,cAAc;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,QAAQ;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,wFAAwF,WAAW;AACnG;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE;AAClE,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sCAAsC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mBAAmB,cAAc;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;;AAEA,CAAC;;;;;;;;;;;;ACvoSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE;AACtE,KAAK;AACL,wFAAwF;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,SAAS;AAC/F,4DAA4D,SAAS;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA,wEAAwE;AACxE,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,EAAE;AACpD,sBAAsB;AACtB;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C,yDAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,OAAO;AACP,oBAAoB,UAAU;AAC9B;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C,4EAA4E,UAAU;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,sCAAsC,OAAO;AAC7C,gEAAgE,OAAO;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA,wCAAwC,SAAS;AACjkEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,OAAO;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,OAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,wCAAwgBAAgB,iFAAiF;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA,SAAS,gBAAgB;AACzB;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,kBAAkB,UAAU;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,sEAAsE,6BAA6B;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,gEAAgE,QAAQ;AACxuBAAuB,OAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6DAA6D,OAAO;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,OAAO;AACrD,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,2CAA2C,QAAQ;AACnD,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B,oEAAoE,OAAO;AAC3E;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,4CAA4C;AAC5C;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbiCAAiC;AAChiBAAiB,OAAO;AACxB;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,gCAAgC,QAAQ;AACxC,yBAAyB,8BAA8B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA,OAAO;AACP,kCAAkC;AACluCAAuC;AACvC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iBAAiB,OAAO;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,wBAAwB,OAAO;AAC/B;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,eAAe,QAAQ;AACvB,UAAU,OAAO;AACjB,UAAU,OAAO;AACjB;AACA,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,8BAA8B;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnkBAAkB;AAClB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,OAAO;AACxiBAAiB,OAAO;AACxB;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO,2DAA2D,iBAAiB,OAAO;AACnJ;AACA,yDAAyD,OAAO,2DAA2D,iBAAiB,OAAO;AACnJ;AACA,mDAAmD,OAAO,mDAAmD,iBAAiB,OAAO;AACrI;AACA;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,0BAA0B,OAAO;AACjC;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,2BAA2B,OAAO;AAClC,uDAAuD,OAAO;AAC9D,0EAA0E,OAAO;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA,KAAK;AACL;AACA;AACA,iBAAiB,OAAO;AACxB,0BAA0B,OAAO;AACjC,0BAA0B,OAAO,yBAAyB,iBAAiB,OAAO;AAClF;AACA,iBAAiB,OAAO;AACxB;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,OAAO;AAC1B;AACA;AACA,gCAAgC,SAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,iFAAiF;AACjF;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,8BAA8B,OAAO;AACrgCAAgC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM,qBAAqB,OAAO;AAClD;AACA,SAAS;AACT;AACA,gBAAgB,QAAQ,sBAAsB,OAAO;AACrD;AACA,mBAAmB,cAAc;AACjC,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqoEAAoE;AACpqCAAqC,SAAS;AAC9C;AACA,yDAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA,yDAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C,yDAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,oCAAoC,OAAO;AAC3C;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,0BAA0B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,MAAM,IAA0C,gBAAgB,oCAAO,EAAE;AAAA;AAAA;AAAA;AAAA,oGAAC,CAAC,MAAM,EAAyF;AAC1K,CAAC,G","file":"default~apps-apps-module~dashboards-dashboard-module~pages-pages-module-es2015.js","sourcesContent":["/* @license C3.js v0.4.24 | (c) C3 Team and other contributors | http://c3js.org/ */\r\n(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    (global.c3 = factory());\r\n}(this, (function () { 'use strict';\r\n\r\n    var CLASS = {\r\n        target: 'c3-target',\r\n        chart: 'c3-chart',\r\n        chartLine: 'c3-chart-line',\r\n        chartLines: 'c3-chart-lines',\r\n        chartBar: 'c3-chart-bar',\r\n        chartBars: 'c3-chart-bars',\r\n        chartText: 'c3-chart-text',\r\n        chartTexts: 'c3-chart-texts',\r\n        chartArc: 'c3-chart-arc',\r\n        chartArcs: 'c3-chart-arcs',\r\n        chartArcsTitle: 'c3-chart-arcs-title',\r\n        chartArcsBackground: 'c3-chart-arcs-background',\r\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\r\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\r\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\r\n        selectedCircle: 'c3-selected-circle',\r\n        selectedCircles: 'c3-selected-circles',\r\n        eventRect: 'c3-event-rect',\r\n        eventRects: 'c3-event-rects',\r\n        eventRectsSingle: 'c3-event-rects-single',\r\n        eventRectsMultiple: 'c3-event-rects-multiple',\r\n        zoomRect: 'c3-zoom-rect',\r\n        brush: 'c3-brush',\r\n        focused: 'c3-focused',\r\n        defocused: 'c3-defocused',\r\n        region: 'c3-region',\r\n        regions: 'c3-regions',\r\n        title: 'c3-title',\r\n        tooltipContainer: 'c3-tooltip-container',\r\n        tooltip: 'c3-tooltip',\r\n        tooltipName: 'c3-tooltip-name',\r\n        shape: 'c3-shape',\r\n        shapes: 'c3-shapes',\r\n        line: 'c3-line',\r\n        lines: 'c3-lines',\r\n        bar: 'c3-bar',\r\n        bars: 'c3-bars',\r\n        circle: 'c3-circle',\r\n        circles: 'c3-circles',\r\n        arc: 'c3-arc',\r\n        arcLabelLine: 'c3-arc-label-line',\r\n        arcs: 'c3-arcs',\r\n        area: 'c3-area',\r\n        areas: 'c3-areas',\r\n        empty: 'c3-empty',\r\n        text: 'c3-text',\r\n        texts: 'c3-texts',\r\n        gaugeValue: 'c3-gauge-value',\r\n        grid: 'c3-grid',\r\n        gridLines: 'c3-grid-lines',\r\n        xgrid: 'c3-xgrid',\r\n        xgrids: 'c3-xgrids',\r\n        xgridLine: 'c3-xgrid-line',\r\n        xgridLines: 'c3-xgrid-lines',\r\n        xgridFocus: 'c3-xgrid-focus',\r\n        ygrid: 'c3-ygrid',\r\n        ygrids: 'c3-ygrids',\r\n        ygridLine: 'c3-ygrid-line',\r\n        ygridLines: 'c3-ygrid-lines',\r\n        axis: 'c3-axis',\r\n        axisX: 'c3-axis-x',\r\n        axisXLabel: 'c3-axis-x-label',\r\n        axisY: 'c3-axis-y',\r\n        axisYLabel: 'c3-axis-y-label',\r\n        axisY2: 'c3-axis-y2',\r\n        axisY2Label: 'c3-axis-y2-label',\r\n        legendBackground: 'c3-legend-background',\r\n        legendItem: 'c3-legend-item',\r\n        legendItemEvent: 'c3-legend-item-event',\r\n        legendItemTile: 'c3-legend-item-tile',\r\n        legendItemHidden: 'c3-legend-item-hidden',\r\n        legendItemFocused: 'c3-legend-item-focused',\r\n        dragarea: 'c3-dragarea',\r\n        EXPANDED: '_expanded_',\r\n        SELECTED: '_selected_',\r\n        INCLUDED: '_included_'\r\n    };\r\n\r\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\r\n      return typeof obj;\r\n    } : function (obj) {\r\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n    };\r\n\r\n    var classCallCheck = function (instance, Constructor) {\r\n      if (!(instance instanceof Constructor)) {\r\n        throw new TypeError(\"Cannot call a class as a function\");\r\n      }\r\n    };\r\n\r\n    var inherits = function (subClass, superClass) {\r\n      if (typeof superClass !== \"function\" && superClass !== null) {\r\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\r\n      }\r\n\r\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n        constructor: {\r\n          value: subClass,\r\n          enumerable: false,\r\n          writable: true,\r\n          configurable: true\r\n        }\r\n      });\r\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\r\n    };\r\n\r\n    var possibleConstructorReturn = function (self, call) {\r\n      if (!self) {\r\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n      }\r\n\r\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\r\n    };\r\n\r\n    var isValue = function isValue(v) {\r\n        return v || v === 0;\r\n    };\r\n    var isFunction = function isFunction(o) {\r\n        return typeof o === 'function';\r\n    };\r\n    var isArray = function isArray(o) {\r\n        return Array.isArray(o);\r\n    };\r\n    var isString = function isString(o) {\r\n        return typeof o === 'string';\r\n    };\r\n    var isUndefined = function isUndefined(v) {\r\n        return typeof v === 'undefined';\r\n    };\r\n    var isDefined = function isDefined(v) {\r\n        return typeof v !== 'undefined';\r\n    };\r\n    var ceil10 = function ceil10(v) {\r\n        return Math.ceil(v / 10) * 10;\r\n    };\r\n    var asHalfPixel = function asHalfPixel(n) {\r\n        return Math.ceil(n) + 0.5;\r\n    };\r\n    var diffDomain = function diffDomain(d) {\r\n        return d[1] - d[0];\r\n    };\r\n    var isEmpty = function isEmpty(o) {\r\n        return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\r\n    };\r\n    var notEmpty = function notEmpty(o) {\r\n        return !c3_chart_internal_fn.isEmpty(o);\r\n    };\r\n    var getOption = function getOption(options, key, defaultValue) {\r\n        return isDefined(options[key]) ? options[key] : defaultValue;\r\n    };\r\n    var hasValue = function hasValue(dict, value) {\r\n        var found = false;\r\n        Object.keys(dict).forEach(function (key) {\r\n            if (dict[key] === value) {\r\n                found = true;\r\n            }\r\n        });\r\n        return found;\r\n    };\r\n    var sanitise = function sanitise(str) {\r\n        return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\r\n    };\r\n    var getPathBox = function getPathBox(path) {\r\n        var box = path.getBoundingClientRect(),\r\n            items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\r\n            minX = items[0].x,\r\n            minY = Math.min(items[0].y, items[1].y);\r\n        return { x: minX, y: minY, width: box.width, height: box.height };\r\n    };\r\n\r\n    var c3_axis_fn;\r\n    var c3_axis_internal_fn;\r\n\r\n    function AxisInternal(component, params) {\r\n        var internal = this;\r\n        internal.component = component;\r\n        internal.params = params || {};\r\n\r\n        internal.d3 = component.d3;\r\n        internal.scale = internal.d3.scale.linear();\r\n        internal.range;\r\n        internal.orient = \"bottom\";\r\n        internal.innerTickSize = 6;\r\n        internal.outerTickSize = this.params.withOuterTick ? 6 : 0;\r\n        internal.tickPadding = 3;\r\n        internal.tickValues = null;\r\n        internal.tickFormat;\r\n        internal.tickArguments;\r\n\r\n        internal.tickOffset = 0;\r\n        internal.tickCulling = true;\r\n        internal.tickCentered;\r\n        internal.tickTextCharSize;\r\n        internal.tickTextRotate = internal.params.tickTextRotate;\r\n        internal.tickLength;\r\n\r\n        internal.axis = internal.generateAxis();\r\n    }\r\n    c3_axis_internal_fn = AxisInternal.prototype;\r\n\r\n    c3_axis_internal_fn.axisX = function (selection, x, tickOffset) {\r\n        selection.attr(\"transform\", function (d) {\r\n            return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\r\n        });\r\n    };\r\n    c3_axis_internal_fn.axisY = function (selection, y) {\r\n        selection.attr(\"transform\", function (d) {\r\n            return \"translate(0,\" + Math.ceil(y(d)) + \")\";\r\n        });\r\n    };\r\n    c3_axis_internal_fn.scaleExtent = function (domain) {\r\n        var start = domain[0],\r\n            stop = domain[domain.length - 1];\r\n        return start < stop ? [start, stop] : [stop, start];\r\n    };\r\n    c3_axis_internal_fn.generateTicks = function (scale) {\r\n        var internal = this;\r\n        var i,\r\n            domain,\r\n            ticks = [];\r\n        if (scale.ticks) {\r\n            return scale.ticks.apply(scale, internal.tickArguments);\r\n        }\r\n        domain = scale.domain();\r\n        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\r\n            ticks.push(i);\r\n        }\r\n        if (ticks.length > 0 && ticks[0] > 0) {\r\n            ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\r\n        }\r\n        return ticks;\r\n    };\r\n    c3_axis_internal_fn.copyScale = function () {\r\n        var internal = this;\r\n        var newScale = internal.scale.copy(),\r\n            domain;\r\n        if (internal.params.isCategory) {\r\n            domain = internal.scale.domain();\r\n            newScale.domain([domain[0], domain[1] - 1]);\r\n        }\r\n        return newScale;\r\n    };\r\n    c3_axis_internal_fn.textFormatted = function (v) {\r\n        var internal = this,\r\n            formatted = internal.tickFormat ? internal.tickFormat(v) : v;\r\n        return typeof formatted !== 'undefined' ? formatted : '';\r\n    };\r\n    c3_axis_internal_fn.updateRange = function () {\r\n        var internal = this;\r\n        internal.range = internal.scale.rangeExtent ? internal.scale.rangeExtent() : internal.scaleExtent(internal.scale.range());\r\n        return internal.range;\r\n    };\r\n    c3_axis_internal_fn.updateTickTextCharSize = function (tick) {\r\n        var internal = this;\r\n        if (internal.tickTextCharSize) {\r\n            return internal.tickTextCharSize;\r\n        }\r\n        var size = {\r\n            h: 11.5,\r\n            w: 5.5\r\n        };\r\n        tick.select('text').text(function (d) {\r\n            return internal.textFormatted(d);\r\n        }).each(function (d) {\r\n            var box = this.getBoundingClientRect(),\r\n                text = internal.textFormatted(d),\r\n                h = box.height,\r\n                w = text ? box.width / text.length : undefined;\r\n            if (h && w) {\r\n                size.h = h;\r\n                size.w = w;\r\n            }\r\n        }).text('');\r\n        internal.tickTextCharSize = size;\r\n        return size;\r\n    };\r\n    c3_axis_internal_fn.transitionise = function (selection) {\r\n        return this.params.withoutTransition ? selection : this.d3.transition(selection);\r\n    };\r\n    c3_axis_internal_fn.isVertical = function () {\r\n        return this.orient === 'left' || this.orient === 'right';\r\n    };\r\n    c3_axis_internal_fn.tspanData = function (d, i, ticks, scale) {\r\n        var internal = this;\r\n        var splitted = internal.params.tickMultiline ? internal.splitTickText(d, ticks, scale) : [].concat(internal.textFormatted(d));\r\n\r\n        if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {\r\n            splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);\r\n        }\r\n\r\n        return splitted.map(function (s) {\r\n            return { index: i, splitted: s, length: splitted.length };\r\n        });\r\n    };\r\n    c3_axis_internal_fn.splitTickText = function (d, ticks, scale) {\r\n        var internal = this,\r\n            tickText = internal.textFormatted(d),\r\n            maxWidth = internal.params.tickWidth,\r\n            subtext,\r\n            spaceIndex,\r\n            textWidth,\r\n            splitted = [];\r\n\r\n        if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\r\n            return tickText;\r\n        }\r\n\r\n        if (!maxWidth || maxWidth <= 0) {\r\n            maxWidth = internal.isVertical() ? 95 : internal.params.isCategory ? Math.ceil(scale(ticks[1]) - scale(ticks[0])) - 12 : 110;\r\n        }\r\n\r\n        function split(splitted, text) {\r\n            spaceIndex = undefined;\r\n            for (var i = 1; i < text.length; i++) {\r\n                if (text.charAt(i) === ' ') {\r\n                    spaceIndex = i;\r\n                }\r\n                subtext = text.substr(0, i + 1);\r\n                textWidth = internal.tickTextCharSize.w * subtext.length;\r\n                // if text width gets over tick width, split by space index or crrent index\r\n                if (maxWidth < textWidth) {\r\n                    return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\r\n                }\r\n            }\r\n            return splitted.concat(text);\r\n        }\r\n\r\n        return split(splitted, tickText + \"\");\r\n    };\r\n    c3_axis_internal_fn.ellipsify = function (splitted, max) {\r\n        if (splitted.length <= max) {\r\n            return splitted;\r\n        }\r\n\r\n        var ellipsified = splitted.slice(0, max);\r\n        var remaining = 3;\r\n        for (var i = max - 1; i >= 0; i--) {\r\n            var available = ellipsified[i].length;\r\n\r\n            ellipsified[i] = ellipsified[i].substr(0, available - remaining).padEnd(available, '.');\r\n\r\n            remaining -= available;\r\n\r\n            if (remaining <= 0) {\r\n                break;\r\n            }\r\n        }\r\n\r\n        return ellipsified;\r\n    };\r\n    c3_axis_internal_fn.updateTickLength = function () {\r\n        var internal = this;\r\n        internal.tickLength = Math.max(internal.innerTickSize, 0) + internal.tickPadding;\r\n    };\r\n    c3_axis_internal_fn.lineY2 = function (d) {\r\n        var internal = this,\r\n            tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);\r\n        return internal.range[0] < tickPosition && tickPosition < internal.range[1] ? internal.innerTickSize : 0;\r\n    };\r\n    c3_axis_internal_fn.textY = function () {\r\n        var internal = this,\r\n            rotate = internal.tickTextRotate;\r\n        return rotate ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1) : internal.tickLength;\r\n    };\r\n    c3_axis_internal_fn.textTransform = function () {\r\n        var internal = this,\r\n            rotate = internal.tickTextRotate;\r\n        return rotate ? \"rotate(\" + rotate + \")\" : \"\";\r\n    };\r\n    c3_axis_internal_fn.textTextAnchor = function () {\r\n        var internal = this,\r\n            rotate = internal.tickTextRotate;\r\n        return rotate ? rotate > 0 ? \"start\" : \"end\" : \"middle\";\r\n    };\r\n    c3_axis_internal_fn.tspanDx = function () {\r\n        var internal = this,\r\n            rotate = internal.tickTextRotate;\r\n        return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;\r\n    };\r\n    c3_axis_internal_fn.tspanDy = function (d, i) {\r\n        var internal = this,\r\n            dy = internal.tickTextCharSize.h;\r\n        if (i === 0) {\r\n            if (internal.isVertical()) {\r\n                dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);\r\n            } else {\r\n                dy = \".71em\";\r\n            }\r\n        }\r\n        return dy;\r\n    };\r\n\r\n    c3_axis_internal_fn.generateAxis = function () {\r\n        var internal = this,\r\n            d3 = internal.d3,\r\n            params = internal.params;\r\n        function axis(g) {\r\n            g.each(function () {\r\n                var g = axis.g = d3.select(this);\r\n\r\n                var scale0 = this.__chart__ || internal.scale,\r\n                    scale1 = this.__chart__ = internal.copyScale();\r\n\r\n                var ticks = internal.tickValues ? internal.tickValues : internal.generateTicks(scale1),\r\n                    tick = g.selectAll(\".tick\").data(ticks, scale1),\r\n                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\r\n\r\n                // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\r\n                tickExit = tick.exit().remove(),\r\n                    tickUpdate = internal.transitionise(tick).style(\"opacity\", 1),\r\n                    tickTransform,\r\n                    tickX,\r\n                    tickY;\r\n\r\n                if (params.isCategory) {\r\n                    internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\r\n                    tickX = internal.tickCentered ? 0 : internal.tickOffset;\r\n                    tickY = internal.tickCentered ? internal.tickOffset : 0;\r\n                } else {\r\n                    internal.tickOffset = tickX = 0;\r\n                }\r\n\r\n                tickEnter.append(\"line\");\r\n                tickEnter.append(\"text\");\r\n\r\n                internal.updateRange();\r\n                internal.updateTickLength();\r\n                internal.updateTickTextCharSize(g.select('.tick'));\r\n\r\n                var lineUpdate = tickUpdate.select(\"line\"),\r\n                    textUpdate = tickUpdate.select(\"text\"),\r\n                    tspanUpdate = tick.select(\"text\").selectAll('tspan').data(function (d, i) {\r\n                    return internal.tspanData(d, i, ticks, scale1);\r\n                });\r\n\r\n                tspanUpdate.enter().append('tspan');\r\n                tspanUpdate.exit().remove();\r\n                tspanUpdate.text(function (d) {\r\n                    return d.splitted;\r\n                });\r\n\r\n                var path = g.selectAll(\".domain\").data([0]),\r\n                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), internal.transitionise(path));\r\n\r\n                // TODO: each attr should be one function and change its behavior by internal.orient, probably\r\n                switch (internal.orient) {\r\n                    case \"bottom\":\r\n                        {\r\n                            tickTransform = internal.axisX;\r\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\r\n                                return internal.lineY2(d, i);\r\n                            });\r\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\r\n                                return internal.textY(d, i);\r\n                            }).attr(\"transform\", function (d, i) {\r\n                                return internal.textTransform(d, i);\r\n                            }).style(\"text-anchor\", function (d, i) {\r\n                                return internal.textTextAnchor(d, i);\r\n                            });\r\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\r\n                                return internal.tspanDy(d, i);\r\n                            }).attr('dx', function (d, i) {\r\n                                return internal.tspanDx(d, i);\r\n                            });\r\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + internal.outerTickSize);\r\n                            break;\r\n                        }\r\n                    case \"top\":\r\n                        {\r\n                            // TODO: rotated tick text\r\n                            tickTransform = internal.axisX;\r\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\r\n                                return -1 * internal.lineY2(d, i);\r\n                            });\r\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\r\n                                return -1 * internal.textY(d, i) - (params.isCategory ? 2 : internal.tickLength - 2);\r\n                            }).attr(\"transform\", function (d, i) {\r\n                                return internal.textTransform(d, i);\r\n                            }).style(\"text-anchor\", function (d, i) {\r\n                                return internal.textTextAnchor(d, i);\r\n                            });\r\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\r\n                                return internal.tspanDy(d, i);\r\n                            }).attr('dx', function (d, i) {\r\n                                return internal.tspanDx(d, i);\r\n                            });\r\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + -internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + -internal.outerTickSize);\r\n                            break;\r\n                        }\r\n                    case \"left\":\r\n                        {\r\n                            tickTransform = internal.axisY;\r\n                            lineUpdate.attr(\"x2\", -internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\r\n                            textUpdate.attr(\"x\", -internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"end\");\r\n                            tspanUpdate.attr('x', -internal.tickLength).attr(\"dy\", function (d, i) {\r\n                                return internal.tspanDy(d, i);\r\n                            });\r\n                            pathUpdate.attr(\"d\", \"M\" + -internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + -internal.outerTickSize);\r\n                            break;\r\n                        }\r\n                    case \"right\":\r\n                        {\r\n                            tickTransform = internal.axisY;\r\n                            lineUpdate.attr(\"x2\", internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\r\n                            textUpdate.attr(\"x\", internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"start\");\r\n                            tspanUpdate.attr('x', internal.tickLength).attr(\"dy\", function (d, i) {\r\n                                return internal.tspanDy(d, i);\r\n                            });\r\n                            pathUpdate.attr(\"d\", \"M\" + internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + internal.outerTickSize);\r\n                            break;\r\n                        }\r\n                }\r\n                if (scale1.rangeBand) {\r\n                    var x = scale1,\r\n                        dx = x.rangeBand() / 2;\r\n                    scale0 = scale1 = function scale1(d) {\r\n                        return x(d) + dx;\r\n                    };\r\n                } else if (scale0.rangeBand) {\r\n                    scale0 = scale1;\r\n                } else {\r\n                    tickExit.call(tickTransform, scale1, internal.tickOffset);\r\n                }\r\n                tickEnter.call(tickTransform, scale0, internal.tickOffset);\r\n                tickUpdate.call(tickTransform, scale1, internal.tickOffset);\r\n            });\r\n        }\r\n        axis.scale = function (x) {\r\n            if (!arguments.length) {\r\n                return internal.scale;\r\n            }\r\n            internal.scale = x;\r\n            return axis;\r\n        };\r\n        axis.orient = function (x) {\r\n            if (!arguments.length) {\r\n                return internal.orient;\r\n            }\r\n            internal.orient = x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + \"\" : \"bottom\";\r\n            return axis;\r\n        };\r\n        axis.tickFormat = function (format) {\r\n            if (!arguments.length) {\r\n                return internal.tickFormat;\r\n            }\r\n            internal.tickFormat = format;\r\n            return axis;\r\n        };\r\n        axis.tickCentered = function (isCentered) {\r\n            if (!arguments.length) {\r\n                return internal.tickCentered;\r\n            }\r\n            internal.tickCentered = isCentered;\r\n            return axis;\r\n        };\r\n        axis.tickOffset = function () {\r\n            return internal.tickOffset;\r\n        };\r\n        axis.tickInterval = function () {\r\n            var interval, length;\r\n            if (params.isCategory) {\r\n                interval = internal.tickOffset * 2;\r\n            } else {\r\n                length = axis.g.select('path.domain').node().getTotalLength() - internal.outerTickSize * 2;\r\n                interval = length / axis.g.selectAll('line').size();\r\n            }\r\n            return interval === Infinity ? 0 : interval;\r\n        };\r\n        axis.ticks = function () {\r\n            if (!arguments.length) {\r\n                return internal.tickArguments;\r\n            }\r\n            internal.tickArguments = arguments;\r\n            return axis;\r\n        };\r\n        axis.tickCulling = function (culling) {\r\n            if (!arguments.length) {\r\n                return internal.tickCulling;\r\n            }\r\n            internal.tickCulling = culling;\r\n            return axis;\r\n        };\r\n        axis.tickValues = function (x) {\r\n            if (typeof x === 'function') {\r\n                internal.tickValues = function () {\r\n                    return x(internal.scale.domain());\r\n                };\r\n            } else {\r\n                if (!arguments.length) {\r\n                    return internal.tickValues;\r\n                }\r\n                internal.tickValues = x;\r\n            }\r\n            return axis;\r\n        };\r\n        return axis;\r\n    };\r\n\r\n    var Axis = function (_Component) {\r\n        inherits(Axis, _Component);\r\n\r\n        function Axis(owner) {\r\n            classCallCheck(this, Axis);\r\n\r\n            var fn = {\r\n                fn: c3_axis_fn,\r\n                internal: {\r\n                    fn: c3_axis_internal_fn\r\n                }\r\n            };\r\n\r\n            var _this = possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, owner, 'axis', fn));\r\n\r\n            _this.d3 = owner.d3;\r\n            _this.internal = AxisInternal;\r\n            return _this;\r\n        }\r\n\r\n        return Axis;\r\n    }(Component);\r\n\r\n    c3_axis_fn = Axis.prototype;\r\n\r\n    c3_axis_fn.init = function init() {\r\n        var $$ = this.owner,\r\n            config = $$.config,\r\n            main = $$.main;\r\n        $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", config.axis_x_inner ? \"\" : $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\r\n        $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\r\n        $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\r\n        $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\r\n\r\n        $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\r\n        // clip-path?\r\n        .attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\r\n        $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\r\n    };\r\n    c3_axis_fn.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\r\n        var $$ = this.owner,\r\n            config = $$.config,\r\n            axisParams = {\r\n            isCategory: $$.isCategorized(),\r\n            withOuterTick: withOuterTick,\r\n            tickMultiline: config.axis_x_tick_multiline,\r\n            tickMultilineMax: config.axis_x_tick_multiline ? Number(config.axis_x_tick_multilineMax) : 0,\r\n            tickWidth: config.axis_x_tick_width,\r\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\r\n            withoutTransition: withoutTransition\r\n        },\r\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);\r\n\r\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\r\n            tickValues = tickValues.map(function (v) {\r\n                return $$.parseDate(v);\r\n            });\r\n        }\r\n\r\n        // Set tick\r\n        axis.tickFormat(tickFormat).tickValues(tickValues);\r\n        if ($$.isCategorized()) {\r\n            axis.tickCentered(config.axis_x_tick_centered);\r\n            if (isEmpty(config.axis_x_tick_culling)) {\r\n                config.axis_x_tick_culling = false;\r\n            }\r\n        }\r\n\r\n        return axis;\r\n    };\r\n    c3_axis_fn.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\r\n        var $$ = this.owner,\r\n            config = $$.config,\r\n            tickValues;\r\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\r\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\r\n        }\r\n        if (axis) {\r\n            axis.tickValues(tickValues);\r\n        } else {\r\n            $$.xAxis.tickValues(tickValues);\r\n            $$.subXAxis.tickValues(tickValues);\r\n        }\r\n        return tickValues;\r\n    };\r\n    c3_axis_fn.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\r\n        var $$ = this.owner,\r\n            config = $$.config,\r\n            axisParams = {\r\n            withOuterTick: withOuterTick,\r\n            withoutTransition: withoutTransition,\r\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\r\n        },\r\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient).tickFormat(tickFormat);\r\n        if ($$.isTimeSeriesY()) {\r\n            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\r\n        } else {\r\n            axis.tickValues(tickValues);\r\n        }\r\n        return axis;\r\n    };\r\n    c3_axis_fn.getId = function getId(id) {\r\n        var config = this.owner.config;\r\n        return id in config.data_axes ? config.data_axes[id] : 'y';\r\n    };\r\n    c3_axis_fn.getXAxisTickFormat = function getXAxisTickFormat() {\r\n        var $$ = this.owner,\r\n            config = $$.config,\r\n            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\r\n            return v < 0 ? v.toFixed(0) : v;\r\n        };\r\n        if (config.axis_x_tick_format) {\r\n            if (isFunction(config.axis_x_tick_format)) {\r\n                format = config.axis_x_tick_format;\r\n            } else if ($$.isTimeSeries()) {\r\n                format = function format(date) {\r\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\r\n                };\r\n            }\r\n        }\r\n        return isFunction(format) ? function (v) {\r\n            return format.call($$, v);\r\n        } : format;\r\n    };\r\n    c3_axis_fn.getTickValues = function getTickValues(tickValues, axis) {\r\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\r\n    };\r\n    c3_axis_fn.getXAxisTickValues = function getXAxisTickValues() {\r\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\r\n    };\r\n    c3_axis_fn.getYAxisTickValues = function getYAxisTickValues() {\r\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\r\n    };\r\n    c3_axis_fn.getY2AxisTickValues = function getY2AxisTickValues() {\r\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\r\n    };\r\n    c3_axis_fn.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\r\n        var $$ = this.owner,\r\n            config = $$.config,\r\n            option;\r\n        if (axisId === 'y') {\r\n            option = config.axis_y_label;\r\n        } else if (axisId === 'y2') {\r\n            option = config.axis_y2_label;\r\n        } else if (axisId === 'x') {\r\n            option = config.axis_x_label;\r\n        }\r\n        return option;\r\n    };\r\n    c3_axis_fn.getLabelText = function getLabelText(axisId) {\r\n        var option = this.getLabelOptionByAxisId(axisId);\r\n        return isString(option) ? option : option ? option.text : null;\r\n    };\r\n    c3_axis_fn.setLabelText = function setLabelText(axisId, text) {\r\n        var $$ = this.owner,\r\n            config = $$.config,\r\n            option = this.getLabelOptionByAxisId(axisId);\r\n        if (isString(option)) {\r\n            if (axisId === 'y') {\r\n                config.axis_y_label = text;\r\n            } else if (axisId === 'y2') {\r\n                config.axis_y2_label = text;\r\n            } else if (axisId === 'x') {\r\n                config.axis_x_label = text;\r\n            }\r\n        } else if (option) {\r\n            option.text = text;\r\n        }\r\n    };\r\n    c3_axis_fn.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\r\n        var option = this.getLabelOptionByAxisId(axisId),\r\n            position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\r\n        return {\r\n            isInner: position.indexOf('inner') >= 0,\r\n            isOuter: position.indexOf('outer') >= 0,\r\n            isLeft: position.indexOf('left') >= 0,\r\n            isCenter: position.indexOf('center') >= 0,\r\n            isRight: position.indexOf('right') >= 0,\r\n            isTop: position.indexOf('top') >= 0,\r\n            isMiddle: position.indexOf('middle') >= 0,\r\n            isBottom: position.indexOf('bottom') >= 0\r\n        };\r\n    };\r\n    c3_axis_fn.getXAxisLabelPosition = function getXAxisLabelPosition() {\r\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\r\n    };\r\n    c3_axis_fn.getYAxisLabelPosition = function getYAxisLabelPosition() {\r\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\r\n    };\r\n    c3_axis_fn.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\r\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\r\n    };\r\n    c3_axis_fn.getLabelPositionById = function getLabelPositionById(id) {\r\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\r\n    };\r\n    c3_axis_fn.textForXAxisLabel = function textForXAxisLabel() {\r\n        return this.getLabelText('x');\r\n    };\r\n    c3_axis_fn.textForYAxisLabel = function textForYAxisLabel() {\r\n        return this.getLabelText('y');\r\n    };\r\n    c3_axis_fn.textForY2AxisLabel = function textForY2AxisLabel() {\r\n        return this.getLabelText('y2');\r\n    };\r\n    c3_axis_fn.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\r\n        var $$ = this.owner;\r\n        if (forHorizontal) {\r\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\r\n        } else {\r\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\r\n        }\r\n    };\r\n    c3_axis_fn.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\r\n        if (forHorizontal) {\r\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\r\n        } else {\r\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\r\n        }\r\n    };\r\n    c3_axis_fn.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\r\n        if (forHorizontal) {\r\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\r\n        } else {\r\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\r\n        }\r\n    };\r\n    c3_axis_fn.xForXAxisLabel = function xForXAxisLabel() {\r\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\r\n    };\r\n    c3_axis_fn.xForYAxisLabel = function xForYAxisLabel() {\r\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\r\n    };\r\n    c3_axis_fn.xForY2AxisLabel = function xForY2AxisLabel() {\r\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\r\n    };\r\n    c3_axis_fn.dxForXAxisLabel = function dxForXAxisLabel() {\r\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\r\n    };\r\n    c3_axis_fn.dxForYAxisLabel = function dxForYAxisLabel() {\r\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\r\n    };\r\n    c3_axis_fn.dxForY2AxisLabel = function dxForY2AxisLabel() {\r\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\r\n    };\r\n    c3_axis_fn.dyForXAxisLabel = function dyForXAxisLabel() {\r\n        var $$ = this.owner,\r\n            config = $$.config,\r\n            position = this.getXAxisLabelPosition();\r\n        if (config.axis_rotated) {\r\n            return position.isInner ? \"1.2em\" : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));\r\n        } else {\r\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\r\n        }\r\n    };\r\n    c3_axis_fn.dyForYAxisLabel = function dyForYAxisLabel() {\r\n        var $$ = this.owner,\r\n            position = this.getYAxisLabelPosition();\r\n        if ($$.config.axis_rotated) {\r\n            return position.isInner ? \"-0.5em\" : \"3em\";\r\n        } else {\r\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\r\n        }\r\n    };\r\n    c3_axis_fn.dyForY2AxisLabel = function dyForY2AxisLabel() {\r\n        var $$ = this.owner,\r\n            position = this.getY2AxisLabelPosition();\r\n        if ($$.config.axis_rotated) {\r\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\r\n        } else {\r\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\r\n        }\r\n    };\r\n    c3_axis_fn.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\r\n        var $$ = this.owner;\r\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\r\n    };\r\n    c3_axis_fn.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\r\n        var $$ = this.owner;\r\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\r\n    };\r\n    c3_axis_fn.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\r\n        var $$ = this.owner;\r\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\r\n    };\r\n    c3_axis_fn.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\r\n        var $$ = this.owner,\r\n            config = $$.config,\r\n            maxWidth = 0,\r\n            targetsToShow,\r\n            scale,\r\n            axis,\r\n            dummy,\r\n            svg;\r\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\r\n            return $$.currentMaxTickWidths[id];\r\n        }\r\n        if ($$.svg) {\r\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\r\n            if (id === 'y') {\r\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\r\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\r\n            } else if (id === 'y2') {\r\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\r\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\r\n            } else {\r\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\r\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\r\n                this.updateXAxisTickValues(targetsToShow, axis);\r\n            }\r\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\r\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\r\n                $$.d3.select(this).selectAll('text').each(function () {\r\n                    var box = this.getBoundingClientRect();\r\n                    if (maxWidth < box.width) {\r\n                        maxWidth = box.width;\r\n                    }\r\n                });\r\n                dummy.remove();\r\n            });\r\n        }\r\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\r\n        return $$.currentMaxTickWidths[id];\r\n    };\r\n\r\n    c3_axis_fn.updateLabels = function updateLabels(withTransition) {\r\n        var $$ = this.owner;\r\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\r\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\r\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\r\n        (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\r\n        (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\r\n        (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\r\n    };\r\n    c3_axis_fn.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\r\n        var p = typeof padding === 'number' ? padding : padding[key];\r\n        if (!isValue(p)) {\r\n            return defaultValue;\r\n        }\r\n        if (padding.unit === 'ratio') {\r\n            return padding[key] * domainLength;\r\n        }\r\n        // assume padding is pixels if unit is not specified\r\n        return this.convertPixelsToAxisPadding(p, domainLength);\r\n    };\r\n    c3_axis_fn.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\r\n        var $$ = this.owner,\r\n            length = $$.config.axis_rotated ? $$.width : $$.height;\r\n        return domainLength * (pixels / length);\r\n    };\r\n    c3_axis_fn.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\r\n        var tickValues = values,\r\n            targetCount,\r\n            start,\r\n            end,\r\n            count,\r\n            interval,\r\n            i,\r\n            tickValue;\r\n        if (tickCount) {\r\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\r\n            // compute ticks according to tickCount\r\n            if (targetCount === 1) {\r\n                tickValues = [values[0]];\r\n            } else if (targetCount === 2) {\r\n                tickValues = [values[0], values[values.length - 1]];\r\n            } else if (targetCount > 2) {\r\n                count = targetCount - 2;\r\n                start = values[0];\r\n                end = values[values.length - 1];\r\n                interval = (end - start) / (count + 1);\r\n                // re-construct unique values\r\n                tickValues = [start];\r\n                for (i = 0; i < count; i++) {\r\n                    tickValue = +start + interval * (i + 1);\r\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\r\n                }\r\n                tickValues.push(end);\r\n            }\r\n        }\r\n        if (!forTimeSeries) {\r\n            tickValues = tickValues.sort(function (a, b) {\r\n                return a - b;\r\n            });\r\n        }\r\n        return tickValues;\r\n    };\r\n    c3_axis_fn.generateTransitions = function generateTransitions(duration) {\r\n        var $$ = this.owner,\r\n            axes = $$.axes;\r\n        return {\r\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\r\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\r\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\r\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\r\n        };\r\n    };\r\n    c3_axis_fn.redraw = function redraw(transitions, isHidden) {\r\n        var $$ = this.owner;\r\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\r\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\r\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\r\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\r\n        transitions.axisX.call($$.xAxis);\r\n        transitions.axisY.call($$.yAxis);\r\n        transitions.axisY2.call($$.y2Axis);\r\n        transitions.axisSubX.call($$.subXAxis);\r\n    };\r\n\r\n    var c3 = { version: \"0.4.24\" };\r\n\r\n    var c3_chart_fn;\r\n    var c3_chart_internal_fn;\r\n\r\n    function Component(owner, componentKey, fn) {\r\n        this.owner = owner;\r\n        c3.chart.internal[componentKey] = fn;\r\n    }\r\n\r\n    function Chart(config) {\r\n        var $$ = this.internal = new ChartInternal(this);\r\n        $$.loadConfig(config);\r\n\r\n        $$.beforeInit(config);\r\n        $$.init();\r\n        $$.afterInit(config);\r\n\r\n        // bind \"this\" to nested API\r\n        (function bindThis(fn, target, argThis) {\r\n            Object.keys(fn).forEach(function (key) {\r\n                target[key] = fn[key].bind(argThis);\r\n                if (Object.keys(fn[key]).length > 0) {\r\n                    bindThis(fn[key], target[key], argThis);\r\n                }\r\n            });\r\n        })(c3_chart_fn, this, this);\r\n    }\r\n\r\n    function ChartInternal(api) {\r\n        var $$ = this;\r\n        $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\r\n        $$.api = api;\r\n        $$.config = $$.getDefaultConfig();\r\n        $$.data = {};\r\n        $$.cache = {};\r\n        $$.axes = {};\r\n    }\r\n\r\n    c3.generate = function (config) {\r\n        return new Chart(config);\r\n    };\r\n\r\n    c3.chart = {\r\n        fn: Chart.prototype,\r\n        internal: {\r\n            fn: ChartInternal.prototype\r\n        }\r\n    };\r\n    c3_chart_fn = c3.chart.fn;\r\n    c3_chart_internal_fn = c3.chart.internal.fn;\r\n\r\n    c3_chart_internal_fn.beforeInit = function () {\r\n        // can do something\r\n    };\r\n    c3_chart_internal_fn.afterInit = function () {\r\n        // can do something\r\n    };\r\n    c3_chart_internal_fn.init = function () {\r\n        var $$ = this,\r\n            config = $$.config;\r\n\r\n        $$.initParams();\r\n\r\n        if (config.data_url) {\r\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\r\n        } else if (config.data_json) {\r\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\r\n        } else if (config.data_rows) {\r\n            $$.initWithData($$.convertRowsToData(config.data_rows));\r\n        } else if (config.data_columns) {\r\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\r\n        } else {\r\n            throw Error('url or json or rows or columns is required.');\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.initParams = function () {\r\n        var $$ = this,\r\n            d3 = $$.d3,\r\n            config = $$.config;\r\n\r\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\r\n        $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\r\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\r\n        $$.dragging = false;\r\n        $$.flowing = false;\r\n        $$.cancelClick = false;\r\n        $$.mouseover = false;\r\n        $$.transiting = false;\r\n\r\n        $$.color = $$.generateColor();\r\n        $$.levelColor = $$.generateLevelColor();\r\n\r\n        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\r\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\r\n        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([[\".%L\", function (d) {\r\n            return d.getMilliseconds();\r\n        }], [\":%S\", function (d) {\r\n            return d.getSeconds();\r\n        }], [\"%I:%M\", function (d) {\r\n            return d.getMinutes();\r\n        }], [\"%I %p\", function (d) {\r\n            return d.getHours();\r\n        }], [\"%-m/%-d\", function (d) {\r\n            return d.getDay() && d.getDate() !== 1;\r\n        }], [\"%-m/%-d\", function (d) {\r\n            return d.getDate() !== 1;\r\n        }], [\"%-m/%-d\", function (d) {\r\n            return d.getMonth();\r\n        }], [\"%Y/%-m/%-d\", function () {\r\n            return true;\r\n        }]]);\r\n\r\n        $$.hiddenTargetIds = [];\r\n        $$.hiddenLegendIds = [];\r\n        $$.focusedTargetIds = [];\r\n        $$.defocusedTargetIds = [];\r\n\r\n        $$.xOrient = config.axis_rotated ? config.axis_x_inner ? \"right\" : \"left\" : config.axis_x_inner ? \"top\" : \"bottom\";\r\n        $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\r\n        $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\r\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\r\n\r\n        $$.isLegendRight = config.legend_position === 'right';\r\n        $$.isLegendInset = config.legend_position === 'inset';\r\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\r\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\r\n        $$.legendStep = 0;\r\n        $$.legendItemWidth = 0;\r\n        $$.legendItemHeight = 0;\r\n\r\n        $$.currentMaxTickWidths = {\r\n            x: 0,\r\n            y: 0,\r\n            y2: 0\r\n        };\r\n\r\n        $$.rotated_padding_left = 30;\r\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\r\n        $$.rotated_padding_top = 5;\r\n\r\n        $$.withoutFadeIn = {};\r\n\r\n        $$.intervalForObserveInserted = undefined;\r\n\r\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\r\n    };\r\n\r\n    c3_chart_internal_fn.initChartElements = function () {\r\n        if (this.initBar) {\r\n            this.initBar();\r\n        }\r\n        if (this.initLine) {\r\n            this.initLine();\r\n        }\r\n        if (this.initArc) {\r\n            this.initArc();\r\n        }\r\n        if (this.initGauge) {\r\n            this.initGauge();\r\n        }\r\n        if (this.initText) {\r\n            this.initText();\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.initWithData = function (data) {\r\n        var $$ = this,\r\n            d3 = $$.d3,\r\n            config = $$.config;\r\n        var defs,\r\n            main,\r\n            binding = true;\r\n\r\n        $$.axis = new Axis($$);\r\n\r\n        if ($$.initPie) {\r\n            $$.initPie();\r\n        }\r\n        if ($$.initBrush) {\r\n            $$.initBrush();\r\n        }\r\n        if ($$.initZoom) {\r\n            $$.initZoom();\r\n        }\r\n\r\n        if (!config.bindto) {\r\n            $$.selectChart = d3.selectAll([]);\r\n        } else if (typeof config.bindto.node === 'function') {\r\n            $$.selectChart = config.bindto;\r\n        } else {\r\n            $$.selectChart = d3.select(config.bindto);\r\n        }\r\n        if ($$.selectChart.empty()) {\r\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\r\n            $$.observeInserted($$.selectChart);\r\n            binding = false;\r\n        }\r\n        $$.selectChart.html(\"\").classed(\"c3\", true);\r\n\r\n        // Init data as targets\r\n        $$.data.xs = {};\r\n        $$.data.targets = $$.convertDataToTargets(data);\r\n\r\n        if (config.data_filter) {\r\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\r\n        }\r\n\r\n        // Set targets to hide if needed\r\n        if (config.data_hide) {\r\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\r\n        }\r\n        if (config.legend_hide) {\r\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\r\n        }\r\n\r\n        // Init sizes and scales\r\n        $$.updateSizes();\r\n        $$.updateScales();\r\n\r\n        // Set domains for each scale\r\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\r\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\r\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\r\n        $$.subX.domain($$.x.domain());\r\n        $$.subY.domain($$.y.domain());\r\n        $$.subY2.domain($$.y2.domain());\r\n\r\n        // Save original x domain for zoom update\r\n        $$.orgXDomain = $$.x.domain();\r\n\r\n        // Set initialized scales to brush and zoom\r\n        if ($$.brush) {\r\n            $$.brush.scale($$.subX);\r\n        }\r\n        if (config.zoom_enabled) {\r\n            $$.zoom.scale($$.x);\r\n        }\r\n\r\n        /*-- Basic Elements --*/\r\n\r\n        // Define svgs\r\n        $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\r\n            return config.onmouseover.call($$);\r\n        }).on('mouseleave', function () {\r\n            return config.onmouseout.call($$);\r\n        });\r\n\r\n        if ($$.config.svg_classname) {\r\n            $$.svg.attr('class', $$.config.svg_classname);\r\n        }\r\n\r\n        // Define defs\r\n        defs = $$.svg.append(\"defs\");\r\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\r\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\r\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\r\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\r\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\r\n        $$.updateSvgSize();\r\n\r\n        // Define regions\r\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\r\n\r\n        if ($$.initSubchart) {\r\n            $$.initSubchart();\r\n        }\r\n        if ($$.initTooltip) {\r\n            $$.initTooltip();\r\n        }\r\n        if ($$.initLegend) {\r\n            $$.initLegend();\r\n        }\r\n        if ($$.initTitle) {\r\n            $$.initTitle();\r\n        }\r\n\r\n        /*-- Main Region --*/\r\n\r\n        // text when empty\r\n        main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\r\n        .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\r\n\r\n        // Regions\r\n        $$.initRegion();\r\n\r\n        // Grids\r\n        $$.initGrid();\r\n\r\n        // Define g for chart area\r\n        main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart);\r\n\r\n        // Grid lines\r\n        if (config.grid_lines_front) {\r\n            $$.initGridLines();\r\n        }\r\n\r\n        // Cover whole with rects for events\r\n        $$.initEventRect();\r\n\r\n        // Define g for chart\r\n        $$.initChartElements();\r\n\r\n        // if zoom privileged, insert rect to forefront\r\n        // TODO: is this needed?\r\n        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions).attr('class', CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height).style('opacity', 0).on(\"dblclick.zoom\", null);\r\n\r\n        // Set default extent if defined\r\n        if (config.axis_x_extent) {\r\n            $$.brush.extent($$.getDefaultExtent());\r\n        }\r\n\r\n        // Add Axis\r\n        $$.axis.init();\r\n\r\n        // Set targets\r\n        $$.updateTargets($$.data.targets);\r\n\r\n        // Draw with targets\r\n        if (binding) {\r\n            $$.updateDimension();\r\n            $$.config.oninit.call($$);\r\n            $$.redraw({\r\n                withTransition: false,\r\n                withTransform: true,\r\n                withUpdateXDomain: true,\r\n                withUpdateOrgXDomain: true,\r\n                withTransitionForAxis: false\r\n            });\r\n        }\r\n\r\n        // Bind resize event\r\n        $$.bindResize();\r\n\r\n        // export element of the chart\r\n        $$.api.element = $$.selectChart.node();\r\n    };\r\n\r\n    c3_chart_internal_fn.smoothLines = function (el, type) {\r\n        var $$ = this;\r\n        if (type === 'grid') {\r\n            el.each(function () {\r\n                var g = $$.d3.select(this),\r\n                    x1 = g.attr('x1'),\r\n                    x2 = g.attr('x2'),\r\n                    y1 = g.attr('y1'),\r\n                    y2 = g.attr('y2');\r\n                g.attr({\r\n                    'x1': Math.ceil(x1),\r\n                    'x2': Math.ceil(x2),\r\n                    'y1': Math.ceil(y1),\r\n                    'y2': Math.ceil(y2)\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.updateSizes = function () {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\r\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\r\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\r\n            hasArc = $$.hasArcType(),\r\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\r\n            subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\r\n\r\n        $$.currentWidth = $$.getCurrentWidth();\r\n        $$.currentHeight = $$.getCurrentHeight();\r\n\r\n        // for main\r\n        $$.margin = config.axis_rotated ? {\r\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\r\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\r\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\r\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\r\n        } : {\r\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\r\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\r\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\r\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\r\n        };\r\n\r\n        // for subchart\r\n        $$.margin2 = config.axis_rotated ? {\r\n            top: $$.margin.top,\r\n            right: NaN,\r\n            bottom: 20 + legendHeightForBottom,\r\n            left: $$.rotated_padding_left\r\n        } : {\r\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\r\n            right: NaN,\r\n            bottom: xAxisHeight + legendHeightForBottom,\r\n            left: $$.margin.left\r\n        };\r\n\r\n        // for legend\r\n        $$.margin3 = {\r\n            top: 0,\r\n            right: NaN,\r\n            bottom: 0,\r\n            left: 0\r\n        };\r\n        if ($$.updateSizeForLegend) {\r\n            $$.updateSizeForLegend(legendHeight, legendWidth);\r\n        }\r\n\r\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\r\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\r\n        if ($$.width < 0) {\r\n            $$.width = 0;\r\n        }\r\n        if ($$.height < 0) {\r\n            $$.height = 0;\r\n        }\r\n\r\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\r\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\r\n        if ($$.width2 < 0) {\r\n            $$.width2 = 0;\r\n        }\r\n        if ($$.height2 < 0) {\r\n            $$.height2 = 0;\r\n        }\r\n\r\n        // for arc\r\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\r\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\r\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\r\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\r\n        }\r\n        if ($$.updateRadius) {\r\n            $$.updateRadius();\r\n        }\r\n\r\n        if ($$.isLegendRight && hasArc) {\r\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.updateTargets = function (targets) {\r\n        var $$ = this;\r\n\r\n        /*-- Main --*/\r\n\r\n        //-- Text --//\r\n        $$.updateTargetsForText(targets);\r\n\r\n        //-- Bar --//\r\n        $$.updateTargetsForBar(targets);\r\n\r\n        //-- Line --//\r\n        $$.updateTargetsForLine(targets);\r\n\r\n        //-- Arc --//\r\n        if ($$.hasArcType() && $$.updateTargetsForArc) {\r\n            $$.updateTargetsForArc(targets);\r\n        }\r\n\r\n        /*-- Sub --*/\r\n\r\n        if ($$.updateTargetsForSubchart) {\r\n            $$.updateTargetsForSubchart(targets);\r\n        }\r\n\r\n        // Fade-in each chart\r\n        $$.showTargets();\r\n    };\r\n    c3_chart_internal_fn.showTargets = function () {\r\n        var $$ = this;\r\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\r\n            return $$.isTargetToShow(d.id);\r\n        }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\r\n    };\r\n\r\n    c3_chart_internal_fn.redraw = function (options, transitions) {\r\n        var $$ = this,\r\n            main = $$.main,\r\n            d3 = $$.d3,\r\n            config = $$.config;\r\n        var areaIndices = $$.getShapeIndices($$.isAreaType),\r\n            barIndices = $$.getShapeIndices($$.isBarType),\r\n            lineIndices = $$.getShapeIndices($$.isLineType);\r\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\r\n        var hideAxis = $$.hasArcType();\r\n        var drawArea, drawBar, drawLine, xForText, yForText;\r\n        var duration, durationForExit, durationForAxis;\r\n        var waitForDraw, flow;\r\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets),\r\n            tickValues,\r\n            i,\r\n            intervalForCulling,\r\n            xDomainForZoom;\r\n        var xv = $$.xv.bind($$),\r\n            cx,\r\n            cy;\r\n\r\n        options = options || {};\r\n        withY = getOption(options, \"withY\", true);\r\n        withSubchart = getOption(options, \"withSubchart\", true);\r\n        withTransition = getOption(options, \"withTransition\", true);\r\n        withTransform = getOption(options, \"withTransform\", false);\r\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\r\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\r\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\r\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\r\n        withLegend = getOption(options, \"withLegend\", false);\r\n        withEventRect = getOption(options, \"withEventRect\", true);\r\n        withDimension = getOption(options, \"withDimension\", true);\r\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\r\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\r\n\r\n        duration = withTransition ? config.transition_duration : 0;\r\n        durationForExit = withTransitionForExit ? duration : 0;\r\n        durationForAxis = withTransitionForAxis ? duration : 0;\r\n\r\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\r\n\r\n        // update legend and transform each g\r\n        if (withLegend && config.legend_show) {\r\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\r\n        } else if (withDimension) {\r\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\r\n            // no need to update axis in it because they will be updated in redraw()\r\n            $$.updateDimension(true);\r\n        }\r\n\r\n        // MEMO: needed for grids calculation\r\n        if ($$.isCategorized() && targetsToShow.length === 0) {\r\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\r\n        }\r\n\r\n        if (targetsToShow.length) {\r\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\r\n            if (!config.axis_x_tick_values) {\r\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\r\n            }\r\n        } else {\r\n            $$.xAxis.tickValues([]);\r\n            $$.subXAxis.tickValues([]);\r\n        }\r\n\r\n        if (config.zoom_rescale && !options.flow) {\r\n            xDomainForZoom = $$.x.orgDomain();\r\n        }\r\n\r\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\r\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\r\n\r\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\r\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\r\n        }\r\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\r\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\r\n        }\r\n\r\n        // axes\r\n        $$.axis.redraw(transitions, hideAxis);\r\n\r\n        // Update axis label\r\n        $$.axis.updateLabels(withTransition);\r\n\r\n        // show/hide if manual culling needed\r\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\r\n            if (config.axis_x_tick_culling && tickValues) {\r\n                for (i = 1; i < tickValues.length; i++) {\r\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\r\n                        intervalForCulling = i;\r\n                        break;\r\n                    }\r\n                }\r\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\r\n                    var index = tickValues.indexOf(e);\r\n                    if (index >= 0) {\r\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\r\n                    }\r\n                });\r\n            } else {\r\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\r\n            }\r\n        }\r\n\r\n        // setup drawer - MEMO: these must be called after axis updated\r\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\r\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\r\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\r\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\r\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\r\n\r\n        // Update sub domain\r\n        if (withY) {\r\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\r\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\r\n        }\r\n\r\n        // xgrid focus\r\n        $$.updateXgridFocus();\r\n\r\n        // Data empty label positioning and text.\r\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1);\r\n\r\n        // grid\r\n        $$.updateGrid(duration);\r\n\r\n        // rect for regions\r\n        $$.updateRegion(duration);\r\n\r\n        // bars\r\n        $$.updateBar(durationForExit);\r\n\r\n        // lines, areas and cricles\r\n        $$.updateLine(durationForExit);\r\n        $$.updateArea(durationForExit);\r\n        $$.updateCircle();\r\n\r\n        // text\r\n        if ($$.hasDataLabel()) {\r\n            $$.updateText(durationForExit);\r\n        }\r\n\r\n        // title\r\n        if ($$.redrawTitle) {\r\n            $$.redrawTitle();\r\n        }\r\n\r\n        // arc\r\n        if ($$.redrawArc) {\r\n            $$.redrawArc(duration, durationForExit, withTransform);\r\n        }\r\n\r\n        // subchart\r\n        if ($$.redrawSubchart) {\r\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\r\n        }\r\n\r\n        // circles for select\r\n        main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove();\r\n\r\n        // event rects will redrawn when flow called\r\n        if (config.interaction_enabled && !options.flow && withEventRect) {\r\n            $$.redrawEventRect();\r\n            if ($$.updateZoom) {\r\n                $$.updateZoom();\r\n            }\r\n        }\r\n\r\n        // update circleY based on updated parameters\r\n        $$.updateCircleY();\r\n\r\n        // generate circle x/y functions depending on updated params\r\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\r\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\r\n\r\n        if (options.flow) {\r\n            flow = $$.generateFlow({\r\n                targets: targetsToShow,\r\n                flow: options.flow,\r\n                duration: options.flow.duration,\r\n                drawBar: drawBar,\r\n                drawLine: drawLine,\r\n                drawArea: drawArea,\r\n                cx: cx,\r\n                cy: cy,\r\n                xv: xv,\r\n                xForText: xForText,\r\n                yForText: yForText\r\n            });\r\n        }\r\n\r\n        if ((duration || flow) && $$.isTabVisible()) {\r\n            // Only use transition if tab visible. See #938.\r\n            // transition should be derived from one transition\r\n            d3.transition().duration(duration).each(function () {\r\n                var transitionsToWait = [];\r\n\r\n                // redraw and gather transitions\r\n                [$$.redrawBar(drawBar, true), $$.redrawLine(drawLine, true), $$.redrawArea(drawArea, true), $$.redrawCircle(cx, cy, true), $$.redrawText(xForText, yForText, options.flow, true), $$.redrawRegion(true), $$.redrawGrid(true)].forEach(function (transitions) {\r\n                    transitions.forEach(function (transition) {\r\n                        transitionsToWait.push(transition);\r\n                    });\r\n                });\r\n\r\n                // Wait for end of transitions to call flow and onrendered callback\r\n                waitForDraw = $$.generateWait();\r\n                transitionsToWait.forEach(function (t) {\r\n                    waitForDraw.add(t);\r\n                });\r\n            }).call(waitForDraw, function () {\r\n                if (flow) {\r\n                    flow();\r\n                }\r\n                if (config.onrendered) {\r\n                    config.onrendered.call($$);\r\n                }\r\n            });\r\n        } else {\r\n            $$.redrawBar(drawBar);\r\n            $$.redrawLine(drawLine);\r\n            $$.redrawArea(drawArea);\r\n            $$.redrawCircle(cx, cy);\r\n            $$.redrawText(xForText, yForText, options.flow);\r\n            $$.redrawRegion();\r\n            $$.redrawGrid();\r\n            if (config.onrendered) {\r\n                config.onrendered.call($$);\r\n            }\r\n        }\r\n\r\n        // update fadein condition\r\n        $$.mapToIds($$.data.targets).forEach(function (id) {\r\n            $$.withoutFadeIn[id] = true;\r\n        });\r\n    };\r\n\r\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            transitions;\r\n        options = options || {};\r\n        // same with redraw\r\n        options.withTransition = getOption(options, \"withTransition\", true);\r\n        options.withTransform = getOption(options, \"withTransform\", false);\r\n        options.withLegend = getOption(options, \"withLegend\", false);\r\n        // NOT same with redraw\r\n        options.withUpdateXDomain = true;\r\n        options.withUpdateOrgXDomain = true;\r\n        options.withTransitionForExit = false;\r\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\r\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\r\n        $$.updateSizes();\r\n        // MEMO: called in updateLegend in redraw if withLegend\r\n        if (!(options.withLegend && config.legend_show)) {\r\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\r\n            // Update scales\r\n            $$.updateScales();\r\n            $$.updateSvgSize();\r\n            // Update g positions\r\n            $$.transformAll(options.withTransitionForTransform, transitions);\r\n        }\r\n        // Draw with new sizes & scales\r\n        $$.redraw(options, transitions);\r\n    };\r\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\r\n        this.redraw({\r\n            withY: false,\r\n            withSubchart: false,\r\n            withEventRect: false,\r\n            withTransitionForAxis: false\r\n        });\r\n    };\r\n\r\n    c3_chart_internal_fn.isTimeSeries = function () {\r\n        return this.config.axis_x_type === 'timeseries';\r\n    };\r\n    c3_chart_internal_fn.isCategorized = function () {\r\n        return this.config.axis_x_type.indexOf('categor') >= 0;\r\n    };\r\n    c3_chart_internal_fn.isCustomX = function () {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\r\n    };\r\n\r\n    c3_chart_internal_fn.isTimeSeriesY = function () {\r\n        return this.config.axis_y_type === 'timeseries';\r\n    };\r\n\r\n    c3_chart_internal_fn.getTranslate = function (target) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            x,\r\n            y;\r\n        if (target === 'main') {\r\n            x = asHalfPixel($$.margin.left);\r\n            y = asHalfPixel($$.margin.top);\r\n        } else if (target === 'context') {\r\n            x = asHalfPixel($$.margin2.left);\r\n            y = asHalfPixel($$.margin2.top);\r\n        } else if (target === 'legend') {\r\n            x = $$.margin3.left;\r\n            y = $$.margin3.top;\r\n        } else if (target === 'x') {\r\n            x = 0;\r\n            y = config.axis_rotated ? 0 : $$.height;\r\n        } else if (target === 'y') {\r\n            x = 0;\r\n            y = config.axis_rotated ? $$.height : 0;\r\n        } else if (target === 'y2') {\r\n            x = config.axis_rotated ? 0 : $$.width;\r\n            y = config.axis_rotated ? 1 : 0;\r\n        } else if (target === 'subx') {\r\n            x = 0;\r\n            y = config.axis_rotated ? 0 : $$.height2;\r\n        } else if (target === 'arc') {\r\n            x = $$.arcWidth / 2;\r\n            y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label\r\n        }\r\n        return \"translate(\" + x + \",\" + y + \")\";\r\n    };\r\n    c3_chart_internal_fn.initialOpacity = function (d) {\r\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\r\n    };\r\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\r\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\r\n    };\r\n    c3_chart_internal_fn.opacityForCircle = function (d) {\r\n        var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\r\n        var opacity = isPointShouldBeShown ? 1 : 0;\r\n        return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\r\n    };\r\n    c3_chart_internal_fn.opacityForText = function () {\r\n        return this.hasDataLabel() ? 1 : 0;\r\n    };\r\n    c3_chart_internal_fn.xx = function (d) {\r\n        return d ? this.x(d.x) : null;\r\n    };\r\n    c3_chart_internal_fn.xv = function (d) {\r\n        var $$ = this,\r\n            value = d.value;\r\n        if ($$.isTimeSeries()) {\r\n            value = $$.parseDate(d.value);\r\n        } else if ($$.isCategorized() && typeof d.value === 'string') {\r\n            value = $$.config.axis_x_categories.indexOf(d.value);\r\n        }\r\n        return Math.ceil($$.x(value));\r\n    };\r\n    c3_chart_internal_fn.yv = function (d) {\r\n        var $$ = this,\r\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\r\n        return Math.ceil(yScale(d.value));\r\n    };\r\n    c3_chart_internal_fn.subxx = function (d) {\r\n        return d ? this.subX(d.x) : null;\r\n    };\r\n\r\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\r\n        var $$ = this,\r\n            xAxis,\r\n            yAxis,\r\n            y2Axis;\r\n        if (transitions && transitions.axisX) {\r\n            xAxis = transitions.axisX;\r\n        } else {\r\n            xAxis = $$.main.select('.' + CLASS.axisX);\r\n            if (withTransition) {\r\n                xAxis = xAxis.transition();\r\n            }\r\n        }\r\n        if (transitions && transitions.axisY) {\r\n            yAxis = transitions.axisY;\r\n        } else {\r\n            yAxis = $$.main.select('.' + CLASS.axisY);\r\n            if (withTransition) {\r\n                yAxis = yAxis.transition();\r\n            }\r\n        }\r\n        if (transitions && transitions.axisY2) {\r\n            y2Axis = transitions.axisY2;\r\n        } else {\r\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\r\n            if (withTransition) {\r\n                y2Axis = y2Axis.transition();\r\n            }\r\n        }\r\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\r\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\r\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\r\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\r\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\r\n    };\r\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\r\n        var $$ = this;\r\n        $$.transformMain(withTransition, transitions);\r\n        if ($$.config.subchart_show) {\r\n            $$.transformContext(withTransition, transitions);\r\n        }\r\n        if ($$.legend) {\r\n            $$.transformLegend(withTransition);\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.updateSvgSize = function () {\r\n        var $$ = this,\r\n            brush = $$.svg.select(\".c3-brush .background\");\r\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\r\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\r\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\r\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\r\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\r\n        $$.svg.select('.' + CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height);\r\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\r\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\r\n    };\r\n\r\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\r\n        var $$ = this;\r\n        if (!withoutAxis) {\r\n            if ($$.config.axis_rotated) {\r\n                $$.axes.x.call($$.xAxis);\r\n                $$.axes.subx.call($$.subXAxis);\r\n            } else {\r\n                $$.axes.y.call($$.yAxis);\r\n                $$.axes.y2.call($$.y2Axis);\r\n            }\r\n        }\r\n        $$.updateSizes();\r\n        $$.updateScales();\r\n        $$.updateSvgSize();\r\n        $$.transformAll(false);\r\n    };\r\n\r\n    c3_chart_internal_fn.observeInserted = function (selection) {\r\n        var $$ = this,\r\n            observer;\r\n        if (typeof MutationObserver === 'undefined') {\r\n            window.console.error(\"MutationObserver not defined.\");\r\n            return;\r\n        }\r\n        observer = new MutationObserver(function (mutations) {\r\n            mutations.forEach(function (mutation) {\r\n                if (mutation.type === 'childList' && mutation.previousSibling) {\r\n                    observer.disconnect();\r\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\r\n                    $$.intervalForObserveInserted = window.setInterval(function () {\r\n                        // parentNode will NOT be null when completed\r\n                        if (selection.node().parentNode) {\r\n                            window.clearInterval($$.intervalForObserveInserted);\r\n                            $$.updateDimension();\r\n                            if ($$.brush) {\r\n                                $$.brush.update();\r\n                            }\r\n                            $$.config.oninit.call($$);\r\n                            $$.redraw({\r\n                                withTransform: true,\r\n                                withUpdateXDomain: true,\r\n                                withUpdateOrgXDomain: true,\r\n                                withTransition: false,\r\n                                withTransitionForTransform: false,\r\n                                withLegend: true\r\n                            });\r\n                            selection.transition().style('opacity', 1);\r\n                        }\r\n                    }, 10);\r\n                }\r\n            });\r\n        });\r\n        observer.observe(selection.node(), { attributes: true, childList: true, characterData: true });\r\n    };\r\n\r\n    c3_chart_internal_fn.bindResize = function () {\r\n        var $$ = this,\r\n            config = $$.config;\r\n\r\n        $$.resizeFunction = $$.generateResize(); // need to call .remove\r\n\r\n        $$.resizeFunction.add(function () {\r\n            config.onresize.call($$);\r\n        });\r\n        if (config.resize_auto) {\r\n            $$.resizeFunction.add(function () {\r\n                if ($$.resizeTimeout !== undefined) {\r\n                    window.clearTimeout($$.resizeTimeout);\r\n                }\r\n                $$.resizeTimeout = window.setTimeout(function () {\r\n                    delete $$.resizeTimeout;\r\n                    $$.api.flush();\r\n                }, 100);\r\n            });\r\n        }\r\n        $$.resizeFunction.add(function () {\r\n            config.onresized.call($$);\r\n        });\r\n\r\n        $$.resizeIfElementDisplayed = function () {\r\n            // if element not displayed skip it\r\n            if ($$.api == null || !$$.api.element.offsetParent) {\r\n                return;\r\n            }\r\n\r\n            $$.resizeFunction();\r\n        };\r\n\r\n        if (window.attachEvent) {\r\n            window.attachEvent('onresize', $$.resizeIfElementDisplayed);\r\n        } else if (window.addEventListener) {\r\n            window.addEventListener('resize', $$.resizeIfElementDisplayed, false);\r\n        } else {\r\n            // fallback to this, if this is a very old browser\r\n            var wrapper = window.onresize;\r\n            if (!wrapper) {\r\n                // create a wrapper that will call all charts\r\n                wrapper = $$.generateResize();\r\n            } else if (!wrapper.add || !wrapper.remove) {\r\n                // there is already a handler registered, make sure we call it too\r\n                wrapper = $$.generateResize();\r\n                wrapper.add(window.onresize);\r\n            }\r\n            // add this graph to the wrapper, we will be removed if the user calls destroy\r\n            wrapper.add($$.resizeFunction);\r\n            window.onresize = function () {\r\n                // if element not displayed skip it\r\n                if (!$$.api.element.offsetParent) {\r\n                    return;\r\n                }\r\n\r\n                wrapper();\r\n            };\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.generateResize = function () {\r\n        var resizeFunctions = [];\r\n        function callResizeFunctions() {\r\n            resizeFunctions.forEach(function (f) {\r\n                f();\r\n            });\r\n        }\r\n        callResizeFunctions.add = function (f) {\r\n            resizeFunctions.push(f);\r\n        };\r\n        callResizeFunctions.remove = function (f) {\r\n            for (var i = 0; i < resizeFunctions.length; i++) {\r\n                if (resizeFunctions[i] === f) {\r\n                    resizeFunctions.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        };\r\n        return callResizeFunctions;\r\n    };\r\n\r\n    c3_chart_internal_fn.endall = function (transition, callback) {\r\n        var n = 0;\r\n        transition.each(function () {\r\n            ++n;\r\n        }).each(\"end\", function () {\r\n            if (! --n) {\r\n                callback.apply(this, arguments);\r\n            }\r\n        });\r\n    };\r\n    c3_chart_internal_fn.generateWait = function () {\r\n        var transitionsToWait = [],\r\n            f = function f(transition, callback) {\r\n            var timer = setInterval(function () {\r\n                var done = 0;\r\n                transitionsToWait.forEach(function (t) {\r\n                    if (t.empty()) {\r\n                        done += 1;\r\n                        return;\r\n                    }\r\n                    try {\r\n                        t.transition();\r\n                    } catch (e) {\r\n                        done += 1;\r\n                    }\r\n                });\r\n                if (done === transitionsToWait.length) {\r\n                    clearInterval(timer);\r\n                    if (callback) {\r\n                        callback();\r\n                    }\r\n                }\r\n            }, 10);\r\n        };\r\n        f.add = function (transition) {\r\n            transitionsToWait.push(transition);\r\n        };\r\n        return f;\r\n    };\r\n\r\n    c3_chart_internal_fn.parseDate = function (date) {\r\n        var $$ = this,\r\n            parsedDate;\r\n        if (date instanceof Date) {\r\n            parsedDate = date;\r\n        } else if (typeof date === 'string') {\r\n            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\r\n        } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\r\n            parsedDate = new Date(+date);\r\n        } else if (typeof date === 'number' && !isNaN(date)) {\r\n            parsedDate = new Date(+date);\r\n        }\r\n        if (!parsedDate || isNaN(+parsedDate)) {\r\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\r\n        }\r\n        return parsedDate;\r\n    };\r\n\r\n    c3_chart_internal_fn.isTabVisible = function () {\r\n        var hidden;\r\n        if (typeof document.hidden !== \"undefined\") {\r\n            // Opera 12.10 and Firefox 18 and later support\r\n            hidden = \"hidden\";\r\n        } else if (typeof document.mozHidden !== \"undefined\") {\r\n            hidden = \"mozHidden\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            hidden = \"msHidden\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            hidden = \"webkitHidden\";\r\n        }\r\n\r\n        return document[hidden] ? false : true;\r\n    };\r\n\r\n    c3_chart_internal_fn.isValue = isValue;\r\n    c3_chart_internal_fn.isFunction = isFunction;\r\n    c3_chart_internal_fn.isString = isString;\r\n    c3_chart_internal_fn.isUndefined = isUndefined;\r\n    c3_chart_internal_fn.isDefined = isDefined;\r\n    c3_chart_internal_fn.ceil10 = ceil10;\r\n    c3_chart_internal_fn.asHalfPixel = asHalfPixel;\r\n    c3_chart_internal_fn.diffDomain = diffDomain;\r\n    c3_chart_internal_fn.isEmpty = isEmpty;\r\n    c3_chart_internal_fn.notEmpty = notEmpty;\r\n    c3_chart_internal_fn.notEmpty = notEmpty;\r\n    c3_chart_internal_fn.getOption = getOption;\r\n    c3_chart_internal_fn.hasValue = hasValue;\r\n    c3_chart_internal_fn.sanitise = sanitise;\r\n    c3_chart_internal_fn.getPathBox = getPathBox;\r\n    c3_chart_internal_fn.CLASS = CLASS;\r\n\r\n    /* jshint ignore:start */\r\n\r\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\r\n    // this polyfill to avoid the confusion.\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\r\n\r\n    if (!Function.prototype.bind) {\r\n        Function.prototype.bind = function (oThis) {\r\n            if (typeof this !== 'function') {\r\n                // closest thing possible to the ECMAScript 5\r\n                // internal IsCallable function\r\n                throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\r\n            }\r\n\r\n            var aArgs = Array.prototype.slice.call(arguments, 1),\r\n                fToBind = this,\r\n                fNOP = function fNOP() {},\r\n                fBound = function fBound() {\r\n                return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\r\n            };\r\n\r\n            fNOP.prototype = this.prototype;\r\n            fBound.prototype = new fNOP();\r\n\r\n            return fBound;\r\n        };\r\n    }\r\n\r\n    // SVGPathSeg API polyfill\r\n    // https://github.com/progers/pathseg\r\n    //\r\n    // This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\r\n    // SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\r\n    // changes which were implemented in Firefox 43 and Chrome 46.\r\n\r\n    (function () {\r\n\r\n        if (!(\"SVGPathSeg\" in window)) {\r\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\r\n            window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\r\n                this.pathSegType = type;\r\n                this.pathSegTypeAsLetter = typeAsLetter;\r\n                this._owningPathSegList = owningPathSegList;\r\n            };\r\n\r\n            window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\r\n\r\n            window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\r\n            window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\r\n            window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\r\n            window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\r\n            window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\r\n            window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\r\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\r\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\r\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\r\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\r\n            window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\r\n            window.SVGPathSeg.PATHSEG_ARC_REL = 11;\r\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\r\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\r\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\r\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\r\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\r\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\r\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\r\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\r\n\r\n            // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\r\n            window.SVGPathSeg.prototype._segmentChanged = function () {\r\n                if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\r\n            };\r\n\r\n            window.SVGPathSegClosePath = function (owningPathSegList) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\r\n            };\r\n            window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegClosePath.prototype.toString = function () {\r\n                return \"[object SVGPathSegClosePath]\";\r\n            };\r\n            window.SVGPathSegClosePath.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter;\r\n            };\r\n            window.SVGPathSegClosePath.prototype.clone = function () {\r\n                return new window.SVGPathSegClosePath(undefined);\r\n            };\r\n\r\n            window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n            };\r\n            window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegMovetoAbs.prototype.toString = function () {\r\n                return \"[object SVGPathSegMovetoAbs]\";\r\n            };\r\n            window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegMovetoAbs.prototype.clone = function () {\r\n                return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n            };\r\n            window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegMovetoRel.prototype.toString = function () {\r\n                return \"[object SVGPathSegMovetoRel]\";\r\n            };\r\n            window.SVGPathSegMovetoRel.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegMovetoRel.prototype.clone = function () {\r\n                return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n            };\r\n            window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegLinetoAbs.prototype.toString = function () {\r\n                return \"[object SVGPathSegLinetoAbs]\";\r\n            };\r\n            window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegLinetoAbs.prototype.clone = function () {\r\n                return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n            };\r\n            window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegLinetoRel.prototype.toString = function () {\r\n                return \"[object SVGPathSegLinetoRel]\";\r\n            };\r\n            window.SVGPathSegLinetoRel.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegLinetoRel.prototype.clone = function () {\r\n                return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n                this._x1 = x1;\r\n                this._y1 = y1;\r\n                this._x2 = x2;\r\n                this._y2 = y2;\r\n            };\r\n            window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\r\n                return \"[object SVGPathSegCurvetoCubicAbs]\";\r\n            };\r\n            window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\r\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function get() {\r\n                    return this._x1;\r\n                }, set: function set(x1) {\r\n                    this._x1 = x1;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function get() {\r\n                    return this._y1;\r\n                }, set: function set(y1) {\r\n                    this._y1 = y1;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function get() {\r\n                    return this._x2;\r\n                }, set: function set(x2) {\r\n                    this._x2 = x2;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function get() {\r\n                    return this._y2;\r\n                }, set: function set(y2) {\r\n                    this._y2 = y2;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n                this._x1 = x1;\r\n                this._y1 = y1;\r\n                this._x2 = x2;\r\n                this._y2 = y2;\r\n            };\r\n            window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\r\n                return \"[object SVGPathSegCurvetoCubicRel]\";\r\n            };\r\n            window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\r\n                return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function get() {\r\n                    return this._x1;\r\n                }, set: function set(x1) {\r\n                    this._x1 = x1;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function get() {\r\n                    return this._y1;\r\n                }, set: function set(y1) {\r\n                    this._y1 = y1;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function get() {\r\n                    return this._x2;\r\n                }, set: function set(x2) {\r\n                    this._x2 = x2;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function get() {\r\n                    return this._y2;\r\n                }, set: function set(y2) {\r\n                    this._y2 = y2;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n                this._x1 = x1;\r\n                this._y1 = y1;\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\r\n                return \"[object SVGPathSegCurvetoQuadraticAbs]\";\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\r\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function get() {\r\n                    return this._x1;\r\n                }, set: function set(x1) {\r\n                    this._x1 = x1;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function get() {\r\n                    return this._y1;\r\n                }, set: function set(y1) {\r\n                    this._y1 = y1;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n                this._x1 = x1;\r\n                this._y1 = y1;\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\r\n                return \"[object SVGPathSegCurvetoQuadraticRel]\";\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\r\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function get() {\r\n                    return this._x1;\r\n                }, set: function set(x1) {\r\n                    this._x1 = x1;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function get() {\r\n                    return this._y1;\r\n                }, set: function set(y1) {\r\n                    this._y1 = y1;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n                this._r1 = r1;\r\n                this._r2 = r2;\r\n                this._angle = angle;\r\n                this._largeArcFlag = largeArcFlag;\r\n                this._sweepFlag = sweepFlag;\r\n            };\r\n            window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegArcAbs.prototype.toString = function () {\r\n                return \"[object SVGPathSegArcAbs]\";\r\n            };\r\n            window.SVGPathSegArcAbs.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegArcAbs.prototype.clone = function () {\r\n                return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function get() {\r\n                    return this._r1;\r\n                }, set: function set(r1) {\r\n                    this._r1 = r1;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function get() {\r\n                    return this._r2;\r\n                }, set: function set(r2) {\r\n                    this._r2 = r2;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function get() {\r\n                    return this._angle;\r\n                }, set: function set(angle) {\r\n                    this._angle = angle;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function get() {\r\n                    return this._largeArcFlag;\r\n                }, set: function set(largeArcFlag) {\r\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function get() {\r\n                    return this._sweepFlag;\r\n                }, set: function set(sweepFlag) {\r\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n                this._r1 = r1;\r\n                this._r2 = r2;\r\n                this._angle = angle;\r\n                this._largeArcFlag = largeArcFlag;\r\n                this._sweepFlag = sweepFlag;\r\n            };\r\n            window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegArcRel.prototype.toString = function () {\r\n                return \"[object SVGPathSegArcRel]\";\r\n            };\r\n            window.SVGPathSegArcRel.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegArcRel.prototype.clone = function () {\r\n                return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function get() {\r\n                    return this._r1;\r\n                }, set: function set(r1) {\r\n                    this._r1 = r1;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function get() {\r\n                    return this._r2;\r\n                }, set: function set(r2) {\r\n                    this._r2 = r2;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function get() {\r\n                    return this._angle;\r\n                }, set: function set(angle) {\r\n                    this._angle = angle;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function get() {\r\n                    return this._largeArcFlag;\r\n                }, set: function set(largeArcFlag) {\r\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function get() {\r\n                    return this._sweepFlag;\r\n                }, set: function set(sweepFlag) {\r\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\r\n                this._x = x;\r\n            };\r\n            window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\r\n                return \"[object SVGPathSegLinetoHorizontalAbs]\";\r\n            };\r\n            window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x;\r\n            };\r\n            window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\r\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\r\n                this._x = x;\r\n            };\r\n            window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\r\n                return \"[object SVGPathSegLinetoHorizontalRel]\";\r\n            };\r\n            window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x;\r\n            };\r\n            window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\r\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\r\n                this._y = y;\r\n            };\r\n            window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\r\n                return \"[object SVGPathSegLinetoVerticalAbs]\";\r\n            };\r\n            window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\r\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\r\n                this._y = y;\r\n            };\r\n            window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\r\n                return \"[object SVGPathSegLinetoVerticalRel]\";\r\n            };\r\n            window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\r\n                return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n                this._x2 = x2;\r\n                this._y2 = y2;\r\n            };\r\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\r\n                return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\r\n            };\r\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\r\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function get() {\r\n                    return this._x2;\r\n                }, set: function set(x2) {\r\n                    this._x2 = x2;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function get() {\r\n                    return this._y2;\r\n                }, set: function set(y2) {\r\n                    this._y2 = y2;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n                this._x2 = x2;\r\n                this._y2 = y2;\r\n            };\r\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\r\n                return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\r\n            };\r\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\r\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function get() {\r\n                    return this._x2;\r\n                }, set: function set(x2) {\r\n                    this._x2 = x2;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function get() {\r\n                    return this._y2;\r\n                }, set: function set(y2) {\r\n                    this._y2 = y2;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\r\n                return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\r\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\r\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\r\n                this._x = x;\r\n                this._y = y;\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\r\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\r\n                return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\r\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\r\n            };\r\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\r\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\r\n            };\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function get() {\r\n                    return this._x;\r\n                }, set: function set(x) {\r\n                    this._x = x;this._segmentChanged();\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function get() {\r\n                    return this._y;\r\n                }, set: function set(y) {\r\n                    this._y = y;this._segmentChanged();\r\n                }, enumerable: true });\r\n\r\n            // Add createSVGPathSeg* functions to window.SVGPathElement.\r\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\r\n            window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\r\n                return new window.SVGPathSegClosePath(undefined);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\r\n                return new window.SVGPathSegMovetoAbs(undefined, x, y);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\r\n                return new window.SVGPathSegMovetoRel(undefined, x, y);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\r\n                return new window.SVGPathSegLinetoAbs(undefined, x, y);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\r\n                return new window.SVGPathSegLinetoRel(undefined, x, y);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\r\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\r\n                return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\r\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\r\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n                return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\r\n                return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\r\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\r\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\r\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\r\n                return new window.SVGPathSegLinetoVerticalRel(undefined, y);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\r\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\r\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\r\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\r\n            };\r\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\r\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\r\n            };\r\n\r\n            if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\r\n                // Add getPathSegAtLength to SVGPathElement.\r\n                // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\r\n                // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\r\n                window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\r\n                    if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\r\n\r\n                    var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\r\n                    measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\r\n                    var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\r\n\r\n                    // If the path is empty, return 0.\r\n                    if (lastPathSegment <= 0) return 0;\r\n\r\n                    do {\r\n                        measurementElement.pathSegList.removeItem(lastPathSegment);\r\n                        if (distance > measurementElement.getTotalLength()) break;\r\n                        lastPathSegment--;\r\n                    } while (lastPathSegment > 0);\r\n                    return lastPathSegment;\r\n                };\r\n            }\r\n        }\r\n\r\n        if (!(\"SVGPathSegList\" in window)) {\r\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\r\n            window.SVGPathSegList = function (pathElement) {\r\n                this._pathElement = pathElement;\r\n                this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\r\n\r\n                // Use a MutationObserver to catch changes to the path's \"d\" attribute.\r\n                this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\r\n                this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\r\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\r\n            };\r\n\r\n            window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\r\n\r\n            Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\r\n                get: function get() {\r\n                    this._checkPathSynchronizedToList();\r\n                    return this._list.length;\r\n                },\r\n                enumerable: true\r\n            });\r\n\r\n            // Add the pathSegList accessors to window.SVGPathElement.\r\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\r\n            Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\r\n                get: function get() {\r\n                    if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\r\n                    return this._pathSegList;\r\n                },\r\n                enumerable: true\r\n            });\r\n            // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\r\n            Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function get() {\r\n                    return this.pathSegList;\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function get() {\r\n                    return this.pathSegList;\r\n                }, enumerable: true });\r\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function get() {\r\n                    return this.pathSegList;\r\n                }, enumerable: true });\r\n\r\n            // Process any pending mutations to the path element and update the list as needed.\r\n            // This should be the first call of all public functions and is needed because\r\n            // MutationObservers are not synchronous so we can have pending asynchronous mutations.\r\n            window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\r\n                this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\r\n            };\r\n\r\n            window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\r\n                if (!this._pathElement) return;\r\n                var hasPathMutations = false;\r\n                mutationRecords.forEach(function (record) {\r\n                    if (record.attributeName == \"d\") hasPathMutations = true;\r\n                });\r\n                if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\r\n            };\r\n\r\n            // Serialize the list and update the path's 'd' attribute.\r\n            window.SVGPathSegList.prototype._writeListToPath = function () {\r\n                this._pathElementMutationObserver.disconnect();\r\n                this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\r\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\r\n            };\r\n\r\n            // When a path segment changes the list needs to be synchronized back to the path element.\r\n            window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\r\n                this._writeListToPath();\r\n            };\r\n\r\n            window.SVGPathSegList.prototype.clear = function () {\r\n                this._checkPathSynchronizedToList();\r\n\r\n                this._list.forEach(function (pathSeg) {\r\n                    pathSeg._owningPathSegList = null;\r\n                });\r\n                this._list = [];\r\n                this._writeListToPath();\r\n            };\r\n\r\n            window.SVGPathSegList.prototype.initialize = function (newItem) {\r\n                this._checkPathSynchronizedToList();\r\n\r\n                this._list = [newItem];\r\n                newItem._owningPathSegList = this;\r\n                this._writeListToPath();\r\n                return newItem;\r\n            };\r\n\r\n            window.SVGPathSegList.prototype._checkValidIndex = function (index) {\r\n                if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\r\n            };\r\n\r\n            window.SVGPathSegList.prototype.getItem = function (index) {\r\n                this._checkPathSynchronizedToList();\r\n\r\n                this._checkValidIndex(index);\r\n                return this._list[index];\r\n            };\r\n\r\n            window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\r\n                this._checkPathSynchronizedToList();\r\n\r\n                // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\r\n                if (index > this.numberOfItems) index = this.numberOfItems;\r\n                if (newItem._owningPathSegList) {\r\n                    // SVG2 spec says to make a copy.\r\n                    newItem = newItem.clone();\r\n                }\r\n                this._list.splice(index, 0, newItem);\r\n                newItem._owningPathSegList = this;\r\n                this._writeListToPath();\r\n                return newItem;\r\n            };\r\n\r\n            window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\r\n                this._checkPathSynchronizedToList();\r\n\r\n                if (newItem._owningPathSegList) {\r\n                    // SVG2 spec says to make a copy.\r\n                    newItem = newItem.clone();\r\n                }\r\n                this._checkValidIndex(index);\r\n                this._list[index] = newItem;\r\n                newItem._owningPathSegList = this;\r\n                this._writeListToPath();\r\n                return newItem;\r\n            };\r\n\r\n            window.SVGPathSegList.prototype.removeItem = function (index) {\r\n                this._checkPathSynchronizedToList();\r\n\r\n                this._checkValidIndex(index);\r\n                var item = this._list[index];\r\n                this._list.splice(index, 1);\r\n                this._writeListToPath();\r\n                return item;\r\n            };\r\n\r\n            window.SVGPathSegList.prototype.appendItem = function (newItem) {\r\n                this._checkPathSynchronizedToList();\r\n\r\n                if (newItem._owningPathSegList) {\r\n                    // SVG2 spec says to make a copy.\r\n                    newItem = newItem.clone();\r\n                }\r\n                this._list.push(newItem);\r\n                newItem._owningPathSegList = this;\r\n                // TODO: Optimize this to just append to the existing attribute.\r\n                this._writeListToPath();\r\n                return newItem;\r\n            };\r\n\r\n            window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\r\n                var string = \"\";\r\n                var first = true;\r\n                pathSegArray.forEach(function (pathSeg) {\r\n                    if (first) {\r\n                        first = false;\r\n                        string += pathSeg._asPathString();\r\n                    } else {\r\n                        string += \" \" + pathSeg._asPathString();\r\n                    }\r\n                });\r\n                return string;\r\n            };\r\n\r\n            // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\r\n            window.SVGPathSegList.prototype._parsePath = function (string) {\r\n                if (!string || string.length == 0) return [];\r\n\r\n                var owningPathSegList = this;\r\n\r\n                var Builder = function Builder() {\r\n                    this.pathSegList = [];\r\n                };\r\n\r\n                Builder.prototype.appendSegment = function (pathSeg) {\r\n                    this.pathSegList.push(pathSeg);\r\n                };\r\n\r\n                var Source = function Source(string) {\r\n                    this._string = string;\r\n                    this._currentIndex = 0;\r\n                    this._endIndex = this._string.length;\r\n                    this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\r\n\r\n                    this._skipOptionalSpaces();\r\n                };\r\n\r\n                Source.prototype._isCurrentSpace = function () {\r\n                    var character = this._string[this._currentIndex];\r\n                    return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\r\n                };\r\n\r\n                Source.prototype._skipOptionalSpaces = function () {\r\n                    while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\r\n                        this._currentIndex++;\r\n                    }return this._currentIndex < this._endIndex;\r\n                };\r\n\r\n                Source.prototype._skipOptionalSpacesOrDelimiter = function () {\r\n                    if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\r\n                    if (this._skipOptionalSpaces()) {\r\n                        if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\r\n                            this._currentIndex++;\r\n                            this._skipOptionalSpaces();\r\n                        }\r\n                    }\r\n                    return this._currentIndex < this._endIndex;\r\n                };\r\n\r\n                Source.prototype.hasMoreData = function () {\r\n                    return this._currentIndex < this._endIndex;\r\n                };\r\n\r\n                Source.prototype.peekSegmentType = function () {\r\n                    var lookahead = this._string[this._currentIndex];\r\n                    return this._pathSegTypeFromChar(lookahead);\r\n                };\r\n\r\n                Source.prototype._pathSegTypeFromChar = function (lookahead) {\r\n                    switch (lookahead) {\r\n                        case \"Z\":\r\n                        case \"z\":\r\n                            return window.SVGPathSeg.PATHSEG_CLOSEPATH;\r\n                        case \"M\":\r\n                            return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\r\n                        case \"m\":\r\n                            return window.SVGPathSeg.PATHSEG_MOVETO_REL;\r\n                        case \"L\":\r\n                            return window.SVGPathSeg.PATHSEG_LINETO_ABS;\r\n                        case \"l\":\r\n                            return window.SVGPathSeg.PATHSEG_LINETO_REL;\r\n                        case \"C\":\r\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\r\n                        case \"c\":\r\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\r\n                        case \"Q\":\r\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\r\n                        case \"q\":\r\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\r\n                        case \"A\":\r\n                            return window.SVGPathSeg.PATHSEG_ARC_ABS;\r\n                        case \"a\":\r\n                            return window.SVGPathSeg.PATHSEG_ARC_REL;\r\n                        case \"H\":\r\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\r\n                        case \"h\":\r\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\r\n                        case \"V\":\r\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\r\n                        case \"v\":\r\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\r\n                        case \"S\":\r\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\r\n                        case \"s\":\r\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\r\n                        case \"T\":\r\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\r\n                        case \"t\":\r\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\r\n                        default:\r\n                            return window.SVGPathSeg.PATHSEG_UNKNOWN;\r\n                    }\r\n                };\r\n\r\n                Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\r\n                    // Check for remaining coordinates in the current command.\r\n                    if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\r\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\r\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\r\n                        return previousCommand;\r\n                    }\r\n                    return window.SVGPathSeg.PATHSEG_UNKNOWN;\r\n                };\r\n\r\n                Source.prototype.initialCommandIsMoveTo = function () {\r\n                    // If the path is empty it is still valid, so return true.\r\n                    if (!this.hasMoreData()) return true;\r\n                    var command = this.peekSegmentType();\r\n                    // Path must start with moveTo.\r\n                    return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\r\n                };\r\n\r\n                // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\r\n                // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\r\n                Source.prototype._parseNumber = function () {\r\n                    var exponent = 0;\r\n                    var integer = 0;\r\n                    var frac = 1;\r\n                    var decimal = 0;\r\n                    var sign = 1;\r\n                    var expsign = 1;\r\n\r\n                    var startIndex = this._currentIndex;\r\n\r\n                    this._skipOptionalSpaces();\r\n\r\n                    // Read the sign.\r\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\r\n                        this._currentIndex++;\r\n                        sign = -1;\r\n                    }\r\n\r\n                    if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\")\r\n                        // The first character of a number must be one of [0-9+-.].\r\n                        return undefined;\r\n\r\n                    // Read the integer part, build right-to-left.\r\n                    var startIntPartIndex = this._currentIndex;\r\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\r\n                        this._currentIndex++;\r\n                    } // Advance to first non-digit.\r\n\r\n                    if (this._currentIndex != startIntPartIndex) {\r\n                        var scanIntPartIndex = this._currentIndex - 1;\r\n                        var multiplier = 1;\r\n                        while (scanIntPartIndex >= startIntPartIndex) {\r\n                            integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\r\n                            multiplier *= 10;\r\n                        }\r\n                    }\r\n\r\n                    // Read the decimals.\r\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\r\n                        this._currentIndex++;\r\n\r\n                        // There must be a least one digit following the .\r\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\r\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\r\n                            frac *= 10;\r\n                            decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\r\n                            this._currentIndex += 1;\r\n                        }\r\n                    }\r\n\r\n                    // Read the exponent part.\r\n                    if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\r\n                        this._currentIndex++;\r\n\r\n                        // Read the sign of the exponent.\r\n                        if (this._string.charAt(this._currentIndex) == \"+\") {\r\n                            this._currentIndex++;\r\n                        } else if (this._string.charAt(this._currentIndex) == \"-\") {\r\n                            this._currentIndex++;\r\n                            expsign = -1;\r\n                        }\r\n\r\n                        // There must be an exponent.\r\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\r\n\r\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\r\n                            exponent *= 10;\r\n                            exponent += this._string.charAt(this._currentIndex) - \"0\";\r\n                            this._currentIndex++;\r\n                        }\r\n                    }\r\n\r\n                    var number = integer + decimal;\r\n                    number *= sign;\r\n\r\n                    if (exponent) number *= Math.pow(10, expsign * exponent);\r\n\r\n                    if (startIndex == this._currentIndex) return undefined;\r\n\r\n                    this._skipOptionalSpacesOrDelimiter();\r\n\r\n                    return number;\r\n                };\r\n\r\n                Source.prototype._parseArcFlag = function () {\r\n                    if (this._currentIndex >= this._endIndex) return undefined;\r\n                    var flag = false;\r\n                    var flagChar = this._string.charAt(this._currentIndex++);\r\n                    if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\r\n\r\n                    this._skipOptionalSpacesOrDelimiter();\r\n                    return flag;\r\n                };\r\n\r\n                Source.prototype.parseSegment = function () {\r\n                    var lookahead = this._string[this._currentIndex];\r\n                    var command = this._pathSegTypeFromChar(lookahead);\r\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\r\n                        // Possibly an implicit command. Not allowed if this is the first command.\r\n                        if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\r\n                        command = this._nextCommandHelper(lookahead, this._previousCommand);\r\n                        if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\r\n                    } else {\r\n                        this._currentIndex++;\r\n                    }\r\n\r\n                    this._previousCommand = command;\r\n\r\n                    switch (command) {\r\n                        case window.SVGPathSeg.PATHSEG_MOVETO_REL:\r\n                            return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\r\n                            return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_LINETO_REL:\r\n                            return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_LINETO_ABS:\r\n                            return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\r\n                            return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\r\n                            return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\r\n                            return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\r\n                            return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_CLOSEPATH:\r\n                            this._skipOptionalSpaces();\r\n                            return new window.SVGPathSegClosePath(owningPathSegList);\r\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\r\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                            return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\r\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\r\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                            return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\r\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\r\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                            return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\r\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\r\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                            return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\r\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\r\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                            return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\r\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\r\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\r\n                            return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\r\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\r\n                            return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\r\n                            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\r\n                        case window.SVGPathSeg.PATHSEG_ARC_REL:\r\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\r\n                            return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\r\n                        case window.SVGPathSeg.PATHSEG_ARC_ABS:\r\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\r\n                            return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\r\n                        default:\r\n                            throw \"Unknown path seg type.\";\r\n                    }\r\n                };\r\n\r\n                var builder = new Builder();\r\n                var source = new Source(string);\r\n\r\n                if (!source.initialCommandIsMoveTo()) return [];\r\n                while (source.hasMoreData()) {\r\n                    var pathSeg = source.parseSegment();\r\n                    if (!pathSeg) return [];\r\n                    builder.appendSegment(pathSeg);\r\n                }\r\n\r\n                return builder.pathSegList;\r\n            };\r\n        }\r\n    })();\r\n\r\n    // String.padEnd polyfill for IE11\r\n    //\r\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\r\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\r\n    if (!String.prototype.padEnd) {\r\n        String.prototype.padEnd = function padEnd(targetLength, padString) {\r\n            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\r\n            padString = String(typeof padString !== 'undefined' ? padString : ' ');\r\n            if (this.length > targetLength) {\r\n                return String(this);\r\n            } else {\r\n                targetLength = targetLength - this.length;\r\n                if (targetLength > padString.length) {\r\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\r\n                }\r\n                return String(this) + padString.slice(0, targetLength);\r\n            }\r\n        };\r\n    }\r\n\r\n    /* jshint ignore:end */\r\n\r\n    c3_chart_fn.axis = function () {};\r\n    c3_chart_fn.axis.labels = function (labels) {\r\n        var $$ = this.internal;\r\n        if (arguments.length) {\r\n            Object.keys(labels).forEach(function (axisId) {\r\n                $$.axis.setLabelText(axisId, labels[axisId]);\r\n            });\r\n            $$.axis.updateLabels();\r\n        }\r\n        // TODO: return some values?\r\n    };\r\n    c3_chart_fn.axis.max = function (max) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        if (arguments.length) {\r\n            if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\r\n                if (isValue(max.x)) {\r\n                    config.axis_x_max = max.x;\r\n                }\r\n                if (isValue(max.y)) {\r\n                    config.axis_y_max = max.y;\r\n                }\r\n                if (isValue(max.y2)) {\r\n                    config.axis_y2_max = max.y2;\r\n                }\r\n            } else {\r\n                config.axis_y_max = config.axis_y2_max = max;\r\n            }\r\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\r\n        } else {\r\n            return {\r\n                x: config.axis_x_max,\r\n                y: config.axis_y_max,\r\n                y2: config.axis_y2_max\r\n            };\r\n        }\r\n    };\r\n    c3_chart_fn.axis.min = function (min) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        if (arguments.length) {\r\n            if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\r\n                if (isValue(min.x)) {\r\n                    config.axis_x_min = min.x;\r\n                }\r\n                if (isValue(min.y)) {\r\n                    config.axis_y_min = min.y;\r\n                }\r\n                if (isValue(min.y2)) {\r\n                    config.axis_y2_min = min.y2;\r\n                }\r\n            } else {\r\n                config.axis_y_min = config.axis_y2_min = min;\r\n            }\r\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\r\n        } else {\r\n            return {\r\n                x: config.axis_x_min,\r\n                y: config.axis_y_min,\r\n                y2: config.axis_y2_min\r\n            };\r\n        }\r\n    };\r\n    c3_chart_fn.axis.range = function (range) {\r\n        if (arguments.length) {\r\n            if (isDefined(range.max)) {\r\n                this.axis.max(range.max);\r\n            }\r\n            if (isDefined(range.min)) {\r\n                this.axis.min(range.min);\r\n            }\r\n        } else {\r\n            return {\r\n                max: this.axis.max(),\r\n                min: this.axis.min()\r\n            };\r\n        }\r\n    };\r\n\r\n    c3_chart_fn.category = function (i, category) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        if (arguments.length > 1) {\r\n            config.axis_x_categories[i] = category;\r\n            $$.redraw();\r\n        }\r\n        return config.axis_x_categories[i];\r\n    };\r\n    c3_chart_fn.categories = function (categories) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        if (!arguments.length) {\r\n            return config.axis_x_categories;\r\n        }\r\n        config.axis_x_categories = categories;\r\n        $$.redraw();\r\n        return config.axis_x_categories;\r\n    };\r\n\r\n    c3_chart_fn.resize = function (size) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        config.size_width = size ? size.width : null;\r\n        config.size_height = size ? size.height : null;\r\n        this.flush();\r\n    };\r\n\r\n    c3_chart_fn.flush = function () {\r\n        var $$ = this.internal;\r\n        $$.updateAndRedraw({ withLegend: true, withTransition: false, withTransitionForTransform: false });\r\n    };\r\n\r\n    c3_chart_fn.destroy = function () {\r\n        var $$ = this.internal;\r\n\r\n        window.clearInterval($$.intervalForObserveInserted);\r\n\r\n        if ($$.resizeTimeout !== undefined) {\r\n            window.clearTimeout($$.resizeTimeout);\r\n        }\r\n\r\n        if (window.detachEvent) {\r\n            window.detachEvent('onresize', $$.resizeIfElementDisplayed);\r\n        } else if (window.removeEventListener) {\r\n            window.removeEventListener('resize', $$.resizeIfElementDisplayed);\r\n        } else {\r\n            var wrapper = window.onresize;\r\n            // check if no one else removed our wrapper and remove our resizeFunction from it\r\n            if (wrapper && wrapper.add && wrapper.remove) {\r\n                wrapper.remove($$.resizeFunction);\r\n            }\r\n        }\r\n\r\n        // remove the inner resize functions\r\n        $$.resizeFunction.remove();\r\n\r\n        $$.selectChart.classed('c3', false).html(\"\");\r\n\r\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\r\n        Object.keys($$).forEach(function (key) {\r\n            $$[key] = null;\r\n        });\r\n\r\n        return null;\r\n    };\r\n\r\n    // TODO: fix\r\n    c3_chart_fn.color = function (id) {\r\n        var $$ = this.internal;\r\n        return $$.color(id); // more patterns\r\n    };\r\n\r\n    c3_chart_fn.data = function (targetIds) {\r\n        var targets = this.internal.data.targets;\r\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\r\n            return [].concat(targetIds).indexOf(t.id) >= 0;\r\n        });\r\n    };\r\n    c3_chart_fn.data.shown = function (targetIds) {\r\n        return this.internal.filterTargetsToShow(this.data(targetIds));\r\n    };\r\n    c3_chart_fn.data.values = function (targetId) {\r\n        var targets,\r\n            values = null;\r\n        if (targetId) {\r\n            targets = this.data(targetId);\r\n            values = targets[0] ? targets[0].values.map(function (d) {\r\n                return d.value;\r\n            }) : null;\r\n        }\r\n        return values;\r\n    };\r\n    c3_chart_fn.data.names = function (names) {\r\n        this.internal.clearLegendItemTextBoxCache();\r\n        return this.internal.updateDataAttributes('names', names);\r\n    };\r\n    c3_chart_fn.data.colors = function (colors) {\r\n        return this.internal.updateDataAttributes('colors', colors);\r\n    };\r\n    c3_chart_fn.data.axes = function (axes) {\r\n        return this.internal.updateDataAttributes('axes', axes);\r\n    };\r\n\r\n    c3_chart_fn.flow = function (args) {\r\n        var $$ = this.internal,\r\n            targets,\r\n            data,\r\n            notfoundIds = [],\r\n            orgDataCount = $$.getMaxDataCount(),\r\n            dataCount,\r\n            domain,\r\n            baseTarget,\r\n            baseValue,\r\n            length = 0,\r\n            tail = 0,\r\n            diff,\r\n            to;\r\n\r\n        if (args.json) {\r\n            data = $$.convertJsonToData(args.json, args.keys);\r\n        } else if (args.rows) {\r\n            data = $$.convertRowsToData(args.rows);\r\n        } else if (args.columns) {\r\n            data = $$.convertColumnsToData(args.columns);\r\n        } else {\r\n            return;\r\n        }\r\n        targets = $$.convertDataToTargets(data, true);\r\n\r\n        // Update/Add data\r\n        $$.data.targets.forEach(function (t) {\r\n            var found = false,\r\n                i,\r\n                j;\r\n            for (i = 0; i < targets.length; i++) {\r\n                if (t.id === targets[i].id) {\r\n                    found = true;\r\n\r\n                    if (t.values[t.values.length - 1]) {\r\n                        tail = t.values[t.values.length - 1].index + 1;\r\n                    }\r\n                    length = targets[i].values.length;\r\n\r\n                    for (j = 0; j < length; j++) {\r\n                        targets[i].values[j].index = tail + j;\r\n                        if (!$$.isTimeSeries()) {\r\n                            targets[i].values[j].x = tail + j;\r\n                        }\r\n                    }\r\n                    t.values = t.values.concat(targets[i].values);\r\n\r\n                    targets.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                notfoundIds.push(t.id);\r\n            }\r\n        });\r\n\r\n        // Append null for not found targets\r\n        $$.data.targets.forEach(function (t) {\r\n            var i, j;\r\n            for (i = 0; i < notfoundIds.length; i++) {\r\n                if (t.id === notfoundIds[i]) {\r\n                    tail = t.values[t.values.length - 1].index + 1;\r\n                    for (j = 0; j < length; j++) {\r\n                        t.values.push({\r\n                            id: t.id,\r\n                            index: tail + j,\r\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\r\n                            value: null\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // Generate null values for new target\r\n        if ($$.data.targets.length) {\r\n            targets.forEach(function (t) {\r\n                var i,\r\n                    missing = [];\r\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\r\n                    missing.push({\r\n                        id: t.id,\r\n                        index: i,\r\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\r\n                        value: null\r\n                    });\r\n                }\r\n                t.values.forEach(function (v) {\r\n                    v.index += tail;\r\n                    if (!$$.isTimeSeries()) {\r\n                        v.x += tail;\r\n                    }\r\n                });\r\n                t.values = missing.concat(t.values);\r\n            });\r\n        }\r\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\r\n\r\n        // check data count because behavior needs to change when it's only one\r\n        dataCount = $$.getMaxDataCount();\r\n        baseTarget = $$.data.targets[0];\r\n        baseValue = baseTarget.values[0];\r\n\r\n        // Update length to flow if needed\r\n        if (isDefined(args.to)) {\r\n            length = 0;\r\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\r\n            baseTarget.values.forEach(function (v) {\r\n                if (v.x < to) {\r\n                    length++;\r\n                }\r\n            });\r\n        } else if (isDefined(args.length)) {\r\n            length = args.length;\r\n        }\r\n\r\n        // If only one data, update the domain to flow from left edge of the chart\r\n        if (!orgDataCount) {\r\n            if ($$.isTimeSeries()) {\r\n                if (baseTarget.values.length > 1) {\r\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\r\n                } else {\r\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\r\n                }\r\n            } else {\r\n                diff = 1;\r\n            }\r\n            domain = [baseValue.x - diff, baseValue.x];\r\n            $$.updateXDomain(null, true, true, false, domain);\r\n        } else if (orgDataCount === 1) {\r\n            if ($$.isTimeSeries()) {\r\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\r\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\r\n                $$.updateXDomain(null, true, true, false, domain);\r\n            }\r\n        }\r\n\r\n        // Set targets\r\n        $$.updateTargets($$.data.targets);\r\n\r\n        // Redraw with new targets\r\n        $$.redraw({\r\n            flow: {\r\n                index: baseValue.index,\r\n                length: length,\r\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\r\n                done: args.done,\r\n                orgDataCount: orgDataCount\r\n            },\r\n            withLegend: true,\r\n            withTransition: orgDataCount > 1,\r\n            withTrimXDomain: false,\r\n            withUpdateXAxis: true\r\n        });\r\n    };\r\n\r\n    c3_chart_internal_fn.generateFlow = function (args) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            d3 = $$.d3;\r\n\r\n        return function () {\r\n            var targets = args.targets,\r\n                flow = args.flow,\r\n                drawBar = args.drawBar,\r\n                drawLine = args.drawLine,\r\n                drawArea = args.drawArea,\r\n                cx = args.cx,\r\n                cy = args.cy,\r\n                xv = args.xv,\r\n                xForText = args.xForText,\r\n                yForText = args.yForText,\r\n                duration = args.duration;\r\n\r\n            var translateX,\r\n                scaleX = 1,\r\n                transform,\r\n                flowIndex = flow.index,\r\n                flowLength = flow.length,\r\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\r\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\r\n                orgDomain = $$.x.domain(),\r\n                domain,\r\n                durationForFlow = flow.duration || duration,\r\n                done = flow.done || function () {},\r\n                wait = $$.generateWait();\r\n\r\n            var xgrid = $$.xgrid || d3.selectAll([]),\r\n                xgridLines = $$.xgridLines || d3.selectAll([]),\r\n                mainRegion = $$.mainRegion || d3.selectAll([]),\r\n                mainText = $$.mainText || d3.selectAll([]),\r\n                mainBar = $$.mainBar || d3.selectAll([]),\r\n                mainLine = $$.mainLine || d3.selectAll([]),\r\n                mainArea = $$.mainArea || d3.selectAll([]),\r\n                mainCircle = $$.mainCircle || d3.selectAll([]);\r\n\r\n            // set flag\r\n            $$.flowing = true;\r\n\r\n            // remove head data after rendered\r\n            $$.data.targets.forEach(function (d) {\r\n                d.values.splice(0, flowLength);\r\n            });\r\n\r\n            // update x domain to generate axis elements for flow\r\n            domain = $$.updateXDomain(targets, true, true);\r\n            // update elements related to x scale\r\n            if ($$.updateXGrid) {\r\n                $$.updateXGrid(true);\r\n            }\r\n\r\n            // generate transform to flow\r\n            if (!flow.orgDataCount) {\r\n                // if empty\r\n                if ($$.data.targets[0].values.length !== 1) {\r\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\r\n                } else {\r\n                    if ($$.isTimeSeries()) {\r\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\r\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\r\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\r\n                    } else {\r\n                        translateX = diffDomain(domain) / 2;\r\n                    }\r\n                }\r\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\r\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\r\n            } else {\r\n                if ($$.isTimeSeries()) {\r\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\r\n                } else {\r\n                    translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\r\n                }\r\n            }\r\n            scaleX = diffDomain(orgDomain) / diffDomain(domain);\r\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\r\n\r\n            $$.hideXGridFocus();\r\n\r\n            d3.transition().ease('linear').duration(durationForFlow).each(function () {\r\n                wait.add($$.axes.x.transition().call($$.xAxis));\r\n                wait.add(mainBar.transition().attr('transform', transform));\r\n                wait.add(mainLine.transition().attr('transform', transform));\r\n                wait.add(mainArea.transition().attr('transform', transform));\r\n                wait.add(mainCircle.transition().attr('transform', transform));\r\n                wait.add(mainText.transition().attr('transform', transform));\r\n                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\r\n                wait.add(xgrid.transition().attr('transform', transform));\r\n                wait.add(xgridLines.transition().attr('transform', transform));\r\n            }).call(wait, function () {\r\n                var i,\r\n                    shapes = [],\r\n                    texts = [],\r\n                    eventRects = [];\r\n\r\n                // remove flowed elements\r\n                if (flowLength) {\r\n                    for (i = 0; i < flowLength; i++) {\r\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\r\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\r\n                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\r\n                    }\r\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\r\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\r\n                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\r\n                    $$.svg.select('.' + CLASS.xgrid).remove();\r\n                }\r\n\r\n                // draw again for removing flowed elements and reverting attr\r\n                xgrid.attr('transform', null).attr($$.xgridAttr);\r\n                xgridLines.attr('transform', null);\r\n                xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\r\n                xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\r\n                mainBar.attr('transform', null).attr(\"d\", drawBar);\r\n                mainLine.attr('transform', null).attr(\"d\", drawLine);\r\n                mainArea.attr('transform', null).attr(\"d\", drawArea);\r\n                mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\r\n                mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\r\n                mainRegion.attr('transform', null);\r\n                mainRegion.select('rect').filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\r\n\r\n                if (config.interaction_enabled) {\r\n                    $$.redrawEventRect();\r\n                }\r\n\r\n                // callback for end of flow\r\n                done();\r\n\r\n                $$.flowing = false;\r\n            });\r\n        };\r\n    };\r\n\r\n    c3_chart_fn.focus = function (targetIds) {\r\n        var $$ = this.internal,\r\n            candidates;\r\n\r\n        targetIds = $$.mapToTargetIds(targetIds);\r\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\r\n        this.defocus();\r\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\r\n        if ($$.hasArcType()) {\r\n            $$.expandArc(targetIds);\r\n        }\r\n        $$.toggleFocusLegend(targetIds, true);\r\n\r\n        $$.focusedTargetIds = targetIds;\r\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\r\n            return targetIds.indexOf(id) < 0;\r\n        });\r\n    };\r\n\r\n    c3_chart_fn.defocus = function (targetIds) {\r\n        var $$ = this.internal,\r\n            candidates;\r\n\r\n        targetIds = $$.mapToTargetIds(targetIds);\r\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\r\n        if ($$.hasArcType()) {\r\n            $$.unexpandArc(targetIds);\r\n        }\r\n        $$.toggleFocusLegend(targetIds, false);\r\n\r\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\r\n            return targetIds.indexOf(id) < 0;\r\n        });\r\n        $$.defocusedTargetIds = targetIds;\r\n    };\r\n\r\n    c3_chart_fn.revert = function (targetIds) {\r\n        var $$ = this.internal,\r\n            candidates;\r\n\r\n        targetIds = $$.mapToTargetIds(targetIds);\r\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\r\n\r\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\r\n        if ($$.hasArcType()) {\r\n            $$.unexpandArc(targetIds);\r\n        }\r\n        if ($$.config.legend_show) {\r\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\r\n            $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\r\n                return $$.d3.select(this).classed(CLASS.legendItemFocused);\r\n            }).classed(CLASS.legendItemFocused, false);\r\n        }\r\n\r\n        $$.focusedTargetIds = [];\r\n        $$.defocusedTargetIds = [];\r\n    };\r\n\r\n    c3_chart_fn.xgrids = function (grids) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        if (!grids) {\r\n            return config.grid_x_lines;\r\n        }\r\n        config.grid_x_lines = grids;\r\n        $$.redrawWithoutRescale();\r\n        return config.grid_x_lines;\r\n    };\r\n    c3_chart_fn.xgrids.add = function (grids) {\r\n        var $$ = this.internal;\r\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\r\n    };\r\n    c3_chart_fn.xgrids.remove = function (params) {\r\n        // TODO: multiple\r\n        var $$ = this.internal;\r\n        $$.removeGridLines(params, true);\r\n    };\r\n\r\n    c3_chart_fn.ygrids = function (grids) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        if (!grids) {\r\n            return config.grid_y_lines;\r\n        }\r\n        config.grid_y_lines = grids;\r\n        $$.redrawWithoutRescale();\r\n        return config.grid_y_lines;\r\n    };\r\n    c3_chart_fn.ygrids.add = function (grids) {\r\n        var $$ = this.internal;\r\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\r\n    };\r\n    c3_chart_fn.ygrids.remove = function (params) {\r\n        // TODO: multiple\r\n        var $$ = this.internal;\r\n        $$.removeGridLines(params, false);\r\n    };\r\n\r\n    c3_chart_fn.groups = function (groups) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        if (isUndefined(groups)) {\r\n            return config.data_groups;\r\n        }\r\n        config.data_groups = groups;\r\n        $$.redraw();\r\n        return config.data_groups;\r\n    };\r\n\r\n    c3_chart_fn.legend = function () {};\r\n    c3_chart_fn.legend.show = function (targetIds) {\r\n        var $$ = this.internal;\r\n        $$.showLegend($$.mapToTargetIds(targetIds));\r\n        $$.updateAndRedraw({ withLegend: true });\r\n    };\r\n    c3_chart_fn.legend.hide = function (targetIds) {\r\n        var $$ = this.internal;\r\n        $$.hideLegend($$.mapToTargetIds(targetIds));\r\n        $$.updateAndRedraw({ withLegend: true });\r\n    };\r\n\r\n    c3_chart_fn.load = function (args) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        // update xs if specified\r\n        if (args.xs) {\r\n            $$.addXs(args.xs);\r\n        }\r\n        // update names if exists\r\n        if ('names' in args) {\r\n            c3_chart_fn.data.names.bind(this)(args.names);\r\n        }\r\n        // update classes if exists\r\n        if ('classes' in args) {\r\n            Object.keys(args.classes).forEach(function (id) {\r\n                config.data_classes[id] = args.classes[id];\r\n            });\r\n        }\r\n        // update categories if exists\r\n        if ('categories' in args && $$.isCategorized()) {\r\n            config.axis_x_categories = args.categories;\r\n        }\r\n        // update axes if exists\r\n        if ('axes' in args) {\r\n            Object.keys(args.axes).forEach(function (id) {\r\n                config.data_axes[id] = args.axes[id];\r\n            });\r\n        }\r\n        // update colors if exists\r\n        if ('colors' in args) {\r\n            Object.keys(args.colors).forEach(function (id) {\r\n                config.data_colors[id] = args.colors[id];\r\n            });\r\n        }\r\n        // use cache if exists\r\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\r\n            $$.load($$.getCaches(args.cacheIds), args.done);\r\n            return;\r\n        }\r\n        // unload if needed\r\n        if ('unload' in args) {\r\n            // TODO: do not unload if target will load (included in url/rows/columns)\r\n            $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\r\n                $$.loadFromArgs(args);\r\n            });\r\n        } else {\r\n            $$.loadFromArgs(args);\r\n        }\r\n    };\r\n\r\n    c3_chart_fn.unload = function (args) {\r\n        var $$ = this.internal;\r\n        args = args || {};\r\n        if (args instanceof Array) {\r\n            args = { ids: args };\r\n        } else if (typeof args === 'string') {\r\n            args = { ids: [args] };\r\n        }\r\n        $$.unload($$.mapToTargetIds(args.ids), function () {\r\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\r\n            if (args.done) {\r\n                args.done();\r\n            }\r\n        });\r\n    };\r\n\r\n    c3_chart_fn.regions = function (regions) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        if (!regions) {\r\n            return config.regions;\r\n        }\r\n        config.regions = regions;\r\n        $$.redrawWithoutRescale();\r\n        return config.regions;\r\n    };\r\n    c3_chart_fn.regions.add = function (regions) {\r\n        var $$ = this.internal,\r\n            config = $$.config;\r\n        if (!regions) {\r\n            return config.regions;\r\n        }\r\n        config.regions = config.regions.concat(regions);\r\n        $$.redrawWithoutRescale();\r\n        return config.regions;\r\n    };\r\n    c3_chart_fn.regions.remove = function (options) {\r\n        var $$ = this.internal,\r\n            config = $$.config,\r\n            duration,\r\n            classes,\r\n            regions;\r\n\r\n        options = options || {};\r\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\r\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\r\n\r\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\r\n            return '.' + c;\r\n        }));\r\n        (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\r\n\r\n        config.regions = config.regions.filter(function (region) {\r\n            var found = false;\r\n            if (!region['class']) {\r\n                return true;\r\n            }\r\n            region['class'].split(' ').forEach(function (c) {\r\n                if (classes.indexOf(c) >= 0) {\r\n                    found = true;\r\n                }\r\n            });\r\n            return !found;\r\n        });\r\n\r\n        return config.regions;\r\n    };\r\n\r\n    c3_chart_fn.selected = function (targetId) {\r\n        var $$ = this.internal,\r\n            d3 = $$.d3;\r\n        return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\r\n            return d3.select(this).classed(CLASS.SELECTED);\r\n        }).map(function (d) {\r\n            return d.map(function (d) {\r\n                var data = d.__data__;return data.data ? data.data : data;\r\n            });\r\n        }));\r\n    };\r\n    c3_chart_fn.select = function (ids, indices, resetOther) {\r\n        var $$ = this.internal,\r\n            d3 = $$.d3,\r\n            config = $$.config;\r\n        if (!config.data_selection_enabled) {\r\n            return;\r\n        }\r\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\r\n            var shape = d3.select(this),\r\n                id = d.data ? d.data.id : d.id,\r\n                toggle = $$.getToggle(this, d).bind($$),\r\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\r\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\r\n                isSelected = shape.classed(CLASS.SELECTED);\r\n            // line/area selection not supported yet\r\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\r\n                return;\r\n            }\r\n            if (isTargetId && isTargetIndex) {\r\n                if (config.data_selection_isselectable(d) && !isSelected) {\r\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\r\n                }\r\n            } else if (isDefined(resetOther) && resetOther) {\r\n                if (isSelected) {\r\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    c3_chart_fn.unselect = function (ids, indices) {\r\n        var $$ = this.internal,\r\n            d3 = $$.d3,\r\n            config = $$.config;\r\n        if (!config.data_selection_enabled) {\r\n            return;\r\n        }\r\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\r\n            var shape = d3.select(this),\r\n                id = d.data ? d.data.id : d.id,\r\n                toggle = $$.getToggle(this, d).bind($$),\r\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\r\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\r\n                isSelected = shape.classed(CLASS.SELECTED);\r\n            // line/area selection not supported yet\r\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\r\n                return;\r\n            }\r\n            if (isTargetId && isTargetIndex) {\r\n                if (config.data_selection_isselectable(d)) {\r\n                    if (isSelected) {\r\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    c3_chart_fn.show = function (targetIds, options) {\r\n        var $$ = this.internal,\r\n            targets;\r\n\r\n        targetIds = $$.mapToTargetIds(targetIds);\r\n        options = options || {};\r\n\r\n        $$.removeHiddenTargetIds(targetIds);\r\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\r\n\r\n        targets.transition().style('opacity', 1, 'important').call($$.endall, function () {\r\n            targets.style('opacity', null).style('opacity', 1);\r\n        });\r\n\r\n        if (options.withLegend) {\r\n            $$.showLegend(targetIds);\r\n        }\r\n\r\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\r\n    };\r\n\r\n    c3_chart_fn.hide = function (targetIds, options) {\r\n        var $$ = this.internal,\r\n            targets;\r\n\r\n        targetIds = $$.mapToTargetIds(targetIds);\r\n        options = options || {};\r\n\r\n        $$.addHiddenTargetIds(targetIds);\r\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\r\n\r\n        targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\r\n            targets.style('opacity', null).style('opacity', 0);\r\n        });\r\n\r\n        if (options.withLegend) {\r\n            $$.hideLegend(targetIds);\r\n        }\r\n\r\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\r\n    };\r\n\r\n    c3_chart_fn.toggle = function (targetIds, options) {\r\n        var that = this,\r\n            $$ = this.internal;\r\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\r\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\r\n        });\r\n    };\r\n\r\n    c3_chart_fn.tooltip = function () {};\r\n    c3_chart_fn.tooltip.show = function (args) {\r\n        var $$ = this.internal,\r\n            index,\r\n            mouse;\r\n\r\n        // determine mouse position on the chart\r\n        if (args.mouse) {\r\n            mouse = args.mouse;\r\n        }\r\n\r\n        // determine focus data\r\n        if (args.data) {\r\n            if ($$.isMultipleX()) {\r\n                // if multiple xs, target point will be determined by mouse\r\n                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\r\n                index = null;\r\n            } else {\r\n                // TODO: when tooltip_grouped = false\r\n                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\r\n            }\r\n        } else if (typeof args.x !== 'undefined') {\r\n            index = $$.getIndexByX(args.x);\r\n        } else if (typeof args.index !== 'undefined') {\r\n            index = args.index;\r\n        }\r\n\r\n        // emulate mouse events to show\r\n        $$.dispatchEvent('mouseover', index, mouse);\r\n        $$.dispatchEvent('mousemove', index, mouse);\r\n\r\n        $$.config.tooltip_onshow.call($$, args.data);\r\n    };\r\n    c3_chart_fn.tooltip.hide = function () {\r\n        // TODO: get target data by checking the state of focus\r\n        this.internal.dispatchEvent('mouseout', 0);\r\n\r\n        this.internal.config.tooltip_onhide.call(this);\r\n    };\r\n\r\n    c3_chart_fn.transform = function (type, targetIds) {\r\n        var $$ = this.internal,\r\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\r\n        $$.transformTo(targetIds, type, options);\r\n    };\r\n\r\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\r\n        var $$ = this,\r\n            withTransitionForAxis = !$$.hasArcType(),\r\n            options = optionsForRedraw || { withTransitionForAxis: withTransitionForAxis };\r\n        options.withTransitionForTransform = false;\r\n        $$.transiting = false;\r\n        $$.setTargetType(targetIds, type);\r\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\r\n        $$.updateAndRedraw(options);\r\n    };\r\n\r\n    c3_chart_fn.x = function (x) {\r\n        var $$ = this.internal;\r\n        if (arguments.length) {\r\n            $$.updateTargetX($$.data.targets, x);\r\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\r\n        }\r\n        return $$.data.xs;\r\n    };\r\n    c3_chart_fn.xs = function (xs) {\r\n        var $$ = this.internal;\r\n        if (arguments.length) {\r\n            $$.updateTargetXs($$.data.targets, xs);\r\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\r\n        }\r\n        return $$.data.xs;\r\n    };\r\n\r\n    c3_chart_fn.zoom = function (domain) {\r\n        var $$ = this.internal;\r\n        if (domain) {\r\n            if ($$.isTimeSeries()) {\r\n                domain = domain.map(function (x) {\r\n                    return $$.parseDate(x);\r\n                });\r\n            }\r\n            $$.brush.extent(domain);\r\n            $$.redraw({ withUpdateXDomain: true, withY: $$.config.zoom_rescale });\r\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\r\n        }\r\n        return $$.brush.extent();\r\n    };\r\n    c3_chart_fn.zoom.enable = function (enabled) {\r\n        var $$ = this.internal;\r\n        $$.config.zoom_enabled = enabled;\r\n        $$.updateAndRedraw();\r\n    };\r\n    c3_chart_fn.unzoom = function () {\r\n        var $$ = this.internal;\r\n        $$.brush.clear().update();\r\n        $$.redraw({ withUpdateXDomain: true });\r\n    };\r\n\r\n    c3_chart_fn.zoom.max = function (max) {\r\n        var $$ = this.internal,\r\n            config = $$.config,\r\n            d3 = $$.d3;\r\n        if (max === 0 || max) {\r\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\r\n        } else {\r\n            return config.zoom_x_max;\r\n        }\r\n    };\r\n\r\n    c3_chart_fn.zoom.min = function (min) {\r\n        var $$ = this.internal,\r\n            config = $$.config,\r\n            d3 = $$.d3;\r\n        if (min === 0 || min) {\r\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\r\n        } else {\r\n            return config.zoom_x_min;\r\n        }\r\n    };\r\n\r\n    c3_chart_fn.zoom.range = function (range) {\r\n        if (arguments.length) {\r\n            if (isDefined(range.max)) {\r\n                this.domain.max(range.max);\r\n            }\r\n            if (isDefined(range.min)) {\r\n                this.domain.min(range.min);\r\n            }\r\n        } else {\r\n            return {\r\n                max: this.domain.max(),\r\n                min: this.domain.min()\r\n            };\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.initPie = function () {\r\n        var $$ = this,\r\n            d3 = $$.d3;\r\n        $$.pie = d3.layout.pie().value(function (d) {\r\n            return d.values.reduce(function (a, b) {\r\n                return a + b.value;\r\n            }, 0);\r\n        });\r\n        $$.pie.sort($$.getOrderFunction() || null);\r\n    };\r\n\r\n    c3_chart_internal_fn.updateRadius = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            w = config.gauge_width || config.donut_width,\r\n            gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length * $$.config.gauge_arcs_minWidth;\r\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2 * ($$.hasType('gauge') ? 0.85 : 1);\r\n        $$.radius = $$.radiusExpanded * 0.95;\r\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\r\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\r\n        $$.gaugeArcWidth = w ? w : gaugeArcWidth <= $$.radius - $$.innerRadius ? $$.radius - $$.innerRadius : gaugeArcWidth <= $$.radius ? gaugeArcWidth : $$.radius;\r\n    };\r\n\r\n    c3_chart_internal_fn.updateArc = function () {\r\n        var $$ = this;\r\n        $$.svgArc = $$.getSvgArc();\r\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\r\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\r\n    };\r\n\r\n    c3_chart_internal_fn.updateAngle = function (d) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            found = false,\r\n            index = 0,\r\n            gMin,\r\n            gMax,\r\n            gTic,\r\n            gValue;\r\n\r\n        if (!config) {\r\n            return null;\r\n        }\r\n\r\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\r\n            if (!found && t.data.id === d.data.id) {\r\n                found = true;\r\n                d = t;\r\n                d.index = index;\r\n            }\r\n            index++;\r\n        });\r\n        if (isNaN(d.startAngle)) {\r\n            d.startAngle = 0;\r\n        }\r\n        if (isNaN(d.endAngle)) {\r\n            d.endAngle = d.startAngle;\r\n        }\r\n        if ($$.isGaugeType(d.data)) {\r\n            gMin = config.gauge_min;\r\n            gMax = config.gauge_max;\r\n            gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\r\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\r\n            d.startAngle = config.gauge_startingAngle;\r\n            d.endAngle = d.startAngle + gTic * gValue;\r\n        }\r\n        return found ? d : null;\r\n    };\r\n\r\n    c3_chart_internal_fn.getSvgArc = function () {\r\n        var $$ = this,\r\n            hasGaugeType = $$.hasType('gauge'),\r\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\r\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\r\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;\r\n        }).innerRadius(function (d) {\r\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\r\n        }),\r\n            newArc = function newArc(d, withoutUpdate) {\r\n            var updated;\r\n            if (withoutUpdate) {\r\n                return arc(d);\r\n            } // for interpolate\r\n            updated = $$.updateAngle(d);\r\n            return updated ? arc(updated) : \"M 0 0\";\r\n        };\r\n        // TODO: extends all function\r\n        newArc.centroid = arc.centroid;\r\n        return newArc;\r\n    };\r\n\r\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\r\n        rate = rate || 1;\r\n        var $$ = this,\r\n            hasGaugeType = $$.hasType('gauge'),\r\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\r\n            expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100),\r\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\r\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index + expandWidth : $$.radiusExpanded * rate;\r\n        }).innerRadius(function (d) {\r\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\r\n        });\r\n        return function (d) {\r\n            var updated = $$.updateAngle(d);\r\n            return updated ? arc(updated) : \"M 0 0\";\r\n        };\r\n    };\r\n\r\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\r\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\r\n    };\r\n\r\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            updated = $$.updateAngle(d),\r\n            c,\r\n            x,\r\n            y,\r\n            h,\r\n            ratio,\r\n            translate = \"\",\r\n            hasGauge = $$.hasType('gauge');\r\n        if (updated && !hasGauge) {\r\n            c = this.svgArc.centroid(updated);\r\n            x = isNaN(c[0]) ? 0 : c[0];\r\n            y = isNaN(c[1]) ? 0 : c[1];\r\n            h = Math.sqrt(x * x + y * y);\r\n            if ($$.hasType('donut') && config.donut_label_ratio) {\r\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\r\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\r\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\r\n            } else {\r\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\r\n            }\r\n            translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\r\n        } else if (updated && hasGauge && $$.filterTargetsToShow($$.data.targets).length > 1) {\r\n            var y1 = Math.sin(updated.endAngle - Math.PI / 2);\r\n            x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);\r\n            y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;\r\n            translate = \"translate(\" + x + ',' + y + \")\";\r\n        }\r\n        return translate;\r\n    };\r\n\r\n    c3_chart_internal_fn.getArcRatio = function (d) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\r\n        return d ? (d.endAngle - d.startAngle) / whole : null;\r\n    };\r\n\r\n    c3_chart_internal_fn.convertToArcData = function (d) {\r\n        return this.addName({\r\n            id: d.data.id,\r\n            value: d.value,\r\n            ratio: this.getArcRatio(d),\r\n            index: d.index\r\n        });\r\n    };\r\n\r\n    c3_chart_internal_fn.textForArcLabel = function (d) {\r\n        var $$ = this,\r\n            updated,\r\n            value,\r\n            ratio,\r\n            id,\r\n            format;\r\n        if (!$$.shouldShowArcLabel()) {\r\n            return \"\";\r\n        }\r\n        updated = $$.updateAngle(d);\r\n        value = updated ? updated.value : null;\r\n        ratio = $$.getArcRatio(updated);\r\n        id = d.data.id;\r\n        if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\r\n            return \"\";\r\n        }\r\n        format = $$.getArcLabelFormat();\r\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\r\n    };\r\n\r\n    c3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\r\n        var $$ = this,\r\n            format = $$.getGaugeLabelExtents();\r\n\r\n        return format ? format(value, isMax) : value;\r\n    };\r\n\r\n    c3_chart_internal_fn.expandArc = function (targetIds) {\r\n        var $$ = this,\r\n            interval;\r\n\r\n        // MEMO: avoid to cancel transition\r\n        if ($$.transiting) {\r\n            interval = window.setInterval(function () {\r\n                if (!$$.transiting) {\r\n                    window.clearInterval(interval);\r\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\r\n                        $$.expandArc(targetIds);\r\n                    }\r\n                }\r\n            }, 10);\r\n            return;\r\n        }\r\n\r\n        targetIds = $$.mapToTargetIds(targetIds);\r\n\r\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\r\n            if (!$$.shouldExpand(d.data.id)) {\r\n                return;\r\n            }\r\n            $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\r\n                if ($$.isDonutType(d.data)) ;\r\n            });\r\n        });\r\n    };\r\n\r\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\r\n        var $$ = this;\r\n\r\n        if ($$.transiting) {\r\n            return;\r\n        }\r\n\r\n        targetIds = $$.mapToTargetIds(targetIds);\r\n\r\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\r\n            return $$.expandDuration(d.data.id);\r\n        }).attr(\"d\", $$.svgArc);\r\n        $$.svg.selectAll('.' + CLASS.arc);\r\n    };\r\n\r\n    c3_chart_internal_fn.expandDuration = function (id) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n\r\n        if ($$.isDonutType(id)) {\r\n            return config.donut_expand_duration;\r\n        } else if ($$.isGaugeType(id)) {\r\n            return config.gauge_expand_duration;\r\n        } else if ($$.isPieType(id)) {\r\n            return config.pie_expand_duration;\r\n        } else {\r\n            return 50;\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.shouldExpand = function (id) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\r\n    };\r\n\r\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            shouldShow = true;\r\n        if ($$.hasType('donut')) {\r\n            shouldShow = config.donut_label_show;\r\n        } else if ($$.hasType('pie')) {\r\n            shouldShow = config.pie_label_show;\r\n        }\r\n        // when gauge, always true\r\n        return shouldShow;\r\n    };\r\n\r\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\r\n        return ratio >= threshold;\r\n    };\r\n\r\n    c3_chart_internal_fn.getArcLabelFormat = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            format = config.pie_label_format;\r\n        if ($$.hasType('gauge')) {\r\n            format = config.gauge_label_format;\r\n        } else if ($$.hasType('donut')) {\r\n            format = config.donut_label_format;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    c3_chart_internal_fn.getGaugeLabelExtents = function () {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return config.gauge_label_extents;\r\n    };\r\n\r\n    c3_chart_internal_fn.getArcTitle = function () {\r\n        var $$ = this;\r\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\r\n    };\r\n\r\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\r\n        var $$ = this,\r\n            main = $$.main,\r\n            mainPieUpdate,\r\n            mainPieEnter,\r\n            classChartArc = $$.classChartArc.bind($$),\r\n            classArcs = $$.classArcs.bind($$),\r\n            classFocus = $$.classFocus.bind($$);\r\n        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\r\n            return classChartArc(d) + classFocus(d.data);\r\n        });\r\n        mainPieEnter = mainPieUpdate.enter().append(\"g\").attr(\"class\", classChartArc);\r\n        mainPieEnter.append('g').attr('class', classArcs);\r\n        mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\r\n        // MEMO: can not keep same color..., but not bad to update color in redraw\r\n        //mainPieUpdate.exit().remove();\r\n    };\r\n\r\n    c3_chart_internal_fn.initArc = function () {\r\n        var $$ = this;\r\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\r\n        $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\r\n    };\r\n\r\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\r\n        var $$ = this,\r\n            d3 = $$.d3,\r\n            config = $$.config,\r\n            main = $$.main,\r\n            mainArc,\r\n            backgroundArc,\r\n            mainArcLabelLine,\r\n            hasGaugeType = $$.hasType('gauge');\r\n        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\r\n        mainArc.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\r\n            return $$.color(d.data);\r\n        }).style(\"cursor\", function (d) {\r\n            return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\r\n        }).each(function (d) {\r\n            if ($$.isGaugeType(d.data)) {\r\n                d.startAngle = d.endAngle = config.gauge_startingAngle;\r\n            }\r\n            this._current = d;\r\n        });\r\n        if (hasGaugeType) {\r\n            mainArcLabelLine = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arcLabelLine).data($$.arcData.bind($$));\r\n            mainArcLabelLine.enter().append('rect').attr(\"class\", function (d) {\r\n                return CLASS.arcLabelLine + ' ' + CLASS.target + ' ' + CLASS.target + '-' + d.data.id;\r\n            });\r\n            if ($$.filterTargetsToShow($$.data.targets).length === 1) {\r\n                mainArcLabelLine.style(\"display\", \"none\");\r\n            } else {\r\n                mainArcLabelLine.style(\"fill\", function (d) {\r\n                    return config.color_pattern.length > 0 ? $$.levelColor(d.data.values[0].value) : $$.color(d.data);\r\n                }).style(\"display\", config.gauge_labelLine_show ? \"\" : \"none\").each(function (d) {\r\n                    var lineLength = 0,\r\n                        lineThickness = 2,\r\n                        x = 0,\r\n                        y = 0,\r\n                        transform = \"\";\r\n                    if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {\r\n                        var updated = $$.updateAngle(d),\r\n                            innerLineLength = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length * (updated.index + 1),\r\n                            lineAngle = updated.endAngle - Math.PI / 2,\r\n                            arcInnerRadius = $$.radius - innerLineLength,\r\n                            linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);\r\n                        lineLength = $$.radiusExpanded - $$.radius + innerLineLength;\r\n                        x = Math.cos(linePositioningAngle) * arcInnerRadius;\r\n                        y = Math.sin(linePositioningAngle) * arcInnerRadius;\r\n                        transform = \"rotate(\" + lineAngle * 180 / Math.PI + \", \" + x + \", \" + y + \")\";\r\n                    }\r\n                    d3.select(this).attr({ x: x, y: y, width: lineLength, height: lineThickness, transform: transform }).style(\"stroke-dasharray\", \"0, \" + (lineLength + lineThickness) + \", 0\");\r\n                });\r\n            }\r\n        }\r\n        mainArc.attr(\"transform\", function (d) {\r\n            return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\r\n        }).on('mouseover', config.interaction_enabled ? function (d) {\r\n            var updated, arcData;\r\n            if ($$.transiting) {\r\n                // skip while transiting\r\n                return;\r\n            }\r\n            updated = $$.updateAngle(d);\r\n            if (updated) {\r\n                arcData = $$.convertToArcData(updated);\r\n                // transitions\r\n                $$.expandArc(updated.data.id);\r\n                $$.api.focus(updated.data.id);\r\n                $$.toggleFocusLegend(updated.data.id, true);\r\n                $$.config.data_onmouseover(arcData, this);\r\n            }\r\n        } : null).on('mousemove', config.interaction_enabled ? function (d) {\r\n            var updated = $$.updateAngle(d),\r\n                arcData,\r\n                selectedData;\r\n            if (updated) {\r\n                arcData = $$.convertToArcData(updated), selectedData = [arcData];\r\n                $$.showTooltip(selectedData, this);\r\n            }\r\n        } : null).on('mouseout', config.interaction_enabled ? function (d) {\r\n            var updated, arcData;\r\n            if ($$.transiting) {\r\n                // skip while transiting\r\n                return;\r\n            }\r\n            updated = $$.updateAngle(d);\r\n            if (updated) {\r\n                arcData = $$.convertToArcData(updated);\r\n                // transitions\r\n                $$.unexpandArc(updated.data.id);\r\n                $$.api.revert();\r\n                $$.revertLegend();\r\n                $$.hideTooltip();\r\n                $$.config.data_onmouseout(arcData, this);\r\n            }\r\n        } : null).on('click', config.interaction_enabled ? function (d, i) {\r\n            var updated = $$.updateAngle(d),\r\n                arcData;\r\n            if (updated) {\r\n                arcData = $$.convertToArcData(updated);\r\n                if ($$.toggleShape) {\r\n                    $$.toggleShape(this, arcData, i);\r\n                }\r\n                $$.config.data_onclick.call($$.api, arcData, this);\r\n            }\r\n        } : null).each(function () {\r\n            $$.transiting = true;\r\n        }).transition().duration(duration).attrTween(\"d\", function (d) {\r\n            var updated = $$.updateAngle(d),\r\n                interpolate;\r\n            if (!updated) {\r\n                return function () {\r\n                    return \"M 0 0\";\r\n                };\r\n            }\r\n            //                if (this._current === d) {\r\n            //                    this._current = {\r\n            //                        startAngle: Math.PI*2,\r\n            //                        endAngle: Math.PI*2,\r\n            //                    };\r\n            //                }\r\n            if (isNaN(this._current.startAngle)) {\r\n                this._current.startAngle = 0;\r\n            }\r\n            if (isNaN(this._current.endAngle)) {\r\n                this._current.endAngle = this._current.startAngle;\r\n            }\r\n            interpolate = d3.interpolate(this._current, updated);\r\n            this._current = interpolate(0);\r\n            return function (t) {\r\n                var interpolated = interpolate(t);\r\n                interpolated.data = d.data; // data.id will be updated by interporator\r\n                return $$.getArc(interpolated, true);\r\n            };\r\n        }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\r\n            return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\r\n        }) // Where gauge reading color would receive customization.\r\n        .call($$.endall, function () {\r\n            $$.transiting = false;\r\n        });\r\n        mainArc.exit().transition().duration(durationForExit).style('opacity', 0).remove();\r\n        main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\r\n            return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\r\n        }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\r\n            return $$.isGaugeType(d.data) && $$.filterTargetsToShow($$.data.targets).length === 1 ? Math.round($$.radius / 5) + 'px' : '';\r\n        }).transition().duration(duration).style(\"opacity\", function (d) {\r\n            return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\r\n        });\r\n        main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || hasGaugeType ? 1 : 0);\r\n\r\n        if (hasGaugeType) {\r\n            var index = 0;\r\n            backgroundArc = $$.arcs.select('g.' + CLASS.chartArcsBackground).selectAll('path.' + CLASS.chartArcsBackground).data($$.data.targets);\r\n            backgroundArc.enter().append(\"path\");\r\n            backgroundArc.attr(\"class\", function (d, i) {\r\n                return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;\r\n            }).attr(\"d\", function (d1) {\r\n                if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {\r\n                    return \"M 0 0\";\r\n                }\r\n\r\n                var d = {\r\n                    data: [{ value: config.gauge_max }],\r\n                    startAngle: config.gauge_startingAngle,\r\n                    endAngle: -1 * config.gauge_startingAngle * (config.gauge_fullCircle ? Math.PI : 1),\r\n                    index: index++\r\n                };\r\n                return $$.getArc(d, true, true);\r\n            });\r\n            backgroundArc.exit().remove();\r\n\r\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\r\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\r\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\r\n        }\r\n    };\r\n    c3_chart_internal_fn.initGauge = function () {\r\n        var arcs = this.arcs;\r\n        if (this.hasType('gauge')) {\r\n            arcs.append('g').attr(\"class\", CLASS.chartArcsBackground);\r\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\r\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\r\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\r\n        }\r\n    };\r\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\r\n        return this.config.gauge_label_show ? 20 : 0;\r\n    };\r\n\r\n    c3_chart_internal_fn.hasCaches = function (ids) {\r\n        for (var i = 0; i < ids.length; i++) {\r\n            if (!(ids[i] in this.cache)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    c3_chart_internal_fn.addCache = function (id, target) {\r\n        this.cache[id] = this.cloneTarget(target);\r\n    };\r\n    c3_chart_internal_fn.getCaches = function (ids) {\r\n        var targets = [],\r\n            i;\r\n        for (i = 0; i < ids.length; i++) {\r\n            if (ids[i] in this.cache) {\r\n                targets.push(this.cloneTarget(this.cache[ids[i]]));\r\n            }\r\n        }\r\n        return targets;\r\n    };\r\n\r\n    c3_chart_internal_fn.categoryName = function (i) {\r\n        var config = this.config;\r\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\r\n    };\r\n\r\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\r\n        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\r\n    };\r\n    c3_chart_internal_fn.classText = function (d) {\r\n        return this.generateClass(CLASS.text, d.index);\r\n    };\r\n    c3_chart_internal_fn.classTexts = function (d) {\r\n        return this.generateClass(CLASS.texts, d.id);\r\n    };\r\n    c3_chart_internal_fn.classShape = function (d) {\r\n        return this.generateClass(CLASS.shape, d.index);\r\n    };\r\n    c3_chart_internal_fn.classShapes = function (d) {\r\n        return this.generateClass(CLASS.shapes, d.id);\r\n    };\r\n    c3_chart_internal_fn.classLine = function (d) {\r\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\r\n    };\r\n    c3_chart_internal_fn.classLines = function (d) {\r\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\r\n    };\r\n    c3_chart_internal_fn.classCircle = function (d) {\r\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\r\n    };\r\n    c3_chart_internal_fn.classCircles = function (d) {\r\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\r\n    };\r\n    c3_chart_internal_fn.classBar = function (d) {\r\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\r\n    };\r\n    c3_chart_internal_fn.classBars = function (d) {\r\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\r\n    };\r\n    c3_chart_internal_fn.classArc = function (d) {\r\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\r\n    };\r\n    c3_chart_internal_fn.classArcs = function (d) {\r\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\r\n    };\r\n    c3_chart_internal_fn.classArea = function (d) {\r\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\r\n    };\r\n    c3_chart_internal_fn.classAreas = function (d) {\r\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\r\n    };\r\n    c3_chart_internal_fn.classRegion = function (d, i) {\r\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\r\n    };\r\n    c3_chart_internal_fn.classEvent = function (d) {\r\n        return this.generateClass(CLASS.eventRect, d.index);\r\n    };\r\n    c3_chart_internal_fn.classTarget = function (id) {\r\n        var $$ = this;\r\n        var additionalClassSuffix = $$.config.data_classes[id],\r\n            additionalClass = '';\r\n        if (additionalClassSuffix) {\r\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\r\n        }\r\n        return $$.generateClass(CLASS.target, id) + additionalClass;\r\n    };\r\n    c3_chart_internal_fn.classFocus = function (d) {\r\n        return this.classFocused(d) + this.classDefocused(d);\r\n    };\r\n    c3_chart_internal_fn.classFocused = function (d) {\r\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\r\n    };\r\n    c3_chart_internal_fn.classDefocused = function (d) {\r\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\r\n    };\r\n    c3_chart_internal_fn.classChartText = function (d) {\r\n        return CLASS.chartText + this.classTarget(d.id);\r\n    };\r\n    c3_chart_internal_fn.classChartLine = function (d) {\r\n        return CLASS.chartLine + this.classTarget(d.id);\r\n    };\r\n    c3_chart_internal_fn.classChartBar = function (d) {\r\n        return CLASS.chartBar + this.classTarget(d.id);\r\n    };\r\n    c3_chart_internal_fn.classChartArc = function (d) {\r\n        return CLASS.chartArc + this.classTarget(d.data.id);\r\n    };\r\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\r\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\r\n    };\r\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\r\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\r\n    };\r\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\r\n        var $$ = this;\r\n        ids = ids || [];\r\n        return ids.length ? ids.map(function (id) {\r\n            return $$.selectorTarget(id, prefix);\r\n        }) : null;\r\n    };\r\n    c3_chart_internal_fn.selectorLegend = function (id) {\r\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\r\n    };\r\n    c3_chart_internal_fn.selectorLegends = function (ids) {\r\n        var $$ = this;\r\n        return ids && ids.length ? ids.map(function (id) {\r\n            return $$.selectorLegend(id);\r\n        }) : null;\r\n    };\r\n\r\n    c3_chart_internal_fn.getClipPath = function (id) {\r\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\r\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\r\n    };\r\n    c3_chart_internal_fn.appendClip = function (parent, id) {\r\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\r\n    };\r\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\r\n        // axis line width + padding for left\r\n        var left = Math.max(30, this.margin.left);\r\n        return forHorizontal ? -(1 + left) : -(left - 1);\r\n    };\r\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\r\n        return forHorizontal ? -20 : -this.margin.top;\r\n    };\r\n    c3_chart_internal_fn.getXAxisClipX = function () {\r\n        var $$ = this;\r\n        return $$.getAxisClipX(!$$.config.axis_rotated);\r\n    };\r\n    c3_chart_internal_fn.getXAxisClipY = function () {\r\n        var $$ = this;\r\n        return $$.getAxisClipY(!$$.config.axis_rotated);\r\n    };\r\n    c3_chart_internal_fn.getYAxisClipX = function () {\r\n        var $$ = this;\r\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\r\n    };\r\n    c3_chart_internal_fn.getYAxisClipY = function () {\r\n        var $$ = this;\r\n        return $$.getAxisClipY($$.config.axis_rotated);\r\n    };\r\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\r\n        var $$ = this,\r\n            left = Math.max(30, $$.margin.left),\r\n            right = Math.max(30, $$.margin.right);\r\n        // width + axis line width + padding for left/right\r\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\r\n    };\r\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\r\n        // less than 20 is not enough to show the axis label 'outer' without legend\r\n        return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\r\n    };\r\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\r\n        var $$ = this;\r\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\r\n    };\r\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\r\n        var $$ = this;\r\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\r\n    };\r\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\r\n        var $$ = this;\r\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\r\n    };\r\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\r\n        var $$ = this;\r\n        return $$.getAxisClipHeight($$.config.axis_rotated);\r\n    };\r\n\r\n    c3_chart_internal_fn.generateColor = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            d3 = $$.d3,\r\n            colors = config.data_colors,\r\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\r\n            callback = config.data_color,\r\n            ids = [];\r\n\r\n        return function (d) {\r\n            var id = d.id || d.data && d.data.id || d,\r\n                color;\r\n\r\n            // if callback function is provided\r\n            if (colors[id] instanceof Function) {\r\n                color = colors[id](d);\r\n            }\r\n            // if specified, choose that color\r\n            else if (colors[id]) {\r\n                    color = colors[id];\r\n                }\r\n                // if not specified, choose from pattern\r\n                else {\r\n                        if (ids.indexOf(id) < 0) {\r\n                            ids.push(id);\r\n                        }\r\n                        color = pattern[ids.indexOf(id) % pattern.length];\r\n                        colors[id] = color;\r\n                    }\r\n            return callback instanceof Function ? callback(color, d) : color;\r\n        };\r\n    };\r\n    c3_chart_internal_fn.generateLevelColor = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            colors = config.color_pattern,\r\n            threshold = config.color_threshold,\r\n            asValue = threshold.unit === 'value',\r\n            values = threshold.values && threshold.values.length ? threshold.values : [],\r\n            max = threshold.max || 100;\r\n        return notEmpty(config.color_threshold) ? function (value) {\r\n            var i,\r\n                v,\r\n                color = colors[colors.length - 1];\r\n            for (i = 0; i < values.length; i++) {\r\n                v = asValue ? value : value * 100 / max;\r\n                if (v < values[i]) {\r\n                    color = colors[i];\r\n                    break;\r\n                }\r\n            }\r\n            return color;\r\n        } : null;\r\n    };\r\n\r\n    c3_chart_internal_fn.getDefaultConfig = function () {\r\n        var config = {\r\n            bindto: '#chart',\r\n            svg_classname: undefined,\r\n            size_width: undefined,\r\n            size_height: undefined,\r\n            padding_left: undefined,\r\n            padding_right: undefined,\r\n            padding_top: undefined,\r\n            padding_bottom: undefined,\r\n            resize_auto: true,\r\n            zoom_enabled: false,\r\n            zoom_extent: undefined,\r\n            zoom_privileged: false,\r\n            zoom_rescale: false,\r\n            zoom_onzoom: function zoom_onzoom() {},\r\n            zoom_onzoomstart: function zoom_onzoomstart() {},\r\n            zoom_onzoomend: function zoom_onzoomend() {},\r\n            zoom_x_min: undefined,\r\n            zoom_x_max: undefined,\r\n            interaction_brighten: true,\r\n            interaction_enabled: true,\r\n            onmouseover: function onmouseover() {},\r\n            onmouseout: function onmouseout() {},\r\n            onresize: function onresize() {},\r\n            onresized: function onresized() {},\r\n            oninit: function oninit() {},\r\n            onrendered: function onrendered() {},\r\n            transition_duration: 350,\r\n            data_x: undefined,\r\n            data_xs: {},\r\n            data_xFormat: '%Y-%m-%d',\r\n            data_xLocaltime: true,\r\n            data_xSort: true,\r\n            data_idConverter: function data_idConverter(id) {\r\n                return id;\r\n            },\r\n            data_names: {},\r\n            data_classes: {},\r\n            data_groups: [],\r\n            data_axes: {},\r\n            data_type: undefined,\r\n            data_types: {},\r\n            data_labels: {},\r\n            data_order: 'desc',\r\n            data_regions: {},\r\n            data_color: undefined,\r\n            data_colors: {},\r\n            data_hide: false,\r\n            data_filter: undefined,\r\n            data_selection_enabled: false,\r\n            data_selection_grouped: false,\r\n            data_selection_isselectable: function data_selection_isselectable() {\r\n                return true;\r\n            },\r\n            data_selection_multiple: true,\r\n            data_selection_draggable: false,\r\n            data_onclick: function data_onclick() {},\r\n            data_onmouseover: function data_onmouseover() {},\r\n            data_onmouseout: function data_onmouseout() {},\r\n            data_onselected: function data_onselected() {},\r\n            data_onunselected: function data_onunselected() {},\r\n            data_url: undefined,\r\n            data_headers: undefined,\r\n            data_json: undefined,\r\n            data_rows: undefined,\r\n            data_columns: undefined,\r\n            data_mimeType: undefined,\r\n            data_keys: undefined,\r\n            // configuration for no plot-able data supplied.\r\n            data_empty_label_text: \"\",\r\n            // subchart\r\n            subchart_show: false,\r\n            subchart_size_height: 60,\r\n            subchart_axis_x_show: true,\r\n            subchart_onbrush: function subchart_onbrush() {},\r\n            // color\r\n            color_pattern: [],\r\n            color_threshold: {},\r\n            // legend\r\n            legend_show: true,\r\n            legend_hide: false,\r\n            legend_position: 'bottom',\r\n            legend_inset_anchor: 'top-left',\r\n            legend_inset_x: 10,\r\n            legend_inset_y: 0,\r\n            legend_inset_step: undefined,\r\n            legend_item_onclick: undefined,\r\n            legend_item_onmouseover: undefined,\r\n            legend_item_onmouseout: undefined,\r\n            legend_equally: false,\r\n            legend_padding: 0,\r\n            legend_item_tile_width: 10,\r\n            legend_item_tile_height: 10,\r\n            // axis\r\n            axis_rotated: false,\r\n            axis_x_show: true,\r\n            axis_x_type: 'indexed',\r\n            axis_x_localtime: true,\r\n            axis_x_categories: [],\r\n            axis_x_tick_centered: false,\r\n            axis_x_tick_format: undefined,\r\n            axis_x_tick_culling: {},\r\n            axis_x_tick_culling_max: 10,\r\n            axis_x_tick_count: undefined,\r\n            axis_x_tick_fit: true,\r\n            axis_x_tick_values: null,\r\n            axis_x_tick_rotate: 0,\r\n            axis_x_tick_outer: true,\r\n            axis_x_tick_multiline: true,\r\n            axis_x_tick_multilineMax: 0,\r\n            axis_x_tick_width: null,\r\n            axis_x_max: undefined,\r\n            axis_x_min: undefined,\r\n            axis_x_padding: {},\r\n            axis_x_height: undefined,\r\n            axis_x_extent: undefined,\r\n            axis_x_label: {},\r\n            axis_x_inner: undefined,\r\n            axis_y_show: true,\r\n            axis_y_type: undefined,\r\n            axis_y_max: undefined,\r\n            axis_y_min: undefined,\r\n            axis_y_inverted: false,\r\n            axis_y_center: undefined,\r\n            axis_y_inner: undefined,\r\n            axis_y_label: {},\r\n            axis_y_tick_format: undefined,\r\n            axis_y_tick_outer: true,\r\n            axis_y_tick_values: null,\r\n            axis_y_tick_rotate: 0,\r\n            axis_y_tick_count: undefined,\r\n            axis_y_tick_time_value: undefined,\r\n            axis_y_tick_time_interval: undefined,\r\n            axis_y_padding: {},\r\n            axis_y_default: undefined,\r\n            axis_y2_show: false,\r\n            axis_y2_max: undefined,\r\n            axis_y2_min: undefined,\r\n            axis_y2_inverted: false,\r\n            axis_y2_center: undefined,\r\n            axis_y2_inner: undefined,\r\n            axis_y2_label: {},\r\n            axis_y2_tick_format: undefined,\r\n            axis_y2_tick_outer: true,\r\n            axis_y2_tick_values: null,\r\n            axis_y2_tick_count: undefined,\r\n            axis_y2_padding: {},\r\n            axis_y2_default: undefined,\r\n            // grid\r\n            grid_x_show: false,\r\n            grid_x_type: 'tick',\r\n            grid_x_lines: [],\r\n            grid_y_show: false,\r\n            // not used\r\n            // grid_y_type: 'tick',\r\n            grid_y_lines: [],\r\n            grid_y_ticks: 10,\r\n            grid_focus_show: true,\r\n            grid_lines_front: true,\r\n            // point - point of each data\r\n            point_show: true,\r\n            point_r: 2.5,\r\n            point_sensitivity: 10,\r\n            point_focus_expand_enabled: true,\r\n            point_focus_expand_r: undefined,\r\n            point_select_r: undefined,\r\n            // line\r\n            line_connectNull: false,\r\n            line_step_type: 'step',\r\n            // bar\r\n            bar_width: undefined,\r\n            bar_width_ratio: 0.6,\r\n            bar_width_max: undefined,\r\n            bar_zerobased: true,\r\n            bar_space: 0,\r\n            // area\r\n            area_zerobased: true,\r\n            area_above: false,\r\n            // pie\r\n            pie_label_show: true,\r\n            pie_label_format: undefined,\r\n            pie_label_threshold: 0.05,\r\n            pie_label_ratio: undefined,\r\n            pie_expand: {},\r\n            pie_expand_duration: 50,\r\n            // gauge\r\n            gauge_fullCircle: false,\r\n            gauge_label_show: true,\r\n            gauge_labelLine_show: true,\r\n            gauge_label_format: undefined,\r\n            gauge_min: 0,\r\n            gauge_max: 100,\r\n            gauge_startingAngle: -1 * Math.PI / 2,\r\n            gauge_label_extents: undefined,\r\n            gauge_units: undefined,\r\n            gauge_width: undefined,\r\n            gauge_arcs_minWidth: 5,\r\n            gauge_expand: {},\r\n            gauge_expand_duration: 50,\r\n            // donut\r\n            donut_label_show: true,\r\n            donut_label_format: undefined,\r\n            donut_label_threshold: 0.05,\r\n            donut_label_ratio: undefined,\r\n            donut_width: undefined,\r\n            donut_title: \"\",\r\n            donut_expand: {},\r\n            donut_expand_duration: 50,\r\n            // spline\r\n            spline_interpolation_type: 'cardinal',\r\n            // region - region to change style\r\n            regions: [],\r\n            // tooltip - show when mouseover on each data\r\n            tooltip_show: true,\r\n            tooltip_grouped: true,\r\n            tooltip_order: undefined,\r\n            tooltip_format_title: undefined,\r\n            tooltip_format_name: undefined,\r\n            tooltip_format_value: undefined,\r\n            tooltip_position: undefined,\r\n            tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\r\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\r\n            },\r\n            tooltip_init_show: false,\r\n            tooltip_init_x: 0,\r\n            tooltip_init_position: { top: '0px', left: '50px' },\r\n            tooltip_onshow: function tooltip_onshow() {},\r\n            tooltip_onhide: function tooltip_onhide() {},\r\n            // title\r\n            title_text: undefined,\r\n            title_padding: {\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                left: 0\r\n            },\r\n            title_position: 'top-center'\r\n        };\r\n\r\n        Object.keys(this.additionalConfig).forEach(function (key) {\r\n            config[key] = this.additionalConfig[key];\r\n        }, this);\r\n\r\n        return config;\r\n    };\r\n    c3_chart_internal_fn.additionalConfig = {};\r\n\r\n    c3_chart_internal_fn.loadConfig = function (config) {\r\n        var this_config = this.config,\r\n            target,\r\n            keys,\r\n            read;\r\n        function find() {\r\n            var key = keys.shift();\r\n            //        console.log(\"key =>\", key, \", target =>\", target);\r\n            if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\r\n                target = target[key];\r\n                return find();\r\n            } else if (!key) {\r\n                return target;\r\n            } else {\r\n                return undefined;\r\n            }\r\n        }\r\n        Object.keys(this_config).forEach(function (key) {\r\n            target = config;\r\n            keys = key.split('_');\r\n            read = find();\r\n            //        console.log(\"CONFIG : \", key, read);\r\n            if (isDefined(read)) {\r\n                this_config[key] = read;\r\n            }\r\n        });\r\n    };\r\n\r\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\r\n        var $$ = this,\r\n            type = mimeType ? mimeType : 'csv';\r\n        var req = $$.d3.xhr(url);\r\n        if (headers) {\r\n            Object.keys(headers).forEach(function (header) {\r\n                req.header(header, headers[header]);\r\n            });\r\n        }\r\n        req.get(function (error, data) {\r\n            var d;\r\n            var dataResponse = data.response || data.responseText; // Fixes IE9 XHR issue; see #1345\r\n            if (!data) {\r\n                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\r\n            }\r\n            if (type === 'json') {\r\n                d = $$.convertJsonToData(JSON.parse(dataResponse), keys);\r\n            } else if (type === 'tsv') {\r\n                d = $$.convertTsvToData(dataResponse);\r\n            } else {\r\n                d = $$.convertCsvToData(dataResponse);\r\n            }\r\n            done.call($$, d);\r\n        });\r\n    };\r\n    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\r\n        var rows = parser.parseRows(xsv),\r\n            d;\r\n        if (rows.length === 1) {\r\n            d = [{}];\r\n            rows[0].forEach(function (id) {\r\n                d[0][id] = null;\r\n            });\r\n        } else {\r\n            d = parser.parse(xsv);\r\n        }\r\n        return d;\r\n    };\r\n    c3_chart_internal_fn.convertCsvToData = function (csv) {\r\n        return this.convertXsvToData(csv, this.d3.csv);\r\n    };\r\n    c3_chart_internal_fn.convertTsvToData = function (tsv) {\r\n        return this.convertXsvToData(tsv, this.d3.tsv);\r\n    };\r\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\r\n        var $$ = this,\r\n            new_rows = [],\r\n            targetKeys,\r\n            data;\r\n        if (keys) {\r\n            // when keys specified, json would be an array that includes objects\r\n            if (keys.x) {\r\n                targetKeys = keys.value.concat(keys.x);\r\n                $$.config.data_x = keys.x;\r\n            } else {\r\n                targetKeys = keys.value;\r\n            }\r\n            new_rows.push(targetKeys);\r\n            json.forEach(function (o) {\r\n                var new_row = [];\r\n                targetKeys.forEach(function (key) {\r\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\r\n                    var v = $$.findValueInJson(o, key);\r\n                    if (isUndefined(v)) {\r\n                        v = null;\r\n                    }\r\n                    new_row.push(v);\r\n                });\r\n                new_rows.push(new_row);\r\n            });\r\n            data = $$.convertRowsToData(new_rows);\r\n        } else {\r\n            Object.keys(json).forEach(function (key) {\r\n                new_rows.push([key].concat(json[key]));\r\n            });\r\n            data = $$.convertColumnsToData(new_rows);\r\n        }\r\n        return data;\r\n    };\r\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\r\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\r\n        path = path.replace(/^\\./, ''); // strip a leading dot\r\n        var pathArray = path.split('.');\r\n        for (var i = 0; i < pathArray.length; ++i) {\r\n            var k = pathArray[i];\r\n            if (k in object) {\r\n                object = object[k];\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        return object;\r\n    };\r\n\r\n    /**\r\n     * Converts the rows to normalized data.\r\n     * @param {any[][]} rows The row data\r\n     * @return {Object[]}\r\n     */\r\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\r\n        var newRows = [];\r\n        var keys = rows[0];\r\n\r\n        for (var i = 1; i < rows.length; i++) {\r\n            var newRow = {};\r\n            for (var j = 0; j < rows[i].length; j++) {\r\n                if (isUndefined(rows[i][j])) {\r\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\r\n                }\r\n                newRow[keys[j]] = rows[i][j];\r\n            }\r\n            newRows.push(newRow);\r\n        }\r\n        return newRows;\r\n    };\r\n\r\n    /**\r\n     * Converts the columns to normalized data.\r\n     * @param {any[][]} columns The column data\r\n     * @return {Object[]}\r\n     */\r\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\r\n        var newRows = [];\r\n\r\n        for (var i = 0; i < columns.length; i++) {\r\n            var key = columns[i][0];\r\n            for (var j = 1; j < columns[i].length; j++) {\r\n                if (isUndefined(newRows[j - 1])) {\r\n                    newRows[j - 1] = {};\r\n                }\r\n                if (isUndefined(columns[i][j])) {\r\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\r\n                }\r\n                newRows[j - 1][key] = columns[i][j];\r\n            }\r\n        }\r\n\r\n        return newRows;\r\n    };\r\n\r\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\r\n            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\r\n            targets;\r\n\r\n        // save x for update data by load when custom x and c3.x API\r\n        ids.forEach(function (id) {\r\n            var xKey = $$.getXKey(id);\r\n\r\n            if ($$.isCustomX() || $$.isTimeSeries()) {\r\n                // if included in input data\r\n                if (xs.indexOf(xKey) >= 0) {\r\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\r\n                        return d[xKey];\r\n                    }).filter(isValue).map(function (rawX, i) {\r\n                        return $$.generateTargetX(rawX, id, i);\r\n                    }));\r\n                }\r\n                // if not included in input data, find from preloaded data of other id's x\r\n                else if (config.data_x) {\r\n                        $$.data.xs[id] = $$.getOtherTargetXs();\r\n                    }\r\n                    // if not included in input data, find from preloaded data\r\n                    else if (notEmpty(config.data_xs)) {\r\n                            $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\r\n                        }\r\n                // MEMO: if no x included, use same x of current will be used\r\n            } else {\r\n                $$.data.xs[id] = data.map(function (d, i) {\r\n                    return i;\r\n                });\r\n            }\r\n        });\r\n\r\n        // check x is defined\r\n        ids.forEach(function (id) {\r\n            if (!$$.data.xs[id]) {\r\n                throw new Error('x is not defined for id = \"' + id + '\".');\r\n            }\r\n        });\r\n\r\n        // convert to target\r\n        targets = ids.map(function (id, index) {\r\n            var convertedId = config.data_idConverter(id);\r\n            return {\r\n                id: convertedId,\r\n                id_org: id,\r\n                values: data.map(function (d, i) {\r\n                    var xKey = $$.getXKey(id),\r\n                        rawX = d[xKey],\r\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\r\n                        x;\r\n                    // use x as categories if custom x and categorized\r\n                    if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\r\n                        if (index === 0 && i === 0) {\r\n                            config.axis_x_categories = [];\r\n                        }\r\n                        x = config.axis_x_categories.indexOf(rawX);\r\n                        if (x === -1) {\r\n                            x = config.axis_x_categories.length;\r\n                            config.axis_x_categories.push(rawX);\r\n                        }\r\n                    } else {\r\n                        x = $$.generateTargetX(rawX, id, i);\r\n                    }\r\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\r\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\r\n                        x = undefined;\r\n                    }\r\n                    return { x: x, value: value, id: convertedId };\r\n                }).filter(function (v) {\r\n                    return isDefined(v.x);\r\n                })\r\n            };\r\n        });\r\n\r\n        // finish targets\r\n        targets.forEach(function (t) {\r\n            var i;\r\n            // sort values by its x\r\n            if (config.data_xSort) {\r\n                t.values = t.values.sort(function (v1, v2) {\r\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\r\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\r\n                    return x1 - x2;\r\n                });\r\n            }\r\n            // indexing each value\r\n            i = 0;\r\n            t.values.forEach(function (v) {\r\n                v.index = i++;\r\n            });\r\n            // this needs to be sorted because its index and value.index is identical\r\n            $$.data.xs[t.id].sort(function (v1, v2) {\r\n                return v1 - v2;\r\n            });\r\n        });\r\n\r\n        // cache information about values\r\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\r\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\r\n\r\n        // set target types\r\n        if (config.data_type) {\r\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) {\r\n                return !(id in config.data_types);\r\n            }), config.data_type);\r\n        }\r\n\r\n        // cache as original id keyed\r\n        targets.forEach(function (d) {\r\n            $$.addCache(d.id_org, d);\r\n        });\r\n\r\n        return targets;\r\n    };\r\n\r\n    c3_chart_internal_fn.isX = function (key) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\r\n    };\r\n    c3_chart_internal_fn.isNotX = function (key) {\r\n        return !this.isX(key);\r\n    };\r\n    c3_chart_internal_fn.getXKey = function (id) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\r\n    };\r\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\r\n        var $$ = this,\r\n            xValues,\r\n            ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\r\n        ids.forEach(function (id) {\r\n            if ($$.getXKey(id) === key) {\r\n                xValues = $$.data.xs[id];\r\n            }\r\n        });\r\n        return xValues;\r\n    };\r\n    c3_chart_internal_fn.getIndexByX = function (x) {\r\n        var $$ = this,\r\n            data = $$.filterByX($$.data.targets, x);\r\n        return data.length ? data[0].index : null;\r\n    };\r\n    c3_chart_internal_fn.getXValue = function (id, i) {\r\n        var $$ = this;\r\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\r\n    };\r\n    c3_chart_internal_fn.getOtherTargetXs = function () {\r\n        var $$ = this,\r\n            idsForX = Object.keys($$.data.xs);\r\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\r\n    };\r\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\r\n        var xs = this.getOtherTargetXs();\r\n        return xs && index < xs.length ? xs[index] : null;\r\n    };\r\n    c3_chart_internal_fn.addXs = function (xs) {\r\n        var $$ = this;\r\n        Object.keys(xs).forEach(function (id) {\r\n            $$.config.data_xs[id] = xs[id];\r\n        });\r\n    };\r\n    c3_chart_internal_fn.hasMultipleX = function (xs) {\r\n        return this.d3.set(Object.keys(xs).map(function (id) {\r\n            return xs[id];\r\n        })).size() > 1;\r\n    };\r\n    c3_chart_internal_fn.isMultipleX = function () {\r\n        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\r\n    };\r\n    c3_chart_internal_fn.addName = function (data) {\r\n        var $$ = this,\r\n            name;\r\n        if (data) {\r\n            name = $$.config.data_names[data.id];\r\n            data.name = name !== undefined ? name : data.id;\r\n        }\r\n        return data;\r\n    };\r\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\r\n        var valueOnIndex = values.filter(function (v) {\r\n            return v.index === index;\r\n        });\r\n        return valueOnIndex.length ? valueOnIndex[0] : null;\r\n    };\r\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\r\n        var $$ = this;\r\n        targets.forEach(function (t) {\r\n            t.values.forEach(function (v, i) {\r\n                v.x = $$.generateTargetX(x[i], t.id, i);\r\n            });\r\n            $$.data.xs[t.id] = x;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\r\n        var $$ = this;\r\n        targets.forEach(function (t) {\r\n            if (xs[t.id]) {\r\n                $$.updateTargetX([t], xs[t.id]);\r\n            }\r\n        });\r\n    };\r\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\r\n        var $$ = this,\r\n            x;\r\n        if ($$.isTimeSeries()) {\r\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\r\n        } else if ($$.isCustomX() && !$$.isCategorized()) {\r\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\r\n        } else {\r\n            x = index;\r\n        }\r\n        return x;\r\n    };\r\n    c3_chart_internal_fn.cloneTarget = function (target) {\r\n        return {\r\n            id: target.id,\r\n            id_org: target.id_org,\r\n            values: target.values.map(function (d) {\r\n                return { x: d.x, value: d.value, id: d.id };\r\n            })\r\n        };\r\n    };\r\n    c3_chart_internal_fn.updateXs = function () {\r\n        var $$ = this;\r\n        if ($$.data.targets.length) {\r\n            $$.xs = [];\r\n            $$.data.targets[0].values.forEach(function (v) {\r\n                $$.xs[v.index] = v.x;\r\n            });\r\n        }\r\n    };\r\n    c3_chart_internal_fn.getPrevX = function (i) {\r\n        var x = this.xs[i - 1];\r\n        return typeof x !== 'undefined' ? x : null;\r\n    };\r\n    c3_chart_internal_fn.getNextX = function (i) {\r\n        var x = this.xs[i + 1];\r\n        return typeof x !== 'undefined' ? x : null;\r\n    };\r\n    c3_chart_internal_fn.getMaxDataCount = function () {\r\n        var $$ = this;\r\n        return $$.d3.max($$.data.targets, function (t) {\r\n            return t.values.length;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\r\n        var length = targets.length,\r\n            max = 0,\r\n            maxTarget;\r\n        if (length > 1) {\r\n            targets.forEach(function (t) {\r\n                if (t.values.length > max) {\r\n                    maxTarget = t;\r\n                    max = t.values.length;\r\n                }\r\n            });\r\n        } else {\r\n            maxTarget = length ? targets[0] : null;\r\n        }\r\n        return maxTarget;\r\n    };\r\n    c3_chart_internal_fn.getEdgeX = function (targets) {\r\n        var $$ = this;\r\n        return !targets.length ? [0, 0] : [$$.d3.min(targets, function (t) {\r\n            return t.values[0].x;\r\n        }), $$.d3.max(targets, function (t) {\r\n            return t.values[t.values.length - 1].x;\r\n        })];\r\n    };\r\n    c3_chart_internal_fn.mapToIds = function (targets) {\r\n        return targets.map(function (d) {\r\n            return d.id;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\r\n        var $$ = this;\r\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\r\n    };\r\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\r\n        var ids = this.mapToIds(targets),\r\n            i;\r\n        for (i = 0; i < ids.length; i++) {\r\n            if (ids[i] === id) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\r\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\r\n    };\r\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\r\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\r\n    };\r\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\r\n        var $$ = this;\r\n        return targets.filter(function (t) {\r\n            return $$.isTargetToShow(t.id);\r\n        });\r\n    };\r\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\r\n        var $$ = this;\r\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\r\n            return t.values.map(function (v) {\r\n                return +v.x;\r\n            });\r\n        }))).values();\r\n        xs = $$.isTimeSeries() ? xs.map(function (x) {\r\n            return new Date(+x);\r\n        }) : xs.map(function (x) {\r\n            return +x;\r\n        });\r\n        return xs.sort(function (a, b) {\r\n            return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\r\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\r\n        for (var i = 0; i < targetIds.length; i++) {\r\n            if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\r\n                this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\r\n            }\r\n        }\r\n    };\r\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\r\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\r\n            return targetIds.indexOf(id) < 0;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\r\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\r\n        for (var i = 0; i < targetIds.length; i++) {\r\n            if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\r\n                this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\r\n            }\r\n        }\r\n    };\r\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\r\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\r\n            return targetIds.indexOf(id) < 0;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\r\n        var ys = {};\r\n        targets.forEach(function (t) {\r\n            ys[t.id] = [];\r\n            t.values.forEach(function (v) {\r\n                ys[t.id].push(v.value);\r\n            });\r\n        });\r\n        return ys;\r\n    };\r\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\r\n        var ids = Object.keys(targets),\r\n            i,\r\n            j,\r\n            values;\r\n        for (i = 0; i < ids.length; i++) {\r\n            values = targets[ids[i]].values;\r\n            for (j = 0; j < values.length; j++) {\r\n                if (checker(values[j].value)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\r\n        return this.checkValueInTargets(targets, function (v) {\r\n            return v < 0;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\r\n        return this.checkValueInTargets(targets, function (v) {\r\n            return v > 0;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.isOrderDesc = function () {\r\n        var config = this.config;\r\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\r\n    };\r\n    c3_chart_internal_fn.isOrderAsc = function () {\r\n        var config = this.config;\r\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\r\n    };\r\n    c3_chart_internal_fn.getOrderFunction = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            orderAsc = $$.isOrderAsc(),\r\n            orderDesc = $$.isOrderDesc();\r\n        if (orderAsc || orderDesc) {\r\n            return function (t1, t2) {\r\n                var reducer = function reducer(p, c) {\r\n                    return p + Math.abs(c.value);\r\n                };\r\n                var t1Sum = t1.values.reduce(reducer, 0),\r\n                    t2Sum = t2.values.reduce(reducer, 0);\r\n                return orderDesc ? t2Sum - t1Sum : t1Sum - t2Sum;\r\n            };\r\n        } else if (isFunction(config.data_order)) {\r\n            return config.data_order;\r\n        } else if (isArray(config.data_order)) {\r\n            var order = config.data_order;\r\n            return function (t1, t2) {\r\n                return order.indexOf(t1.id) - order.indexOf(t2.id);\r\n            };\r\n        }\r\n    };\r\n    c3_chart_internal_fn.orderTargets = function (targets) {\r\n        var fct = this.getOrderFunction();\r\n        if (fct) {\r\n            targets.sort(fct);\r\n            if (this.isOrderAsc() || this.isOrderDesc()) {\r\n                targets.reverse();\r\n            }\r\n        }\r\n        return targets;\r\n    };\r\n    c3_chart_internal_fn.filterByX = function (targets, x) {\r\n        return this.d3.merge(targets.map(function (t) {\r\n            return t.values;\r\n        })).filter(function (v) {\r\n            return v.x - x === 0;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\r\n        return data.filter(function (d) {\r\n            return isValue(d.value);\r\n        });\r\n    };\r\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\r\n        return targets.map(function (t) {\r\n            return {\r\n                id: t.id,\r\n                id_org: t.id_org,\r\n                values: t.values.filter(function (v) {\r\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\r\n                })\r\n            };\r\n        });\r\n    };\r\n    c3_chart_internal_fn.hasDataLabel = function () {\r\n        var config = this.config;\r\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\r\n            return true;\r\n        } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\r\n        var $$ = this,\r\n            lengths = [0, 0],\r\n            paddingCoef = 1.3;\r\n        $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\r\n            return $$.dataLabelFormat(d.id)(d);\r\n        }).each(function (d, i) {\r\n            lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\r\n        }).remove();\r\n        return lengths;\r\n    };\r\n    c3_chart_internal_fn.isNoneArc = function (d) {\r\n        return this.hasTarget(this.data.targets, d.id);\r\n    }, c3_chart_internal_fn.isArc = function (d) {\r\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\r\n    };\r\n    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\r\n        var i,\r\n            targetX = values[index].x,\r\n            sames = [];\r\n        for (i = index - 1; i >= 0; i--) {\r\n            if (targetX !== values[i].x) {\r\n                break;\r\n            }\r\n            sames.push(values[i]);\r\n        }\r\n        for (i = index; i < values.length; i++) {\r\n            if (targetX !== values[i].x) {\r\n                break;\r\n            }\r\n            sames.push(values[i]);\r\n        }\r\n        return sames;\r\n    };\r\n\r\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\r\n        var $$ = this,\r\n            candidates;\r\n\r\n        // map to array of closest points of each target\r\n        candidates = targets.map(function (target) {\r\n            return $$.findClosest(target.values, pos);\r\n        });\r\n\r\n        // decide closest point and return\r\n        return $$.findClosest(candidates, pos);\r\n    };\r\n    c3_chart_internal_fn.findClosest = function (values, pos) {\r\n        var $$ = this,\r\n            minDist = $$.config.point_sensitivity,\r\n            closest;\r\n\r\n        // find mouseovering bar\r\n        values.filter(function (v) {\r\n            return v && $$.isBarType(v.id);\r\n        }).forEach(function (v) {\r\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\r\n            if (!closest && $$.isWithinBar(shape)) {\r\n                closest = v;\r\n            }\r\n        });\r\n\r\n        // find closest point from non-bar\r\n        values.filter(function (v) {\r\n            return v && !$$.isBarType(v.id);\r\n        }).forEach(function (v) {\r\n            var d = $$.dist(v, pos);\r\n            if (d < minDist) {\r\n                minDist = d;\r\n                closest = v;\r\n            }\r\n        });\r\n\r\n        return closest;\r\n    };\r\n    c3_chart_internal_fn.dist = function (data, pos) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            xIndex = config.axis_rotated ? 1 : 0,\r\n            yIndex = config.axis_rotated ? 0 : 1,\r\n            y = $$.circleY(data, data.index),\r\n            x = $$.x(data.x);\r\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\r\n    };\r\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\r\n        var converted = [].concat(values),\r\n            i;\r\n\r\n        if (!this.isCategorized()) {\r\n            return values;\r\n        }\r\n\r\n        for (i = values.length + 1; 0 < i; i--) {\r\n            converted[i] = converted[i - 1];\r\n        }\r\n\r\n        converted[0] = {\r\n            x: converted[0].x - 1,\r\n            value: converted[0].value,\r\n            id: converted[0].id\r\n        };\r\n        converted[values.length + 1] = {\r\n            x: converted[values.length].x + 1,\r\n            value: converted[values.length].value,\r\n            id: converted[values.length].id\r\n        };\r\n\r\n        return converted;\r\n    };\r\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            current = config['data_' + name];\r\n        if (typeof attrs === 'undefined') {\r\n            return current;\r\n        }\r\n        Object.keys(attrs).forEach(function (id) {\r\n            current[id] = attrs[id];\r\n        });\r\n        $$.redraw({ withLegend: true });\r\n        return current;\r\n    };\r\n\r\n    c3_chart_internal_fn.load = function (targets, args) {\r\n        var $$ = this;\r\n        if (targets) {\r\n            // filter loading targets if needed\r\n            if (args.filter) {\r\n                targets = targets.filter(args.filter);\r\n            }\r\n            // set type if args.types || args.type specified\r\n            if (args.type || args.types) {\r\n                targets.forEach(function (t) {\r\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\r\n                    $$.setTargetType(t.id, type);\r\n                });\r\n            }\r\n            // Update/Add data\r\n            $$.data.targets.forEach(function (d) {\r\n                for (var i = 0; i < targets.length; i++) {\r\n                    if (d.id === targets[i].id) {\r\n                        d.values = targets[i].values;\r\n                        targets.splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            });\r\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\r\n        }\r\n\r\n        // Set targets\r\n        $$.updateTargets($$.data.targets);\r\n\r\n        // Redraw with new targets\r\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\r\n\r\n        if (args.done) {\r\n            args.done();\r\n        }\r\n    };\r\n    c3_chart_internal_fn.loadFromArgs = function (args) {\r\n        var $$ = this;\r\n        if (args.data) {\r\n            $$.load($$.convertDataToTargets(args.data), args);\r\n        } else if (args.url) {\r\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\r\n                $$.load($$.convertDataToTargets(data), args);\r\n            });\r\n        } else if (args.json) {\r\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\r\n        } else if (args.rows) {\r\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\r\n        } else if (args.columns) {\r\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\r\n        } else {\r\n            $$.load(null, args);\r\n        }\r\n    };\r\n    c3_chart_internal_fn.unload = function (targetIds, done) {\r\n        var $$ = this;\r\n        if (!done) {\r\n            done = function done() {};\r\n        }\r\n        // filter existing target\r\n        targetIds = targetIds.filter(function (id) {\r\n            return $$.hasTarget($$.data.targets, id);\r\n        });\r\n        // If no target, call done and return\r\n        if (!targetIds || targetIds.length === 0) {\r\n            done();\r\n            return;\r\n        }\r\n        $$.svg.selectAll(targetIds.map(function (id) {\r\n            return $$.selectorTarget(id);\r\n        })).transition().style('opacity', 0).remove().call($$.endall, done);\r\n        targetIds.forEach(function (id) {\r\n            // Reset fadein for future load\r\n            $$.withoutFadeIn[id] = false;\r\n            // Remove target's elements\r\n            if ($$.legend) {\r\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\r\n            }\r\n            // Remove target\r\n            $$.data.targets = $$.data.targets.filter(function (t) {\r\n                return t.id !== id;\r\n            });\r\n        });\r\n    };\r\n\r\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            ids = $$.mapToIds(targets),\r\n            ys = $$.getValuesAsIdKeyed(targets),\r\n            j,\r\n            k,\r\n            baseId,\r\n            idsInGroup,\r\n            id,\r\n            hasNegativeValue;\r\n        if (config.data_groups.length > 0) {\r\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\r\n            for (j = 0; j < config.data_groups.length; j++) {\r\n                // Determine baseId\r\n                idsInGroup = config.data_groups[j].filter(function (id) {\r\n                    return ids.indexOf(id) >= 0;\r\n                });\r\n                if (idsInGroup.length === 0) {\r\n                    continue;\r\n                }\r\n                baseId = idsInGroup[0];\r\n                // Consider negative values\r\n                if (hasNegativeValue && ys[baseId]) {\r\n                    ys[baseId].forEach(function (v, i) {\r\n                        ys[baseId][i] = v < 0 ? v : 0;\r\n                    });\r\n                }\r\n                // Compute min\r\n                for (k = 1; k < idsInGroup.length; k++) {\r\n                    id = idsInGroup[k];\r\n                    if (!ys[id]) {\r\n                        continue;\r\n                    }\r\n                    ys[id].forEach(function (v, i) {\r\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\r\n                            ys[baseId][i] += +v;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return $$.d3.min(Object.keys(ys).map(function (key) {\r\n            return $$.d3.min(ys[key]);\r\n        }));\r\n    };\r\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            ids = $$.mapToIds(targets),\r\n            ys = $$.getValuesAsIdKeyed(targets),\r\n            j,\r\n            k,\r\n            baseId,\r\n            idsInGroup,\r\n            id,\r\n            hasPositiveValue;\r\n        if (config.data_groups.length > 0) {\r\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\r\n            for (j = 0; j < config.data_groups.length; j++) {\r\n                // Determine baseId\r\n                idsInGroup = config.data_groups[j].filter(function (id) {\r\n                    return ids.indexOf(id) >= 0;\r\n                });\r\n                if (idsInGroup.length === 0) {\r\n                    continue;\r\n                }\r\n                baseId = idsInGroup[0];\r\n                // Consider positive values\r\n                if (hasPositiveValue && ys[baseId]) {\r\n                    ys[baseId].forEach(function (v, i) {\r\n                        ys[baseId][i] = v > 0 ? v : 0;\r\n                    });\r\n                }\r\n                // Compute max\r\n                for (k = 1; k < idsInGroup.length; k++) {\r\n                    id = idsInGroup[k];\r\n                    if (!ys[id]) {\r\n                        continue;\r\n                    }\r\n                    ys[id].forEach(function (v, i) {\r\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\r\n                            ys[baseId][i] += +v;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return $$.d3.max(Object.keys(ys).map(function (key) {\r\n            return $$.d3.max(ys[key]);\r\n        }));\r\n    };\r\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            targetsByAxisId = targets.filter(function (t) {\r\n            return $$.axis.getId(t.id) === axisId;\r\n        }),\r\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\r\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\r\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\r\n            yDomainMin = $$.getYDomainMin(yTargets),\r\n            yDomainMax = $$.getYDomainMax(yTargets),\r\n            domain,\r\n            domainLength,\r\n            padding,\r\n            padding_top,\r\n            padding_bottom,\r\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\r\n            yDomainAbs,\r\n            lengths,\r\n            diff,\r\n            ratio,\r\n            isAllPositive,\r\n            isAllNegative,\r\n            isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\r\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\r\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\r\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\r\n\r\n        // MEMO: avoid inverting domain unexpectedly\r\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\r\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\r\n\r\n        if (yTargets.length === 0) {\r\n            // use current domain if target of axisId is none\r\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\r\n        }\r\n        if (isNaN(yDomainMin)) {\r\n            // set minimum to zero when not number\r\n            yDomainMin = 0;\r\n        }\r\n        if (isNaN(yDomainMax)) {\r\n            // set maximum to have same value as yDomainMin\r\n            yDomainMax = yDomainMin;\r\n        }\r\n        if (yDomainMin === yDomainMax) {\r\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\r\n        }\r\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\r\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\r\n\r\n        // Cancel zerobased if axis_*_min / axis_*_max specified\r\n        if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\r\n            isZeroBased = false;\r\n        }\r\n\r\n        // Bar/Area chart should be 0-based if all positive|negative\r\n        if (isZeroBased) {\r\n            if (isAllPositive) {\r\n                yDomainMin = 0;\r\n            }\r\n            if (isAllNegative) {\r\n                yDomainMax = 0;\r\n            }\r\n        }\r\n\r\n        domainLength = Math.abs(yDomainMax - yDomainMin);\r\n        padding = padding_top = padding_bottom = domainLength * 0.1;\r\n\r\n        if (typeof center !== 'undefined') {\r\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\r\n            yDomainMax = center + yDomainAbs;\r\n            yDomainMin = center - yDomainAbs;\r\n        }\r\n        // add padding for data label\r\n        if (showHorizontalDataLabel) {\r\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\r\n            diff = diffDomain($$.y.range());\r\n            ratio = [lengths[0] / diff, lengths[1] / diff];\r\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\r\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\r\n        } else if (showVerticalDataLabel) {\r\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\r\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\r\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\r\n        }\r\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\r\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\r\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\r\n        }\r\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\r\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\r\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\r\n        }\r\n        // Bar/Area chart should be 0-based if all positive|negative\r\n        if (isZeroBased) {\r\n            if (isAllPositive) {\r\n                padding_bottom = yDomainMin;\r\n            }\r\n            if (isAllNegative) {\r\n                padding_top = -yDomainMax;\r\n            }\r\n        }\r\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\r\n        return isInverted ? domain.reverse() : domain;\r\n    };\r\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\r\n            return $$.d3.min(t.values, function (v) {\r\n                return v.x;\r\n            });\r\n        });\r\n    };\r\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\r\n            return $$.d3.max(t.values, function (v) {\r\n                return v.x;\r\n            });\r\n        });\r\n    };\r\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            diff = domain[1] - domain[0],\r\n            maxDataCount,\r\n            padding,\r\n            paddingLeft,\r\n            paddingRight;\r\n        if ($$.isCategorized()) {\r\n            padding = 0;\r\n        } else if ($$.hasType('bar')) {\r\n            maxDataCount = $$.getMaxDataCount();\r\n            padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\r\n        } else {\r\n            padding = diff * 0.01;\r\n        }\r\n        if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\r\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\r\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\r\n        } else if (typeof config.axis_x_padding === 'number') {\r\n            paddingLeft = paddingRight = config.axis_x_padding;\r\n        } else {\r\n            paddingLeft = paddingRight = padding;\r\n        }\r\n        return { left: paddingLeft, right: paddingRight };\r\n    };\r\n    c3_chart_internal_fn.getXDomain = function (targets) {\r\n        var $$ = this,\r\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\r\n            firstX = xDomain[0],\r\n            lastX = xDomain[1],\r\n            padding = $$.getXDomainPadding(xDomain),\r\n            min = 0,\r\n            max = 0;\r\n        // show center of x domain if min and max are the same\r\n        if (firstX - lastX === 0 && !$$.isCategorized()) {\r\n            if ($$.isTimeSeries()) {\r\n                firstX = new Date(firstX.getTime() * 0.5);\r\n                lastX = new Date(lastX.getTime() * 1.5);\r\n            } else {\r\n                firstX = firstX === 0 ? 1 : firstX * 0.5;\r\n                lastX = lastX === 0 ? -1 : lastX * 1.5;\r\n            }\r\n        }\r\n        if (firstX || firstX === 0) {\r\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\r\n        }\r\n        if (lastX || lastX === 0) {\r\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\r\n        }\r\n        return [min, max];\r\n    };\r\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n\r\n        if (withUpdateOrgXDomain) {\r\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\r\n            $$.orgXDomain = $$.x.domain();\r\n            if (config.zoom_enabled) {\r\n                $$.zoom.scale($$.x).updateScaleExtent();\r\n            }\r\n            $$.subX.domain($$.x.domain());\r\n            if ($$.brush) {\r\n                $$.brush.scale($$.subX);\r\n            }\r\n        }\r\n        if (withUpdateXDomain) {\r\n            $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.extent());\r\n            if (config.zoom_enabled) {\r\n                $$.zoom.scale($$.x).updateScaleExtent();\r\n            }\r\n        }\r\n\r\n        // Trim domain when too big by zoom mousemove event\r\n        if (withTrim) {\r\n            $$.x.domain($$.trimXDomain($$.x.orgDomain()));\r\n        }\r\n\r\n        return $$.x.domain();\r\n    };\r\n    c3_chart_internal_fn.trimXDomain = function (domain) {\r\n        var zoomDomain = this.getZoomDomain(),\r\n            min = zoomDomain[0],\r\n            max = zoomDomain[1];\r\n        if (domain[0] <= min) {\r\n            domain[1] = +domain[1] + (min - domain[0]);\r\n            domain[0] = min;\r\n        }\r\n        if (max <= domain[1]) {\r\n            domain[0] = +domain[0] - (domain[1] - max);\r\n            domain[1] = max;\r\n        }\r\n        return domain;\r\n    };\r\n\r\n    c3_chart_internal_fn.drag = function (mouse) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            main = $$.main,\r\n            d3 = $$.d3;\r\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\r\n\r\n        if ($$.hasArcType()) {\r\n            return;\r\n        }\r\n        if (!config.data_selection_enabled) {\r\n            return;\r\n        } // do nothing if not selectable\r\n        if (config.zoom_enabled && !$$.zoom.altDomain) {\r\n            return;\r\n        } // skip if zoomable because of conflict drag dehavior\r\n        if (!config.data_selection_multiple) {\r\n            return;\r\n        } // skip when single selection because drag is used for multiple selection\r\n\r\n        sx = $$.dragStart[0];\r\n        sy = $$.dragStart[1];\r\n        mx = mouse[0];\r\n        my = mouse[1];\r\n        minX = Math.min(sx, mx);\r\n        maxX = Math.max(sx, mx);\r\n        minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\r\n        maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\r\n\r\n        main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY);\r\n        // TODO: binary search when multiple xs\r\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\r\n            return config.data_selection_isselectable(d);\r\n        }).each(function (d, i) {\r\n            var shape = d3.select(this),\r\n                isSelected = shape.classed(CLASS.SELECTED),\r\n                isIncluded = shape.classed(CLASS.INCLUDED),\r\n                _x,\r\n                _y,\r\n                _w,\r\n                _h,\r\n                toggle,\r\n                isWithin = false,\r\n                box;\r\n            if (shape.classed(CLASS.circle)) {\r\n                _x = shape.attr(\"cx\") * 1;\r\n                _y = shape.attr(\"cy\") * 1;\r\n                toggle = $$.togglePoint;\r\n                isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\r\n            } else if (shape.classed(CLASS.bar)) {\r\n                box = getPathBox(this);\r\n                _x = box.x;\r\n                _y = box.y;\r\n                _w = box.width;\r\n                _h = box.height;\r\n                toggle = $$.togglePath;\r\n                isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\r\n            } else {\r\n                // line/area selection not supported yet\r\n                return;\r\n            }\r\n            if (isWithin ^ isIncluded) {\r\n                shape.classed(CLASS.INCLUDED, !isIncluded);\r\n                // TODO: included/unincluded callback here\r\n                shape.classed(CLASS.SELECTED, !isSelected);\r\n                toggle.call($$, !isSelected, shape, d, i);\r\n            }\r\n        });\r\n    };\r\n\r\n    c3_chart_internal_fn.dragstart = function (mouse) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        if ($$.hasArcType()) {\r\n            return;\r\n        }\r\n        if (!config.data_selection_enabled) {\r\n            return;\r\n        } // do nothing if not selectable\r\n        $$.dragStart = mouse;\r\n        $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\r\n        $$.dragging = true;\r\n    };\r\n\r\n    c3_chart_internal_fn.dragend = function () {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        if ($$.hasArcType()) {\r\n            return;\r\n        }\r\n        if (!config.data_selection_enabled) {\r\n            return;\r\n        } // do nothing if not selectable\r\n        $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\r\n        $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\r\n        $$.dragging = false;\r\n    };\r\n\r\n    c3_chart_internal_fn.getYFormat = function (forArc) {\r\n        var $$ = this,\r\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\r\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\r\n        return function (v, ratio, id) {\r\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\r\n            return format.call($$, v, ratio);\r\n        };\r\n    };\r\n    c3_chart_internal_fn.yFormat = function (v) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\r\n        return format(v);\r\n    };\r\n    c3_chart_internal_fn.y2Format = function (v) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\r\n        return format(v);\r\n    };\r\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\r\n        return isValue(v) ? +v : \"\";\r\n    };\r\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\r\n        return (ratio * 100).toFixed(1) + '%';\r\n    };\r\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\r\n        var $$ = this,\r\n            data_labels = $$.config.data_labels,\r\n            format,\r\n            defaultFormat = function defaultFormat(v) {\r\n            return isValue(v) ? +v : \"\";\r\n        };\r\n        // find format according to axis id\r\n        if (typeof data_labels.format === 'function') {\r\n            format = data_labels.format;\r\n        } else if (_typeof(data_labels.format) === 'object') {\r\n            if (data_labels.format[targetId]) {\r\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\r\n            } else {\r\n                format = function format() {\r\n                    return '';\r\n                };\r\n            }\r\n        } else {\r\n            format = defaultFormat;\r\n        }\r\n        return format;\r\n    };\r\n\r\n    c3_chart_internal_fn.initGrid = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            d3 = $$.d3;\r\n        $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\r\n        if (config.grid_x_show) {\r\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\r\n        }\r\n        if (config.grid_y_show) {\r\n            $$.grid.append('g').attr('class', CLASS.ygrids);\r\n        }\r\n        if (config.grid_focus_show) {\r\n            $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\r\n        }\r\n        $$.xgrid = d3.selectAll([]);\r\n        if (!config.grid_lines_front) {\r\n            $$.initGridLines();\r\n        }\r\n    };\r\n    c3_chart_internal_fn.initGridLines = function () {\r\n        var $$ = this,\r\n            d3 = $$.d3;\r\n        $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\r\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\r\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\r\n        $$.xgridLines = d3.selectAll([]);\r\n    };\r\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            d3 = $$.d3,\r\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\r\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\r\n\r\n        $$.xgridAttr = config.axis_rotated ? {\r\n            'x1': 0,\r\n            'x2': $$.width,\r\n            'y1': function y1(d) {\r\n                return $$.x(d) - tickOffset;\r\n            },\r\n            'y2': function y2(d) {\r\n                return $$.x(d) - tickOffset;\r\n            }\r\n        } : {\r\n            'x1': function x1(d) {\r\n                return $$.x(d) + tickOffset;\r\n            },\r\n            'x2': function x2(d) {\r\n                return $$.x(d) + tickOffset;\r\n            },\r\n            'y1': 0,\r\n            'y2': $$.height\r\n        };\r\n\r\n        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\r\n        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\r\n        if (!withoutUpdate) {\r\n            $$.xgrid.attr($$.xgridAttr).style(\"opacity\", function () {\r\n                return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\r\n            });\r\n        }\r\n        $$.xgrid.exit().remove();\r\n    };\r\n\r\n    c3_chart_internal_fn.updateYGrid = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\r\n        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\r\n        $$.ygrid.enter().append('line').attr('class', CLASS.ygrid);\r\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\r\n        $$.ygrid.exit().remove();\r\n        $$.smoothLines($$.ygrid, 'grid');\r\n    };\r\n\r\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\r\n        return d.position ? d.position : \"end\";\r\n    };\r\n    c3_chart_internal_fn.gridTextDx = function (d) {\r\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\r\n    };\r\n    c3_chart_internal_fn.xGridTextX = function (d) {\r\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\r\n    };\r\n    c3_chart_internal_fn.yGridTextX = function (d) {\r\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\r\n    };\r\n    c3_chart_internal_fn.updateGrid = function (duration) {\r\n        var $$ = this,\r\n            main = $$.main,\r\n            config = $$.config,\r\n            xgridLine,\r\n            ygridLine,\r\n            yv;\r\n\r\n        // hide if arc type\r\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\r\n\r\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\r\n        if (config.grid_x_show) {\r\n            $$.updateXGrid();\r\n        }\r\n        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines);\r\n        // enter\r\n        xgridLine = $$.xgridLines.enter().append('g').attr(\"class\", function (d) {\r\n            return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\r\n        });\r\n        xgridLine.append('line').style(\"opacity\", 0);\r\n        xgridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\r\n        // udpate\r\n        // done in d3.transition() of the end of this function\r\n        // exit\r\n        $$.xgridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\r\n\r\n        // Y-Grid\r\n        if (config.grid_y_show) {\r\n            $$.updateYGrid();\r\n        }\r\n        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines);\r\n        // enter\r\n        ygridLine = $$.ygridLines.enter().append('g').attr(\"class\", function (d) {\r\n            return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\r\n        });\r\n        ygridLine.append('line').style(\"opacity\", 0);\r\n        ygridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\r\n        // update\r\n        yv = $$.yv.bind($$);\r\n        $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\r\n        $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\r\n            return d.text;\r\n        }).style(\"opacity\", 1);\r\n        // exit\r\n        $$.ygridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\r\n    };\r\n    c3_chart_internal_fn.redrawGrid = function (withTransition) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            xv = $$.xv.bind($$),\r\n            lines = $$.xgridLines.select('line'),\r\n            texts = $$.xgridLines.select('text');\r\n        return [(withTransition ? lines.transition() : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition() : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\r\n            return d.text;\r\n        }).style(\"opacity\", 1)];\r\n    };\r\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            dataToShow = selectedData.filter(function (d) {\r\n            return d && isValue(d.value);\r\n        }),\r\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\r\n            xx = $$.xx.bind($$);\r\n        if (!config.tooltip_show) {\r\n            return;\r\n        }\r\n        // Hide when scatter plot exists\r\n        if ($$.hasType('scatter') || $$.hasArcType()) {\r\n            return;\r\n        }\r\n        focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\r\n        $$.smoothLines(focusEl, 'grid');\r\n    };\r\n    c3_chart_internal_fn.hideXGridFocus = function () {\r\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\r\n    };\r\n    c3_chart_internal_fn.updateXgridFocus = function () {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\r\n    };\r\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\r\n        var $$ = this,\r\n            gridData = [],\r\n            xDomain,\r\n            firstYear,\r\n            lastYear,\r\n            i,\r\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\r\n        if (type === 'year') {\r\n            xDomain = $$.getXDomain();\r\n            firstYear = xDomain[0].getFullYear();\r\n            lastYear = xDomain[1].getFullYear();\r\n            for (i = firstYear; i <= lastYear; i++) {\r\n                gridData.push(new Date(i + '-01-01 00:00:00'));\r\n            }\r\n        } else {\r\n            gridData = scale.ticks(10);\r\n            if (gridData.length > tickNum) {\r\n                // use only int\r\n                gridData = gridData.filter(function (d) {\r\n                    return (\"\" + d).indexOf('.') < 0;\r\n                });\r\n            }\r\n        }\r\n        return gridData;\r\n    };\r\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\r\n        return params ? function (line) {\r\n            var found = false;\r\n            [].concat(params).forEach(function (param) {\r\n                if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\r\n                    found = true;\r\n                }\r\n            });\r\n            return found;\r\n        } : function () {\r\n            return true;\r\n        };\r\n    };\r\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            toRemove = $$.getGridFilterToRemove(params),\r\n            toShow = function toShow(line) {\r\n            return !toRemove(line);\r\n        },\r\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\r\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\r\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\r\n        if (forX) {\r\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\r\n        } else {\r\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.initEventRect = function () {\r\n        var $$ = this;\r\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\r\n    };\r\n    c3_chart_internal_fn.redrawEventRect = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            eventRectUpdate,\r\n            maxDataCountTarget,\r\n            isMultipleX = $$.isMultipleX();\r\n\r\n        // rects for mouseover\r\n        var eventRects = $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null).classed(CLASS.eventRectsMultiple, isMultipleX).classed(CLASS.eventRectsSingle, !isMultipleX);\r\n\r\n        // clear old rects\r\n        eventRects.selectAll('.' + CLASS.eventRect).remove();\r\n\r\n        // open as public variable\r\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\r\n\r\n        if (isMultipleX) {\r\n            eventRectUpdate = $$.eventRect.data([0]);\r\n            // enter : only one rect will be added\r\n            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\r\n            // update\r\n            $$.updateEventRect(eventRectUpdate);\r\n            // exit : not needed because always only one rect exists\r\n        } else {\r\n            // Set data and update $$.eventRect\r\n            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\r\n            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\r\n            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\r\n            eventRectUpdate = $$.eventRect.data(function (d) {\r\n                return d;\r\n            });\r\n            // enter\r\n            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\r\n            // update\r\n            $$.updateEventRect(eventRectUpdate);\r\n            // exit\r\n            eventRectUpdate.exit().remove();\r\n        }\r\n    };\r\n    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            x,\r\n            y,\r\n            w,\r\n            h,\r\n            rectW,\r\n            rectX;\r\n\r\n        // set update selection if null\r\n        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) {\r\n            return d;\r\n        });\r\n\r\n        if ($$.isMultipleX()) {\r\n            // TODO: rotated not supported yet\r\n            x = 0;\r\n            y = 0;\r\n            w = $$.width;\r\n            h = $$.height;\r\n        } else {\r\n            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\r\n\r\n                // update index for x that is used by prevX and nextX\r\n                $$.updateXs();\r\n\r\n                rectW = function rectW(d) {\r\n                    var prevX = $$.getPrevX(d.index),\r\n                        nextX = $$.getNextX(d.index);\r\n\r\n                    // if there this is a single data point make the eventRect full width (or height)\r\n                    if (prevX === null && nextX === null) {\r\n                        return config.axis_rotated ? $$.height : $$.width;\r\n                    }\r\n\r\n                    if (prevX === null) {\r\n                        prevX = $$.x.domain()[0];\r\n                    }\r\n                    if (nextX === null) {\r\n                        nextX = $$.x.domain()[1];\r\n                    }\r\n\r\n                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\r\n                };\r\n                rectX = function rectX(d) {\r\n                    var prevX = $$.getPrevX(d.index),\r\n                        nextX = $$.getNextX(d.index),\r\n                        thisX = $$.data.xs[d.id][d.index];\r\n\r\n                    // if there this is a single data point position the eventRect at 0\r\n                    if (prevX === null && nextX === null) {\r\n                        return 0;\r\n                    }\r\n\r\n                    if (prevX === null) {\r\n                        prevX = $$.x.domain()[0];\r\n                    }\r\n\r\n                    return ($$.x(thisX) + $$.x(prevX)) / 2;\r\n                };\r\n            } else {\r\n                rectW = $$.getEventRectWidth();\r\n                rectX = function rectX(d) {\r\n                    return $$.x(d.x) - rectW / 2;\r\n                };\r\n            }\r\n            x = config.axis_rotated ? 0 : rectX;\r\n            y = config.axis_rotated ? rectX : 0;\r\n            w = config.axis_rotated ? $$.width : rectW;\r\n            h = config.axis_rotated ? rectW : $$.height;\r\n        }\r\n\r\n        eventRectUpdate.attr('class', $$.classEvent.bind($$)).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h);\r\n    };\r\n    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\r\n        var $$ = this,\r\n            d3 = $$.d3,\r\n            config = $$.config;\r\n        eventRectEnter.append(\"rect\").attr(\"class\", $$.classEvent.bind($$)).style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null).on('mouseover', function (d) {\r\n            var index = d.index;\r\n\r\n            if ($$.dragging || $$.flowing) {\r\n                return;\r\n            } // do nothing while dragging/flowing\r\n            if ($$.hasArcType()) {\r\n                return;\r\n            }\r\n\r\n            // Expand shapes for selection\r\n            if (config.point_focus_expand_enabled) {\r\n                $$.expandCircles(index, null, true);\r\n            }\r\n            $$.expandBars(index, null, true);\r\n\r\n            // Call event handler\r\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\r\n                config.data_onmouseover.call($$.api, d);\r\n            });\r\n        }).on('mouseout', function (d) {\r\n            var index = d.index;\r\n            if (!$$.config) {\r\n                return;\r\n            } // chart is destroyed\r\n            if ($$.hasArcType()) {\r\n                return;\r\n            }\r\n            $$.hideXGridFocus();\r\n            $$.hideTooltip();\r\n            // Undo expanded shapes\r\n            $$.unexpandCircles();\r\n            $$.unexpandBars();\r\n            // Call event handler\r\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\r\n                config.data_onmouseout.call($$.api, d);\r\n            });\r\n        }).on('mousemove', function (d) {\r\n            var selectedData,\r\n                index = d.index,\r\n                eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\r\n\r\n            if ($$.dragging || $$.flowing) {\r\n                return;\r\n            } // do nothing while dragging/flowing\r\n            if ($$.hasArcType()) {\r\n                return;\r\n            }\r\n\r\n            if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\r\n                index -= 1;\r\n            }\r\n\r\n            // Show tooltip\r\n            selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\r\n                return $$.addName($$.getValueOnIndex(t.values, index));\r\n            });\r\n\r\n            if (config.tooltip_grouped) {\r\n                $$.showTooltip(selectedData, this);\r\n                $$.showXGridFocus(selectedData);\r\n            }\r\n\r\n            if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\r\n                return;\r\n            }\r\n\r\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function () {\r\n                d3.select(this).classed(CLASS.EXPANDED, true);\r\n                if (config.data_selection_enabled) {\r\n                    eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\r\n                }\r\n                if (!config.tooltip_grouped) {\r\n                    $$.hideXGridFocus();\r\n                    $$.hideTooltip();\r\n                    if (!config.data_selection_grouped) {\r\n                        $$.unexpandCircles(index);\r\n                        $$.unexpandBars(index);\r\n                    }\r\n                }\r\n            }).filter(function (d) {\r\n                return $$.isWithinShape(this, d);\r\n            }).each(function (d) {\r\n                if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\r\n                    eventRect.style('cursor', 'pointer');\r\n                }\r\n                if (!config.tooltip_grouped) {\r\n                    $$.showTooltip([d], this);\r\n                    $$.showXGridFocus([d]);\r\n                    if (config.point_focus_expand_enabled) {\r\n                        $$.expandCircles(index, d.id, true);\r\n                    }\r\n                    $$.expandBars(index, d.id, true);\r\n                }\r\n            });\r\n        }).on('click', function (d) {\r\n            var index = d.index;\r\n            if ($$.hasArcType() || !$$.toggleShape) {\r\n                return;\r\n            }\r\n            if ($$.cancelClick) {\r\n                $$.cancelClick = false;\r\n                return;\r\n            }\r\n            if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\r\n                index -= 1;\r\n            }\r\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\r\n                if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\r\n                    $$.toggleShape(this, d, index);\r\n                    $$.config.data_onclick.call($$.api, d, this);\r\n                }\r\n            });\r\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\r\n            $$.drag(d3.mouse(this));\r\n        }).on('dragstart', function () {\r\n            $$.dragstart(d3.mouse(this));\r\n        }).on('dragend', function () {\r\n            $$.dragend();\r\n        }) : function () {});\r\n    };\r\n\r\n    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\r\n        var $$ = this,\r\n            d3 = $$.d3,\r\n            config = $$.config;\r\n\r\n        function mouseout() {\r\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\r\n            $$.hideXGridFocus();\r\n            $$.hideTooltip();\r\n            $$.unexpandCircles();\r\n            $$.unexpandBars();\r\n        }\r\n\r\n        eventRectEnter.append('rect').attr('x', 0).attr('y', 0).attr('width', $$.width).attr('height', $$.height).attr('class', CLASS.eventRect).on('mouseout', function () {\r\n            if (!$$.config) {\r\n                return;\r\n            } // chart is destroyed\r\n            if ($$.hasArcType()) {\r\n                return;\r\n            }\r\n            mouseout();\r\n        }).on('mousemove', function () {\r\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\r\n            var mouse, closest, sameXData, selectedData;\r\n\r\n            if ($$.dragging) {\r\n                return;\r\n            } // do nothing when dragging\r\n            if ($$.hasArcType(targetsToShow)) {\r\n                return;\r\n            }\r\n\r\n            mouse = d3.mouse(this);\r\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\r\n\r\n            if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\r\n                config.data_onmouseout.call($$.api, $$.mouseover);\r\n                $$.mouseover = undefined;\r\n            }\r\n\r\n            if (!closest) {\r\n                mouseout();\r\n                return;\r\n            }\r\n\r\n            if ($$.isScatterType(closest) || !config.tooltip_grouped) {\r\n                sameXData = [closest];\r\n            } else {\r\n                sameXData = $$.filterByX(targetsToShow, closest.x);\r\n            }\r\n\r\n            // show tooltip when cursor is close to some point\r\n            selectedData = sameXData.map(function (d) {\r\n                return $$.addName(d);\r\n            });\r\n            $$.showTooltip(selectedData, this);\r\n\r\n            // expand points\r\n            if (config.point_focus_expand_enabled) {\r\n                $$.expandCircles(closest.index, closest.id, true);\r\n            }\r\n            $$.expandBars(closest.index, closest.id, true);\r\n\r\n            // Show xgrid focus line\r\n            $$.showXGridFocus(selectedData);\r\n\r\n            // Show cursor as pointer if point is close to mouse position\r\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\r\n                $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\r\n                if (!$$.mouseover) {\r\n                    config.data_onmouseover.call($$.api, closest);\r\n                    $$.mouseover = closest;\r\n                }\r\n            }\r\n        }).on('click', function () {\r\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\r\n            var mouse, closest;\r\n            if ($$.hasArcType(targetsToShow)) {\r\n                return;\r\n            }\r\n\r\n            mouse = d3.mouse(this);\r\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\r\n            if (!closest) {\r\n                return;\r\n            }\r\n            // select if selection enabled\r\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\r\n                $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\r\n                    if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\r\n                        $$.toggleShape(this, closest, closest.index);\r\n                        $$.config.data_onclick.call($$.api, closest, this);\r\n                    }\r\n                });\r\n            }\r\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\r\n            $$.drag(d3.mouse(this));\r\n        }).on('dragstart', function () {\r\n            $$.dragstart(d3.mouse(this));\r\n        }).on('dragend', function () {\r\n            $$.dragend();\r\n        }) : function () {});\r\n    };\r\n    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\r\n        var $$ = this,\r\n            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\r\n            eventRect = $$.main.select(selector).node(),\r\n            box = eventRect.getBoundingClientRect(),\r\n            x = box.left + (mouse ? mouse[0] : 0),\r\n            y = box.top + (mouse ? mouse[1] : 0),\r\n            event = document.createEvent(\"MouseEvents\");\r\n\r\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\r\n        eventRect.dispatchEvent(event);\r\n    };\r\n\r\n    c3_chart_internal_fn.initLegend = function () {\r\n        var $$ = this;\r\n        $$.legendItemTextBox = {};\r\n        $$.legendHasRendered = false;\r\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\r\n        if (!$$.config.legend_show) {\r\n            $$.legend.style('visibility', 'hidden');\r\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\r\n            return;\r\n        }\r\n        // MEMO: call here to update legend box and tranlate for all\r\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\r\n        $$.updateLegendWithDefaults();\r\n    };\r\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\r\n        var $$ = this;\r\n        $$.updateLegend($$.mapToIds($$.data.targets), { withTransform: false, withTransitionForTransform: false, withTransition: false });\r\n    };\r\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            insetLegendPosition = {\r\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\r\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\r\n        };\r\n\r\n        $$.margin3 = {\r\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\r\n            right: NaN,\r\n            bottom: 0,\r\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\r\n        };\r\n    };\r\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\r\n        var $$ = this;\r\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\r\n    };\r\n    c3_chart_internal_fn.updateLegendStep = function (step) {\r\n        this.legendStep = step;\r\n    };\r\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\r\n        this.legendItemWidth = w;\r\n    };\r\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\r\n        this.legendItemHeight = h;\r\n    };\r\n    c3_chart_internal_fn.getLegendWidth = function () {\r\n        var $$ = this;\r\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\r\n    };\r\n    c3_chart_internal_fn.getLegendHeight = function () {\r\n        var $$ = this,\r\n            h = 0;\r\n        if ($$.config.legend_show) {\r\n            if ($$.isLegendRight) {\r\n                h = $$.currentHeight;\r\n            } else {\r\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\r\n            }\r\n        }\r\n        return h;\r\n    };\r\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\r\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\r\n    };\r\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\r\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\r\n    };\r\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\r\n        var $$ = this;\r\n        targetIds = $$.mapToTargetIds(targetIds);\r\n        $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\r\n            return targetIds.indexOf(id) >= 0;\r\n        }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\r\n            var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\r\n            return opacity.call($$, $$.d3.select(this));\r\n        });\r\n    };\r\n    c3_chart_internal_fn.revertLegend = function () {\r\n        var $$ = this,\r\n            d3 = $$.d3;\r\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\r\n            return $$.opacityForLegend(d3.select(this));\r\n        });\r\n    };\r\n    c3_chart_internal_fn.showLegend = function (targetIds) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        if (!config.legend_show) {\r\n            config.legend_show = true;\r\n            $$.legend.style('visibility', 'visible');\r\n            if (!$$.legendHasRendered) {\r\n                $$.updateLegendWithDefaults();\r\n            }\r\n        }\r\n        $$.removeHiddenLegendIds(targetIds);\r\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\r\n            return $$.opacityForLegend($$.d3.select(this));\r\n        });\r\n    };\r\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        if (config.legend_show && isEmpty(targetIds)) {\r\n            config.legend_show = false;\r\n            $$.legend.style('visibility', 'hidden');\r\n        }\r\n        $$.addHiddenLegendIds(targetIds);\r\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\r\n    };\r\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\r\n        this.legendItemTextBox = {};\r\n    };\r\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\r\n        var paddingTop = 4,\r\n            paddingRight = 10,\r\n            maxWidth = 0,\r\n            maxHeight = 0,\r\n            posMin = 10,\r\n            tileWidth = config.legend_item_tile_width + 5;\r\n        var l,\r\n            totalLength = 0,\r\n            offsets = {},\r\n            widths = {},\r\n            heights = {},\r\n            margins = [0],\r\n            steps = {},\r\n            step = 0;\r\n        var withTransition, withTransitionForTransform;\r\n        var texts, rects, tiles, background;\r\n\r\n        // Skip elements when their name is set to null\r\n        targetIds = targetIds.filter(function (id) {\r\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\r\n        });\r\n\r\n        options = options || {};\r\n        withTransition = getOption(options, \"withTransition\", true);\r\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\r\n\r\n        function getTextBox(textElement, id) {\r\n            if (!$$.legendItemTextBox[id]) {\r\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\r\n            }\r\n            return $$.legendItemTextBox[id];\r\n        }\r\n\r\n        function updatePositions(textElement, id, index) {\r\n            var reset = index === 0,\r\n                isLast = index === targetIds.length - 1,\r\n                box = getTextBox(textElement, id),\r\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\r\n                itemHeight = box.height + paddingTop,\r\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\r\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\r\n                margin,\r\n                maxLength;\r\n\r\n            // MEMO: care about condifion of step, totalLength\r\n            function updateValues(id, withoutStep) {\r\n                if (!withoutStep) {\r\n                    margin = (areaLength - totalLength - itemLength) / 2;\r\n                    if (margin < posMin) {\r\n                        margin = (areaLength - itemLength) / 2;\r\n                        totalLength = 0;\r\n                        step++;\r\n                    }\r\n                }\r\n                steps[id] = step;\r\n                margins[step] = $$.isLegendInset ? 10 : margin;\r\n                offsets[id] = totalLength;\r\n                totalLength += itemLength;\r\n            }\r\n\r\n            if (reset) {\r\n                totalLength = 0;\r\n                step = 0;\r\n                maxWidth = 0;\r\n                maxHeight = 0;\r\n            }\r\n\r\n            if (config.legend_show && !$$.isLegendToShow(id)) {\r\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\r\n                return;\r\n            }\r\n\r\n            widths[id] = itemWidth;\r\n            heights[id] = itemHeight;\r\n\r\n            if (!maxWidth || itemWidth >= maxWidth) {\r\n                maxWidth = itemWidth;\r\n            }\r\n            if (!maxHeight || itemHeight >= maxHeight) {\r\n                maxHeight = itemHeight;\r\n            }\r\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\r\n\r\n            if (config.legend_equally) {\r\n                Object.keys(widths).forEach(function (id) {\r\n                    widths[id] = maxWidth;\r\n                });\r\n                Object.keys(heights).forEach(function (id) {\r\n                    heights[id] = maxHeight;\r\n                });\r\n                margin = (areaLength - maxLength * targetIds.length) / 2;\r\n                if (margin < posMin) {\r\n                    totalLength = 0;\r\n                    step = 0;\r\n                    targetIds.forEach(function (id) {\r\n                        updateValues(id);\r\n                    });\r\n                } else {\r\n                    updateValues(id, true);\r\n                }\r\n            } else {\r\n                updateValues(id);\r\n            }\r\n        }\r\n\r\n        if ($$.isLegendInset) {\r\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\r\n            $$.updateLegendStep(step);\r\n        }\r\n\r\n        if ($$.isLegendRight) {\r\n            xForLegend = function xForLegend(id) {\r\n                return maxWidth * steps[id];\r\n            };\r\n            yForLegend = function yForLegend(id) {\r\n                return margins[steps[id]] + offsets[id];\r\n            };\r\n        } else if ($$.isLegendInset) {\r\n            xForLegend = function xForLegend(id) {\r\n                return maxWidth * steps[id] + 10;\r\n            };\r\n            yForLegend = function yForLegend(id) {\r\n                return margins[steps[id]] + offsets[id];\r\n            };\r\n        } else {\r\n            xForLegend = function xForLegend(id) {\r\n                return margins[steps[id]] + offsets[id];\r\n            };\r\n            yForLegend = function yForLegend(id) {\r\n                return maxHeight * steps[id];\r\n            };\r\n        }\r\n        xForLegendText = function xForLegendText(id, i) {\r\n            return xForLegend(id, i) + 4 + config.legend_item_tile_width;\r\n        };\r\n        yForLegendText = function yForLegendText(id, i) {\r\n            return yForLegend(id, i) + 9;\r\n        };\r\n        xForLegendRect = function xForLegendRect(id, i) {\r\n            return xForLegend(id, i);\r\n        };\r\n        yForLegendRect = function yForLegendRect(id, i) {\r\n            return yForLegend(id, i) - 5;\r\n        };\r\n        x1ForLegendTile = function x1ForLegendTile(id, i) {\r\n            return xForLegend(id, i) - 2;\r\n        };\r\n        x2ForLegendTile = function x2ForLegendTile(id, i) {\r\n            return xForLegend(id, i) - 2 + config.legend_item_tile_width;\r\n        };\r\n        yForLegendTile = function yForLegendTile(id, i) {\r\n            return yForLegend(id, i) + 4;\r\n        };\r\n\r\n        // Define g for legend area\r\n        l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\r\n            return $$.generateClass(CLASS.legendItem, id);\r\n        }).style('visibility', function (id) {\r\n            return $$.isLegendToShow(id) ? 'visible' : 'hidden';\r\n        }).style('cursor', 'pointer').on('click', function (id) {\r\n            if (config.legend_item_onclick) {\r\n                config.legend_item_onclick.call($$, id);\r\n            } else {\r\n                if ($$.d3.event.altKey) {\r\n                    $$.api.hide();\r\n                    $$.api.show(id);\r\n                } else {\r\n                    $$.api.toggle(id);\r\n                    $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\r\n                }\r\n            }\r\n        }).on('mouseover', function (id) {\r\n            if (config.legend_item_onmouseover) {\r\n                config.legend_item_onmouseover.call($$, id);\r\n            } else {\r\n                $$.d3.select(this).classed(CLASS.legendItemFocused, true);\r\n                if (!$$.transiting && $$.isTargetToShow(id)) {\r\n                    $$.api.focus(id);\r\n                }\r\n            }\r\n        }).on('mouseout', function (id) {\r\n            if (config.legend_item_onmouseout) {\r\n                config.legend_item_onmouseout.call($$, id);\r\n            } else {\r\n                $$.d3.select(this).classed(CLASS.legendItemFocused, false);\r\n                $$.api.revert();\r\n            }\r\n        });\r\n        l.append('text').text(function (id) {\r\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\r\n        }).each(function (id, i) {\r\n            updatePositions(this, id, i);\r\n        }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\r\n        l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\r\n        l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height);\r\n\r\n        // Set background for inset legend\r\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\r\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\r\n            background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\r\n        }\r\n\r\n        texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\r\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\r\n        }) // MEMO: needed for update\r\n        .each(function (id, i) {\r\n            updatePositions(this, id, i);\r\n        });\r\n        (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\r\n\r\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\r\n        (withTransition ? rects.transition() : rects).attr('width', function (id) {\r\n            return widths[id];\r\n        }).attr('height', function (id) {\r\n            return heights[id];\r\n        }).attr('x', xForLegendRect).attr('y', yForLegendRect);\r\n\r\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\r\n        (withTransition ? tiles.transition() : tiles).style('stroke', $$.levelColor ? function (id) {\r\n            return $$.levelColor($$.cache[id].values[0].value);\r\n        } : $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\r\n\r\n        if (background) {\r\n            (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\r\n        }\r\n\r\n        // toggle legend state\r\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\r\n            return !$$.isTargetToShow(id);\r\n        });\r\n\r\n        // Update all to reflect change of legend\r\n        $$.updateLegendItemWidth(maxWidth);\r\n        $$.updateLegendItemHeight(maxHeight);\r\n        $$.updateLegendStep(step);\r\n        // Update size and scale\r\n        $$.updateSizes();\r\n        $$.updateScales();\r\n        $$.updateSvgSize();\r\n        // Update g positions\r\n        $$.transformAll(withTransitionForTransform, transitions);\r\n        $$.legendHasRendered = true;\r\n    };\r\n\r\n    c3_chart_internal_fn.initRegion = function () {\r\n        var $$ = this;\r\n        $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\r\n    };\r\n    c3_chart_internal_fn.updateRegion = function (duration) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n\r\n        // hide if arc type\r\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\r\n\r\n        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\r\n        $$.mainRegion.enter().append('g').append('rect').style(\"fill-opacity\", 0);\r\n        $$.mainRegion.attr('class', $$.classRegion.bind($$));\r\n        $$.mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\r\n    };\r\n    c3_chart_internal_fn.redrawRegion = function (withTransition) {\r\n        var $$ = this,\r\n            regions = $$.mainRegion.selectAll('rect').each(function () {\r\n            // data is binded to g and it's not transferred to rect (child node) automatically,\r\n            // then data of each rect has to be updated manually.\r\n            // TODO: there should be more efficient way to solve this?\r\n            var parentData = $$.d3.select(this.parentNode).datum();\r\n            $$.d3.select(this).datum(parentData);\r\n        }),\r\n            x = $$.regionX.bind($$),\r\n            y = $$.regionY.bind($$),\r\n            w = $$.regionWidth.bind($$),\r\n            h = $$.regionHeight.bind($$);\r\n        return [(withTransition ? regions.transition() : regions).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h).style(\"fill-opacity\", function (d) {\r\n            return isValue(d.opacity) ? d.opacity : 0.1;\r\n        })];\r\n    };\r\n    c3_chart_internal_fn.regionX = function (d) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            xPos,\r\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\r\n        if (d.axis === 'y' || d.axis === 'y2') {\r\n            xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\r\n        } else {\r\n            xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\r\n        }\r\n        return xPos;\r\n    };\r\n    c3_chart_internal_fn.regionY = function (d) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            yPos,\r\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\r\n        if (d.axis === 'y' || d.axis === 'y2') {\r\n            yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\r\n        } else {\r\n            yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\r\n        }\r\n        return yPos;\r\n    };\r\n    c3_chart_internal_fn.regionWidth = function (d) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            start = $$.regionX(d),\r\n            end,\r\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\r\n        if (d.axis === 'y' || d.axis === 'y2') {\r\n            end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\r\n        } else {\r\n            end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\r\n        }\r\n        return end < start ? 0 : end - start;\r\n    };\r\n    c3_chart_internal_fn.regionHeight = function (d) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            start = this.regionY(d),\r\n            end,\r\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\r\n        if (d.axis === 'y' || d.axis === 'y2') {\r\n            end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\r\n        } else {\r\n            end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\r\n        }\r\n        return end < start ? 0 : end - start;\r\n    };\r\n    c3_chart_internal_fn.isRegionOnX = function (d) {\r\n        return !d.axis || d.axis === 'x';\r\n    };\r\n\r\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\r\n        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\r\n    };\r\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\r\n        var $$ = this,\r\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\r\n            _scale = domain ? scale.domain(domain) : scale,\r\n            key;\r\n        // Define customized scale if categorized axis\r\n        if ($$.isCategorized()) {\r\n            offset = offset || function () {\r\n                return 0;\r\n            };\r\n            scale = function scale(d, raw) {\r\n                var v = _scale(d) + offset(d);\r\n                return raw ? v : Math.ceil(v);\r\n            };\r\n        } else {\r\n            scale = function scale(d, raw) {\r\n                var v = _scale(d);\r\n                return raw ? v : Math.ceil(v);\r\n            };\r\n        }\r\n        // define functions\r\n        for (key in _scale) {\r\n            scale[key] = _scale[key];\r\n        }\r\n        scale.orgDomain = function () {\r\n            return _scale.domain();\r\n        };\r\n        // define custom domain() for categorized axis\r\n        if ($$.isCategorized()) {\r\n            scale.domain = function (domain) {\r\n                if (!arguments.length) {\r\n                    domain = this.orgDomain();\r\n                    return [domain[0], domain[1] + 1];\r\n                }\r\n                _scale.domain(domain);\r\n                return scale;\r\n            };\r\n        }\r\n        return scale;\r\n    };\r\n    c3_chart_internal_fn.getY = function (min, max, domain) {\r\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\r\n        if (domain) {\r\n            scale.domain(domain);\r\n        }\r\n        return scale;\r\n    };\r\n    c3_chart_internal_fn.getYScale = function (id) {\r\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\r\n    };\r\n    c3_chart_internal_fn.getSubYScale = function (id) {\r\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\r\n    };\r\n    c3_chart_internal_fn.updateScales = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            forInit = !$$.x;\r\n        // update edges\r\n        $$.xMin = config.axis_rotated ? 1 : 0;\r\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\r\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\r\n        $$.yMax = config.axis_rotated ? $$.width : 1;\r\n        $$.subXMin = $$.xMin;\r\n        $$.subXMax = $$.xMax;\r\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\r\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\r\n        // update scales\r\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\r\n            return $$.xAxis.tickOffset();\r\n        });\r\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\r\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\r\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\r\n            return d % 1 ? 0 : $$.subXAxis.tickOffset();\r\n        });\r\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\r\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\r\n        // update axes\r\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\r\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\r\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\r\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\r\n\r\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\r\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\r\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\r\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\r\n\r\n        // Set initialized scales to brush and zoom\r\n        if (!forInit) {\r\n            if ($$.brush) {\r\n                $$.brush.scale($$.subX);\r\n            }\r\n            if (config.zoom_enabled) {\r\n                $$.zoom.scale($$.x);\r\n            }\r\n        }\r\n        // update for arc\r\n        if ($$.updateArc) {\r\n            $$.updateArc();\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\r\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\r\n            r = $$.pointSelectR.bind($$);\r\n        config.data_onselected.call($$.api, d, target.node());\r\n        // add selected-circle on low layer g\r\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\r\n            return $$.generateClass(CLASS.selectedCircle, i);\r\n        }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\r\n            return $$.color(d);\r\n        }).attr(\"r\", function (d) {\r\n            return $$.pointSelectR(d) * 1.4;\r\n        }).transition().duration(100).attr(\"r\", r);\r\n    };\r\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\r\n        var $$ = this;\r\n        $$.config.data_onunselected.call($$.api, d, target.node());\r\n        // remove selected-circle from low layer g\r\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\r\n    };\r\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\r\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\r\n    };\r\n    c3_chart_internal_fn.selectPath = function (target, d) {\r\n        var $$ = this;\r\n        $$.config.data_onselected.call($$, d, target.node());\r\n        if ($$.config.interaction_brighten) {\r\n            target.transition().duration(100).style(\"fill\", function () {\r\n                return $$.d3.rgb($$.color(d)).brighter(0.75);\r\n            });\r\n        }\r\n    };\r\n    c3_chart_internal_fn.unselectPath = function (target, d) {\r\n        var $$ = this;\r\n        $$.config.data_onunselected.call($$, d, target.node());\r\n        if ($$.config.interaction_brighten) {\r\n            target.transition().duration(100).style(\"fill\", function () {\r\n                return $$.color(d);\r\n            });\r\n        }\r\n    };\r\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\r\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\r\n    };\r\n    c3_chart_internal_fn.getToggle = function (that, d) {\r\n        var $$ = this,\r\n            toggle;\r\n        if (that.nodeName === 'circle') {\r\n            if ($$.isStepType(d)) {\r\n                // circle is hidden in step chart, so treat as within the click area\r\n                toggle = function toggle() {}; // TODO: how to select step chart?\r\n            } else {\r\n                toggle = $$.togglePoint;\r\n            }\r\n        } else if (that.nodeName === 'path') {\r\n            toggle = $$.togglePath;\r\n        }\r\n        return toggle;\r\n    };\r\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\r\n        var $$ = this,\r\n            d3 = $$.d3,\r\n            config = $$.config,\r\n            shape = d3.select(that),\r\n            isSelected = shape.classed(CLASS.SELECTED),\r\n            toggle = $$.getToggle(that, d).bind($$);\r\n\r\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\r\n            if (!config.data_selection_multiple) {\r\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\r\n                    var shape = d3.select(this);\r\n                    if (shape.classed(CLASS.SELECTED)) {\r\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\r\n                    }\r\n                });\r\n            }\r\n            shape.classed(CLASS.SELECTED, !isSelected);\r\n            toggle(!isSelected, shape, d, i);\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.initBar = function () {\r\n        var $$ = this;\r\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\r\n    };\r\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            mainBarUpdate,\r\n            mainBarEnter,\r\n            classChartBar = $$.classChartBar.bind($$),\r\n            classBars = $$.classBars.bind($$),\r\n            classFocus = $$.classFocus.bind($$);\r\n        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\r\n            return classChartBar(d) + classFocus(d);\r\n        });\r\n        mainBarEnter = mainBarUpdate.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\");\r\n        // Bars for each data\r\n        mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\r\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\r\n        });\r\n    };\r\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\r\n        var $$ = this,\r\n            barData = $$.barData.bind($$),\r\n            classBar = $$.classBar.bind($$),\r\n            initialOpacity = $$.initialOpacity.bind($$),\r\n            color = function color(d) {\r\n            return $$.color(d.id);\r\n        };\r\n        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\r\n        $$.mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\r\n        $$.mainBar.style(\"opacity\", initialOpacity);\r\n        $$.mainBar.exit().transition().duration(durationForExit).remove();\r\n    };\r\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\r\n        return [(withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar).attr('d', drawBar).style(\"stroke\", this.color).style(\"fill\", this.color).style(\"opacity\", 1)];\r\n    };\r\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\r\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\r\n    };\r\n    c3_chart_internal_fn.getBars = function (i, id) {\r\n        var $$ = this;\r\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\r\n    };\r\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\r\n        var $$ = this;\r\n        if (reset) {\r\n            $$.unexpandBars();\r\n        }\r\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\r\n    };\r\n    c3_chart_internal_fn.unexpandBars = function (i) {\r\n        var $$ = this;\r\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\r\n    };\r\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\r\n        return function (d, i) {\r\n            // 4 points that make a bar\r\n            var points = getPoints(d, i);\r\n\r\n            // switch points if axis is rotated, not applicable for sub chart\r\n            var indexX = config.axis_rotated ? 1 : 0;\r\n            var indexY = config.axis_rotated ? 0 : 1;\r\n\r\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\r\n\r\n            return path;\r\n        };\r\n    };\r\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\r\n        var $$ = this,\r\n            axis = isSub ? $$.subXAxis : $$.xAxis,\r\n            barTargetsNum = barIndices.__max__ + 1,\r\n            barW = $$.getBarW(axis, barTargetsNum),\r\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\r\n            barY = $$.getShapeY(!!isSub),\r\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\r\n            barSpaceOffset = barW * ($$.config.bar_space / 2),\r\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\r\n        return function (d, i) {\r\n            var y0 = yScale.call($$, d.id)(0),\r\n                offset = barOffset(d, i) || y0,\r\n                // offset is for stacked bar chart\r\n            posX = barX(d),\r\n                posY = barY(d);\r\n            // fix posY not to overflow opposite quadrant\r\n            if ($$.config.axis_rotated) {\r\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\r\n                    posY = y0;\r\n                }\r\n            }\r\n            // 4 points that make a bar\r\n            return [[posX + barSpaceOffset, offset], [posX + barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, offset]];\r\n        };\r\n    };\r\n    c3_chart_internal_fn.isWithinBar = function (that) {\r\n        var mouse = this.d3.mouse(that),\r\n            box = that.getBoundingClientRect(),\r\n            seg0 = that.pathSegList.getItem(0),\r\n            seg1 = that.pathSegList.getItem(1),\r\n            x = Math.min(seg0.x, seg1.x),\r\n            y = Math.min(seg0.y, seg1.y),\r\n            w = box.width,\r\n            h = box.height,\r\n            offset = 2,\r\n            sx = x - offset,\r\n            ex = x + w + offset,\r\n            sy = y + h + offset,\r\n            ey = y - offset;\r\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\r\n    };\r\n\r\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            indices = {},\r\n            i = 0,\r\n            j,\r\n            k;\r\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\r\n            for (j = 0; j < config.data_groups.length; j++) {\r\n                if (config.data_groups[j].indexOf(d.id) < 0) {\r\n                    continue;\r\n                }\r\n                for (k = 0; k < config.data_groups[j].length; k++) {\r\n                    if (config.data_groups[j][k] in indices) {\r\n                        indices[d.id] = indices[config.data_groups[j][k]];\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (isUndefined(indices[d.id])) {\r\n                indices[d.id] = i++;\r\n            }\r\n        });\r\n        indices.__max__ = i - 1;\r\n        return indices;\r\n    };\r\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\r\n        var $$ = this,\r\n            scale = isSub ? $$.subX : $$.x;\r\n        return function (d) {\r\n            var index = d.id in indices ? indices[d.id] : 0;\r\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\r\n        };\r\n    };\r\n    c3_chart_internal_fn.getShapeY = function (isSub) {\r\n        var $$ = this;\r\n        return function (d) {\r\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\r\n            return scale(d.value);\r\n        };\r\n    };\r\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\r\n        var $$ = this,\r\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\r\n            targetIds = targets.map(function (t) {\r\n            return t.id;\r\n        });\r\n        return function (d, i) {\r\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\r\n                y0 = scale(0),\r\n                offset = y0;\r\n            targets.forEach(function (t) {\r\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\r\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) {\r\n                    return;\r\n                }\r\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\r\n                    // check if the x values line up\r\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\r\n                        // \"+\" for timeseries\r\n                        // if not, try to find the value that does line up\r\n                        i = -1;\r\n                        values.forEach(function (v, j) {\r\n                            if (v.x === d.x) {\r\n                                i = j;\r\n                            }\r\n                        });\r\n                    }\r\n                    if (i in values && values[i].value * d.value >= 0) {\r\n                        offset += scale(values[i].value) - y0;\r\n                    }\r\n                }\r\n            });\r\n            return offset;\r\n        };\r\n    };\r\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\r\n        var $$ = this,\r\n            shape = $$.d3.select(that),\r\n            isWithin;\r\n        if (!$$.isTargetToShow(d.id)) {\r\n            isWithin = false;\r\n        } else if (that.nodeName === 'circle') {\r\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\r\n        } else if (that.nodeName === 'path') {\r\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\r\n        }\r\n        return isWithin;\r\n    };\r\n\r\n    c3_chart_internal_fn.getInterpolate = function (d) {\r\n        var $$ = this,\r\n            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\r\n        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\r\n    };\r\n\r\n    c3_chart_internal_fn.initLine = function () {\r\n        var $$ = this;\r\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\r\n    };\r\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            mainLineUpdate,\r\n            mainLineEnter,\r\n            classChartLine = $$.classChartLine.bind($$),\r\n            classLines = $$.classLines.bind($$),\r\n            classAreas = $$.classAreas.bind($$),\r\n            classCircles = $$.classCircles.bind($$),\r\n            classFocus = $$.classFocus.bind($$);\r\n        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\r\n            return classChartLine(d) + classFocus(d);\r\n        });\r\n        mainLineEnter = mainLineUpdate.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\");\r\n        // Lines for each data\r\n        mainLineEnter.append('g').attr(\"class\", classLines);\r\n        // Areas\r\n        mainLineEnter.append('g').attr('class', classAreas);\r\n        // Circles for each data point on lines\r\n        mainLineEnter.append('g').attr(\"class\", function (d) {\r\n            return $$.generateClass(CLASS.selectedCircles, d.id);\r\n        });\r\n        mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\r\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\r\n        });\r\n        // Update date for selected circles\r\n        targets.forEach(function (t) {\r\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\r\n                d.value = t.values[d.index].value;\r\n            });\r\n        });\r\n        // MEMO: can not keep same color...\r\n        //mainLineUpdate.exit().remove();\r\n    };\r\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\r\n        var $$ = this;\r\n        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\r\n        $$.mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\r\n        $$.mainLine.style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\r\n            return $$.isStepType(d) ? 'crispEdges' : '';\r\n        }).attr('transform', null);\r\n        $$.mainLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\r\n    };\r\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\r\n        return [(withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\r\n    };\r\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            line = $$.d3.svg.line(),\r\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\r\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\r\n            xValue = function xValue(d) {\r\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\r\n        },\r\n            yValue = function yValue(d, i) {\r\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\r\n        };\r\n\r\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\r\n        if (!config.line_connectNull) {\r\n            line = line.defined(function (d) {\r\n                return d.value != null;\r\n            });\r\n        }\r\n        return function (d) {\r\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\r\n                x = isSub ? $$.subX : $$.x,\r\n                y = yScaleGetter.call($$, d.id),\r\n                x0 = 0,\r\n                y0 = 0,\r\n                path;\r\n            if ($$.isLineType(d)) {\r\n                if (config.data_regions[d.id]) {\r\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\r\n                } else {\r\n                    if ($$.isStepType(d)) {\r\n                        values = $$.convertValuesToStep(values);\r\n                    }\r\n                    path = line.interpolate($$.getInterpolate(d))(values);\r\n                }\r\n            } else {\r\n                if (values[0]) {\r\n                    x0 = x(values[0].x);\r\n                    y0 = y(values[0].value);\r\n                }\r\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\r\n            }\r\n            return path ? path : \"M 0 0\";\r\n        };\r\n    };\r\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\r\n        // partial duplication of generateGetBarPoints\r\n        var $$ = this,\r\n            config = $$.config,\r\n            lineTargetsNum = lineIndices.__max__ + 1,\r\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\r\n            y = $$.getShapeY(!!isSub),\r\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\r\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\r\n        return function (d, i) {\r\n            var y0 = yScale.call($$, d.id)(0),\r\n                offset = lineOffset(d, i) || y0,\r\n                // offset is for stacked area chart\r\n            posX = x(d),\r\n                posY = y(d);\r\n            // fix posY not to overflow opposite quadrant\r\n            if (config.axis_rotated) {\r\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\r\n                    posY = y0;\r\n                }\r\n            }\r\n            // 1 point that marks the line position\r\n            return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\r\n            [posX, posY - (y0 - offset)], // needed for compatibility\r\n            [posX, posY - (y0 - offset)] // needed for compatibility\r\n            ];\r\n        };\r\n    };\r\n\r\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            prev = -1,\r\n            i,\r\n            j,\r\n            s = \"M\",\r\n            sWithRegion,\r\n            xp,\r\n            yp,\r\n            dx,\r\n            dy,\r\n            dd,\r\n            diff,\r\n            diffx2,\r\n            xOffset = $$.isCategorized() ? 0.5 : 0,\r\n            xValue,\r\n            yValue,\r\n            regions = [];\r\n\r\n        function isWithinRegions(x, regions) {\r\n            var i;\r\n            for (i = 0; i < regions.length; i++) {\r\n                if (regions[i].start < x && x <= regions[i].end) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n        // Check start/end of regions\r\n        if (isDefined(_regions)) {\r\n            for (i = 0; i < _regions.length; i++) {\r\n                regions[i] = {};\r\n                if (isUndefined(_regions[i].start)) {\r\n                    regions[i].start = d[0].x;\r\n                } else {\r\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\r\n                }\r\n                if (isUndefined(_regions[i].end)) {\r\n                    regions[i].end = d[d.length - 1].x;\r\n                } else {\r\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set scales\r\n        xValue = config.axis_rotated ? function (d) {\r\n            return y(d.value);\r\n        } : function (d) {\r\n            return x(d.x);\r\n        };\r\n        yValue = config.axis_rotated ? function (d) {\r\n            return x(d.x);\r\n        } : function (d) {\r\n            return y(d.value);\r\n        };\r\n\r\n        // Define svg generator function for region\r\n        function generateM(points) {\r\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\r\n        }\r\n        if ($$.isTimeSeries()) {\r\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\r\n                var x0 = d0.x.getTime(),\r\n                    x_diff = d1.x - d0.x,\r\n                    xv0 = new Date(x0 + x_diff * j),\r\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\r\n                    points;\r\n                if (config.axis_rotated) {\r\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\r\n                } else {\r\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\r\n                }\r\n                return generateM(points);\r\n            };\r\n        } else {\r\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\r\n                var points;\r\n                if (config.axis_rotated) {\r\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\r\n                } else {\r\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\r\n                }\r\n                return generateM(points);\r\n            };\r\n        }\r\n\r\n        // Generate\r\n        for (i = 0; i < d.length; i++) {\r\n\r\n            // Draw as normal\r\n            if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\r\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\r\n            }\r\n            // Draw with region // TODO: Fix for horizotal charts\r\n            else {\r\n                    xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\r\n                    yp = $$.getScale(d[i - 1].value, d[i].value);\r\n\r\n                    dx = x(d[i].x) - x(d[i - 1].x);\r\n                    dy = y(d[i].value) - y(d[i - 1].value);\r\n                    dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\r\n                    diff = 2 / dd;\r\n                    diffx2 = diff * 2;\r\n\r\n                    for (j = diff; j <= 1; j += diffx2) {\r\n                        s += sWithRegion(d[i - 1], d[i], j, diff);\r\n                    }\r\n                }\r\n            prev = d[i].x;\r\n        }\r\n\r\n        return s;\r\n    };\r\n\r\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\r\n        var $$ = this,\r\n            d3 = $$.d3;\r\n        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\r\n        $$.mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\r\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\r\n        });\r\n        $$.mainArea.style(\"opacity\", $$.orgAreaOpacity);\r\n        $$.mainArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\r\n    };\r\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\r\n        return [(withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\r\n    };\r\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            area = $$.d3.svg.area(),\r\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\r\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\r\n            xValue = function xValue(d) {\r\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\r\n        },\r\n            value0 = function value0(d, i) {\r\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\r\n        },\r\n            value1 = function value1(d, i) {\r\n            return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\r\n        };\r\n\r\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\r\n        if (!config.line_connectNull) {\r\n            area = area.defined(function (d) {\r\n                return d.value !== null;\r\n            });\r\n        }\r\n\r\n        return function (d) {\r\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\r\n                x0 = 0,\r\n                y0 = 0,\r\n                path;\r\n            if ($$.isAreaType(d)) {\r\n                if ($$.isStepType(d)) {\r\n                    values = $$.convertValuesToStep(values);\r\n                }\r\n                path = area.interpolate($$.getInterpolate(d))(values);\r\n            } else {\r\n                if (values[0]) {\r\n                    x0 = $$.x(values[0].x);\r\n                    y0 = $$.getYScale(d.id)(values[0].value);\r\n                }\r\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\r\n            }\r\n            return path ? path : \"M 0 0\";\r\n        };\r\n    };\r\n    c3_chart_internal_fn.getAreaBaseValue = function () {\r\n        return 0;\r\n    };\r\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\r\n        // partial duplication of generateGetBarPoints\r\n        var $$ = this,\r\n            config = $$.config,\r\n            areaTargetsNum = areaIndices.__max__ + 1,\r\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\r\n            y = $$.getShapeY(!!isSub),\r\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\r\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\r\n        return function (d, i) {\r\n            var y0 = yScale.call($$, d.id)(0),\r\n                offset = areaOffset(d, i) || y0,\r\n                // offset is for stacked area chart\r\n            posX = x(d),\r\n                posY = y(d);\r\n            // fix posY not to overflow opposite quadrant\r\n            if (config.axis_rotated) {\r\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\r\n                    posY = y0;\r\n                }\r\n            }\r\n            // 1 point that marks the area position\r\n            return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\r\n            [posX, offset] // needed for compatibility\r\n            ];\r\n        };\r\n    };\r\n\r\n    c3_chart_internal_fn.updateCircle = function () {\r\n        var $$ = this;\r\n        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\r\n        $$.mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\r\n        $$.mainCircle.style(\"opacity\", $$.initialOpacityForCircle.bind($$));\r\n        $$.mainCircle.exit().remove();\r\n    };\r\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\r\n        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\r\n        return [(withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle).style('opacity', this.opacityForCircle.bind(this)).style(\"fill\", this.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\r\n    };\r\n    c3_chart_internal_fn.circleX = function (d) {\r\n        return d.x || d.x === 0 ? this.x(d.x) : null;\r\n    };\r\n    c3_chart_internal_fn.updateCircleY = function () {\r\n        var $$ = this,\r\n            lineIndices,\r\n            getPoints;\r\n        if ($$.config.data_groups.length > 0) {\r\n            lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\r\n            $$.circleY = function (d, i) {\r\n                return getPoints(d, i)[0][1];\r\n            };\r\n        } else {\r\n            $$.circleY = function (d) {\r\n                return $$.getYScale(d.id)(d.value);\r\n            };\r\n        }\r\n    };\r\n    c3_chart_internal_fn.getCircles = function (i, id) {\r\n        var $$ = this;\r\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\r\n    };\r\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\r\n        var $$ = this,\r\n            r = $$.pointExpandedR.bind($$);\r\n        if (reset) {\r\n            $$.unexpandCircles();\r\n        }\r\n        $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\r\n    };\r\n    c3_chart_internal_fn.unexpandCircles = function (i) {\r\n        var $$ = this,\r\n            r = $$.pointR.bind($$);\r\n        $$.getCircles(i).filter(function () {\r\n            return $$.d3.select(this).classed(CLASS.EXPANDED);\r\n        }).classed(CLASS.EXPANDED, false).attr('r', r);\r\n    };\r\n    c3_chart_internal_fn.pointR = function (d) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\r\n    };\r\n    c3_chart_internal_fn.pointExpandedR = function (d) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        if (config.point_focus_expand_enabled) {\r\n            return isFunction(config.point_focus_expand_r) ? config.point_focus_expand_r(d) : config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75;\r\n        } else {\r\n            return $$.pointR(d);\r\n        }\r\n    };\r\n    c3_chart_internal_fn.pointSelectR = function (d) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\r\n    };\r\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\r\n        var d3 = this.d3,\r\n            mouse = d3.mouse(that),\r\n            d3_this = d3.select(that),\r\n            cx = +d3_this.attr(\"cx\"),\r\n            cy = +d3_this.attr(\"cy\");\r\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\r\n    };\r\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\r\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\r\n    };\r\n\r\n    c3_chart_internal_fn.getCurrentWidth = function () {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        return config.size_width ? config.size_width : $$.getParentWidth();\r\n    };\r\n    c3_chart_internal_fn.getCurrentHeight = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            h = config.size_height ? config.size_height : $$.getParentHeight();\r\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\r\n    };\r\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\r\n        if ($$.title && $$.title.node()) {\r\n            padding += $$.getTitlePadding();\r\n        }\r\n        return padding;\r\n    };\r\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\r\n        var config = this.config;\r\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\r\n    };\r\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        if (isValue(config.padding_left)) {\r\n            return config.padding_left;\r\n        } else if (config.axis_rotated) {\r\n            return !config.axis_x_show || config.axis_x_inner ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\r\n        } else if (!config.axis_y_show || config.axis_y_inner) {\r\n            // && !config.axis_rotated\r\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\r\n        } else {\r\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\r\n        }\r\n    };\r\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            defaultPadding = 10,\r\n            legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\r\n        if (isValue(config.padding_right)) {\r\n            return config.padding_right + 1; // 1 is needed not to hide tick line\r\n        } else if (config.axis_rotated) {\r\n            return defaultPadding + legendWidthOnRight;\r\n        } else if (!config.axis_y2_show || config.axis_y2_inner) {\r\n            // && !config.axis_rotated\r\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\r\n        } else {\r\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\r\n        }\r\n    };\r\n\r\n    c3_chart_internal_fn.getParentRectValue = function (key) {\r\n        var parent = this.selectChart.node(),\r\n            v;\r\n        while (parent && parent.tagName !== 'BODY') {\r\n            try {\r\n                v = parent.getBoundingClientRect()[key];\r\n            } catch (e) {\r\n                if (key === 'width') {\r\n                    // In IE in certain cases getBoundingClientRect\r\n                    // will cause an \"unspecified error\"\r\n                    v = parent.offsetWidth;\r\n                }\r\n            }\r\n            if (v) {\r\n                break;\r\n            }\r\n            parent = parent.parentNode;\r\n        }\r\n        return v;\r\n    };\r\n    c3_chart_internal_fn.getParentWidth = function () {\r\n        return this.getParentRectValue('width');\r\n    };\r\n    c3_chart_internal_fn.getParentHeight = function () {\r\n        var h = this.selectChart.style('height');\r\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\r\n    };\r\n\r\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\r\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\r\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\r\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : { right: 0 },\r\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\r\n            hasArc = $$.hasArcType(),\r\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\r\n        return svgLeft > 0 ? svgLeft : 0;\r\n    };\r\n\r\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\r\n        var $$ = this,\r\n            position = $$.axis.getLabelPositionById(id);\r\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\r\n    };\r\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            h = 30;\r\n        if (axisId === 'x' && !config.axis_x_show) {\r\n            return 8;\r\n        }\r\n        if (axisId === 'x' && config.axis_x_height) {\r\n            return config.axis_x_height;\r\n        }\r\n        if (axisId === 'y' && !config.axis_y_show) {\r\n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\r\n        }\r\n        if (axisId === 'y2' && !config.axis_y2_show) {\r\n            return $$.rotated_padding_top;\r\n        }\r\n        // Calculate x axis height when tick rotated\r\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\r\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\r\n        }\r\n        // Calculate y axis height when tick rotated\r\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\r\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\r\n        }\r\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\r\n    };\r\n\r\n    c3_chart_internal_fn.getEventRectWidth = function () {\r\n        return Math.max(0, this.xAxis.tickInterval());\r\n    };\r\n\r\n    c3_chart_internal_fn.initBrush = function () {\r\n        var $$ = this,\r\n            d3 = $$.d3;\r\n        $$.brush = d3.svg.brush().on(\"brush\", function () {\r\n            $$.redrawForBrush();\r\n        });\r\n        $$.brush.update = function () {\r\n            if ($$.context) {\r\n                $$.context.select('.' + CLASS.brush).call(this);\r\n            }\r\n            return this;\r\n        };\r\n        $$.brush.scale = function (scale) {\r\n            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\r\n        };\r\n    };\r\n    c3_chart_internal_fn.initSubchart = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\r\n            visibility = config.subchart_show ? 'visible' : 'hidden';\r\n\r\n        context.style('visibility', visibility);\r\n\r\n        // Define g for chart area\r\n        context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart);\r\n\r\n        // Define g for bar chart area\r\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\r\n\r\n        // Define g for line chart area\r\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\r\n\r\n        // Add extent rect for Brush\r\n        context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush).call($$.brush);\r\n\r\n        // ATTENTION: This must be called AFTER chart added\r\n        // Add Axis\r\n        $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis).style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\r\n    };\r\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\r\n        var $$ = this,\r\n            context = $$.context,\r\n            config = $$.config,\r\n            contextLineEnter,\r\n            contextLineUpdate,\r\n            contextBarEnter,\r\n            contextBarUpdate,\r\n            classChartBar = $$.classChartBar.bind($$),\r\n            classBars = $$.classBars.bind($$),\r\n            classChartLine = $$.classChartLine.bind($$),\r\n            classLines = $$.classLines.bind($$),\r\n            classAreas = $$.classAreas.bind($$);\r\n\r\n        if (config.subchart_show) {\r\n            //-- Bar --//\r\n            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', classChartBar);\r\n            contextBarEnter = contextBarUpdate.enter().append('g').style('opacity', 0).attr('class', classChartBar);\r\n            // Bars for each data\r\n            contextBarEnter.append('g').attr(\"class\", classBars);\r\n\r\n            //-- Line --//\r\n            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', classChartLine);\r\n            contextLineEnter = contextLineUpdate.enter().append('g').style('opacity', 0).attr('class', classChartLine);\r\n            // Lines for each data\r\n            contextLineEnter.append(\"g\").attr(\"class\", classLines);\r\n            // Area\r\n            contextLineEnter.append(\"g\").attr(\"class\", classAreas);\r\n\r\n            //-- Brush --//\r\n            context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\r\n        }\r\n    };\r\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\r\n        var $$ = this;\r\n        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\r\n        $$.contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\r\n        $$.contextBar.style(\"opacity\", $$.initialOpacity.bind($$));\r\n        $$.contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\r\n    };\r\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\r\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\r\n    };\r\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\r\n        var $$ = this;\r\n        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\r\n        $$.contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\r\n        $$.contextLine.style(\"opacity\", $$.initialOpacity.bind($$));\r\n        $$.contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\r\n    };\r\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\r\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\r\n    };\r\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\r\n        var $$ = this,\r\n            d3 = $$.d3;\r\n        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\r\n        $$.contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\r\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\r\n        });\r\n        $$.contextArea.style(\"opacity\", 0);\r\n        $$.contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\r\n    };\r\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\r\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\r\n    };\r\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\r\n        var $$ = this,\r\n            d3 = $$.d3,\r\n            config = $$.config,\r\n            drawAreaOnSub,\r\n            drawBarOnSub,\r\n            drawLineOnSub;\r\n\r\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\r\n\r\n        // subchart\r\n        if (config.subchart_show) {\r\n            // reflect main chart to extent on subchart if zoomed\r\n            if (d3.event && d3.event.type === 'zoom') {\r\n                $$.brush.extent($$.x.orgDomain()).update();\r\n            }\r\n            // update subchart elements if needed\r\n            if (withSubchart) {\r\n\r\n                // extent rect\r\n                if (!$$.brush.empty()) {\r\n                    $$.brush.extent($$.x.orgDomain()).update();\r\n                }\r\n                // setup drawer - MEMO: this must be called after axis updated\r\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\r\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\r\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\r\n\r\n                $$.updateBarForSubchart(duration);\r\n                $$.updateLineForSubchart(duration);\r\n                $$.updateAreaForSubchart(duration);\r\n\r\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\r\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\r\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\r\n            }\r\n        }\r\n    };\r\n    c3_chart_internal_fn.redrawForBrush = function () {\r\n        var $$ = this,\r\n            x = $$.x;\r\n        $$.redraw({\r\n            withTransition: false,\r\n            withY: $$.config.zoom_rescale,\r\n            withSubchart: false,\r\n            withUpdateXDomain: true,\r\n            withDimension: false\r\n        });\r\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\r\n    };\r\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\r\n        var $$ = this,\r\n            subXAxis;\r\n        if (transitions && transitions.axisSubX) {\r\n            subXAxis = transitions.axisSubX;\r\n        } else {\r\n            subXAxis = $$.context.select('.' + CLASS.axisX);\r\n            if (withTransition) {\r\n                subXAxis = subXAxis.transition();\r\n            }\r\n        }\r\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\r\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\r\n    };\r\n    c3_chart_internal_fn.getDefaultExtent = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\r\n        if ($$.isTimeSeries()) {\r\n            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\r\n        }\r\n        return extent;\r\n    };\r\n\r\n    c3_chart_internal_fn.initText = function () {\r\n        var $$ = this;\r\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\r\n        $$.mainText = $$.d3.selectAll([]);\r\n    };\r\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\r\n        var $$ = this,\r\n            mainTextUpdate,\r\n            mainTextEnter,\r\n            classChartText = $$.classChartText.bind($$),\r\n            classTexts = $$.classTexts.bind($$),\r\n            classFocus = $$.classFocus.bind($$);\r\n        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets).attr('class', function (d) {\r\n            return classChartText(d) + classFocus(d);\r\n        });\r\n        mainTextEnter = mainTextUpdate.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\r\n        mainTextEnter.append('g').attr('class', classTexts);\r\n    };\r\n    c3_chart_internal_fn.updateText = function (durationForExit) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            barOrLineData = $$.barOrLineData.bind($$),\r\n            classText = $$.classText.bind($$);\r\n        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\r\n        $$.mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\r\n            return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\r\n        }).style(\"stroke\", 'none').style(\"fill\", function (d) {\r\n            return $$.color(d);\r\n        }).style(\"fill-opacity\", 0);\r\n        $$.mainText.text(function (d, i, j) {\r\n            return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\r\n        });\r\n        $$.mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\r\n    };\r\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\r\n        return [(withTransition ? this.mainText.transition() : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\r\n    };\r\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\r\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\r\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\r\n            font = this.d3.select(element).style('font'),\r\n            rect;\r\n        svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\r\n            rect = this.getBoundingClientRect();\r\n        });\r\n        dummy.remove();\r\n        return rect;\r\n    };\r\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\r\n        var $$ = this,\r\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\r\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\r\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\r\n            getter = forX ? $$.getXForText : $$.getYForText;\r\n        return function (d, i) {\r\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\r\n            return getter.call($$, getPoints(d, i), d, this);\r\n        };\r\n    };\r\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\r\n        var $$ = this,\r\n            box = textElement.getBoundingClientRect(),\r\n            xPos,\r\n            padding;\r\n        if ($$.config.axis_rotated) {\r\n            padding = $$.isBarType(d) ? 4 : 6;\r\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\r\n        } else {\r\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\r\n        }\r\n        // show labels regardless of the domain if value is null\r\n        if (d.value === null) {\r\n            if (xPos > $$.width) {\r\n                xPos = $$.width - box.width;\r\n            } else if (xPos < 0) {\r\n                xPos = 4;\r\n            }\r\n        }\r\n        return xPos;\r\n    };\r\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\r\n        var $$ = this,\r\n            box = textElement.getBoundingClientRect(),\r\n            yPos;\r\n        if ($$.config.axis_rotated) {\r\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\r\n        } else {\r\n            yPos = points[2][1];\r\n            if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\r\n                yPos += box.height;\r\n                if ($$.isBarType(d) && $$.isSafari()) {\r\n                    yPos -= 3;\r\n                } else if (!$$.isBarType(d) && $$.isChrome()) {\r\n                    yPos += 3;\r\n                }\r\n            } else {\r\n                yPos += $$.isBarType(d) ? -3 : -6;\r\n            }\r\n        }\r\n        // show labels regardless of the domain if value is null\r\n        if (d.value === null && !$$.config.axis_rotated) {\r\n            if (yPos < box.height) {\r\n                yPos = box.height;\r\n            } else if (yPos > this.height) {\r\n                yPos = this.height - 4;\r\n            }\r\n        }\r\n        return yPos;\r\n    };\r\n\r\n    c3_chart_internal_fn.initTitle = function () {\r\n        var $$ = this;\r\n        $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\r\n    };\r\n    c3_chart_internal_fn.redrawTitle = function () {\r\n        var $$ = this;\r\n        $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\r\n    };\r\n    c3_chart_internal_fn.xForTitle = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            position = config.title_position || 'left',\r\n            x;\r\n        if (position.indexOf('right') >= 0) {\r\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\r\n        } else if (position.indexOf('center') >= 0) {\r\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\r\n        } else {\r\n            // left\r\n            x = config.title_padding.left;\r\n        }\r\n        return x;\r\n    };\r\n    c3_chart_internal_fn.yForTitle = function () {\r\n        var $$ = this;\r\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\r\n    };\r\n    c3_chart_internal_fn.getTitlePadding = function () {\r\n        var $$ = this;\r\n        return $$.yForTitle() + $$.config.title_padding.bottom;\r\n    };\r\n\r\n    c3_chart_internal_fn.initTooltip = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            i;\r\n        $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\");\r\n        // Show tooltip if needed\r\n        if (config.tooltip_init_show) {\r\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\r\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\r\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\r\n                    if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\r\n                        break;\r\n                    }\r\n                }\r\n                config.tooltip_init_x = i;\r\n            }\r\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\r\n                return $$.addName(d.values[config.tooltip_init_x]);\r\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\r\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\r\n        }\r\n    };\r\n    c3_chart_internal_fn.getTooltipSortFunction = function () {\r\n        var $$ = this,\r\n            config = $$.config;\r\n\r\n        if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\r\n            // if data are not grouped or if an order is specified\r\n            // for the tooltip values we sort them by their values\r\n\r\n            var order = config.tooltip_order;\r\n            if (order === undefined) {\r\n                order = config.data_order;\r\n            }\r\n\r\n            var valueOf = function valueOf(obj) {\r\n                return obj ? obj.value : null;\r\n            };\r\n\r\n            // if data are not grouped, we sort them by their value\r\n            if (isString(order) && order.toLowerCase() === 'asc') {\r\n                return function (a, b) {\r\n                    return valueOf(a) - valueOf(b);\r\n                };\r\n            } else if (isString(order) && order.toLowerCase() === 'desc') {\r\n                return function (a, b) {\r\n                    return valueOf(b) - valueOf(a);\r\n                };\r\n            } else if (isFunction(order)) {\r\n\r\n                // if the function is from data_order we need\r\n                // to wrap the returned function in order to format\r\n                // the sorted value to the expected format\r\n\r\n                var sortFunction = order;\r\n\r\n                if (config.tooltip_order === undefined) {\r\n                    sortFunction = function sortFunction(a, b) {\r\n                        return order(a ? {\r\n                            id: a.id,\r\n                            values: [a]\r\n                        } : null, b ? {\r\n                            id: b.id,\r\n                            values: [b]\r\n                        } : null);\r\n                    };\r\n                }\r\n\r\n                return sortFunction;\r\n            } else if (isArray(order)) {\r\n                return function (a, b) {\r\n                    return order.indexOf(a.id) - order.indexOf(b.id);\r\n                };\r\n            }\r\n        } else {\r\n            // if data are grouped, we follow the order of grouped targets\r\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\r\n                return i.id;\r\n            });\r\n\r\n            // if it was either asc or desc we need to invert the order\r\n            // returned by orderTargets\r\n            if ($$.isOrderAsc() || $$.isOrderDesc()) {\r\n                ids = ids.reverse();\r\n            }\r\n\r\n            return function (a, b) {\r\n                return ids.indexOf(a.id) - ids.indexOf(b.id);\r\n            };\r\n        }\r\n    };\r\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\r\n            nameFormat = config.tooltip_format_name || function (name) {\r\n            return name;\r\n        },\r\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\r\n            text,\r\n            i,\r\n            title,\r\n            value,\r\n            name,\r\n            bgcolor;\r\n\r\n        var tooltipSortFunction = this.getTooltipSortFunction();\r\n        if (tooltipSortFunction) {\r\n            d.sort(tooltipSortFunction);\r\n        }\r\n\r\n        for (i = 0; i < d.length; i++) {\r\n            if (!(d[i] && (d[i].value || d[i].value === 0))) {\r\n                continue;\r\n            }\r\n\r\n            if (!text) {\r\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\r\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\r\n            }\r\n\r\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\r\n            if (value !== undefined) {\r\n                // Skip elements when their name is set to null\r\n                if (d[i].name === null) {\r\n                    continue;\r\n                }\r\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\r\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\r\n\r\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\r\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\r\n                text += \"<td class='value'>\" + value + \"</td>\";\r\n                text += \"</tr>\";\r\n            }\r\n        }\r\n        return text + \"</table>\";\r\n    };\r\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            d3 = $$.d3;\r\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\r\n        var forArc = $$.hasArcType(),\r\n            mouse = d3.mouse(element);\r\n        // Determin tooltip position\r\n        if (forArc) {\r\n            tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\r\n            tooltipTop = ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;\r\n        } else {\r\n            svgLeft = $$.getSvgLeft(true);\r\n            if (config.axis_rotated) {\r\n                tooltipLeft = svgLeft + mouse[0] + 100;\r\n                tooltipRight = tooltipLeft + tWidth;\r\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\r\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\r\n            } else {\r\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\r\n                tooltipRight = tooltipLeft + tWidth;\r\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\r\n                tooltipTop = mouse[1] + 15;\r\n            }\r\n\r\n            if (tooltipRight > chartRight) {\r\n                // 20 is needed for Firefox to keep tooltip width\r\n                tooltipLeft -= tooltipRight - chartRight + 20;\r\n            }\r\n            if (tooltipTop + tHeight > $$.currentHeight) {\r\n                tooltipTop -= tHeight + 30;\r\n            }\r\n        }\r\n        if (tooltipTop < 0) {\r\n            tooltipTop = 0;\r\n        }\r\n        return { top: tooltipTop, left: tooltipLeft };\r\n    };\r\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        var tWidth, tHeight, position;\r\n        var forArc = $$.hasArcType(),\r\n            dataToShow = selectedData.filter(function (d) {\r\n            return d && isValue(d.value);\r\n        }),\r\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\r\n        if (dataToShow.length === 0 || !config.tooltip_show) {\r\n            return;\r\n        }\r\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\r\n\r\n        // Get tooltip dimensions\r\n        tWidth = $$.tooltip.property('offsetWidth');\r\n        tHeight = $$.tooltip.property('offsetHeight');\r\n\r\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\r\n        // Set tooltip\r\n        $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\r\n    };\r\n    c3_chart_internal_fn.hideTooltip = function () {\r\n        this.tooltip.style(\"display\", \"none\");\r\n    };\r\n\r\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\r\n        var $$ = this,\r\n            config = $$.config;\r\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\r\n            $$.withoutFadeIn[id] = type === config.data_types[id];\r\n            config.data_types[id] = type;\r\n        });\r\n        if (!targetIds) {\r\n            config.data_type = type;\r\n        }\r\n    };\r\n    c3_chart_internal_fn.hasType = function (type, targets) {\r\n        var $$ = this,\r\n            types = $$.config.data_types,\r\n            has = false;\r\n        targets = targets || $$.data.targets;\r\n        if (targets && targets.length) {\r\n            targets.forEach(function (target) {\r\n                var t = types[target.id];\r\n                if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\r\n                    has = true;\r\n                }\r\n            });\r\n        } else if (Object.keys(types).length) {\r\n            Object.keys(types).forEach(function (id) {\r\n                if (types[id] === type) {\r\n                    has = true;\r\n                }\r\n            });\r\n        } else {\r\n            has = $$.config.data_type === type;\r\n        }\r\n        return has;\r\n    };\r\n    c3_chart_internal_fn.hasArcType = function (targets) {\r\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\r\n    };\r\n    c3_chart_internal_fn.isLineType = function (d) {\r\n        var config = this.config,\r\n            id = isString(d) ? d : d.id;\r\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\r\n    };\r\n    c3_chart_internal_fn.isStepType = function (d) {\r\n        var id = isString(d) ? d : d.id;\r\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\r\n    };\r\n    c3_chart_internal_fn.isSplineType = function (d) {\r\n        var id = isString(d) ? d : d.id;\r\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\r\n    };\r\n    c3_chart_internal_fn.isAreaType = function (d) {\r\n        var id = isString(d) ? d : d.id;\r\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\r\n    };\r\n    c3_chart_internal_fn.isBarType = function (d) {\r\n        var id = isString(d) ? d : d.id;\r\n        return this.config.data_types[id] === 'bar';\r\n    };\r\n    c3_chart_internal_fn.isScatterType = function (d) {\r\n        var id = isString(d) ? d : d.id;\r\n        return this.config.data_types[id] === 'scatter';\r\n    };\r\n    c3_chart_internal_fn.isPieType = function (d) {\r\n        var id = isString(d) ? d : d.id;\r\n        return this.config.data_types[id] === 'pie';\r\n    };\r\n    c3_chart_internal_fn.isGaugeType = function (d) {\r\n        var id = isString(d) ? d : d.id;\r\n        return this.config.data_types[id] === 'gauge';\r\n    };\r\n    c3_chart_internal_fn.isDonutType = function (d) {\r\n        var id = isString(d) ? d : d.id;\r\n        return this.config.data_types[id] === 'donut';\r\n    };\r\n    c3_chart_internal_fn.isArcType = function (d) {\r\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\r\n    };\r\n    c3_chart_internal_fn.lineData = function (d) {\r\n        return this.isLineType(d) ? [d] : [];\r\n    };\r\n    c3_chart_internal_fn.arcData = function (d) {\r\n        return this.isArcType(d.data) ? [d] : [];\r\n    };\r\n    /* not used\r\n     function scatterData(d) {\r\n     return isScatterType(d) ? d.values : [];\r\n     }\r\n     */\r\n    c3_chart_internal_fn.barData = function (d) {\r\n        return this.isBarType(d) ? d.values : [];\r\n    };\r\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\r\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\r\n    };\r\n    c3_chart_internal_fn.barOrLineData = function (d) {\r\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\r\n    };\r\n    c3_chart_internal_fn.isInterpolationType = function (type) {\r\n        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\r\n    };\r\n\r\n    c3_chart_internal_fn.isSafari = function () {\r\n        var ua = window.navigator.userAgent;\r\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\r\n    };\r\n    c3_chart_internal_fn.isChrome = function () {\r\n        var ua = window.navigator.userAgent;\r\n        return ua.indexOf('Chrome') >= 0;\r\n    };\r\n\r\n    c3_chart_internal_fn.initZoom = function () {\r\n        var $$ = this,\r\n            d3 = $$.d3,\r\n            config = $$.config,\r\n            startEvent;\r\n\r\n        $$.zoom = d3.behavior.zoom().on(\"zoomstart\", function () {\r\n            startEvent = d3.event.sourceEvent;\r\n            $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\r\n            config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\r\n        }).on(\"zoom\", function () {\r\n            $$.redrawForZoom.call($$);\r\n        }).on('zoomend', function () {\r\n            var event = d3.event.sourceEvent;\r\n            // if click, do nothing. otherwise, click interaction will be canceled.\r\n            if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\r\n                return;\r\n            }\r\n            $$.redrawEventRect();\r\n            $$.updateZoom();\r\n            config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\r\n        });\r\n        $$.zoom.scale = function (scale) {\r\n            return config.axis_rotated ? this.y(scale) : this.x(scale);\r\n        };\r\n        $$.zoom.orgScaleExtent = function () {\r\n            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\r\n            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\r\n        };\r\n        $$.zoom.updateScaleExtent = function () {\r\n            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\r\n                extent = this.orgScaleExtent();\r\n            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\r\n            return this;\r\n        };\r\n    };\r\n    c3_chart_internal_fn.getZoomDomain = function () {\r\n        var $$ = this,\r\n            config = $$.config,\r\n            d3 = $$.d3,\r\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\r\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\r\n        return [min, max];\r\n    };\r\n    c3_chart_internal_fn.updateZoom = function () {\r\n        var $$ = this,\r\n            z = $$.config.zoom_enabled ? $$.zoom : function () {};\r\n        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\r\n        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\r\n    };\r\n    c3_chart_internal_fn.redrawForZoom = function () {\r\n        var $$ = this,\r\n            d3 = $$.d3,\r\n            config = $$.config,\r\n            zoom = $$.zoom,\r\n            x = $$.x;\r\n        if (!config.zoom_enabled) {\r\n            return;\r\n        }\r\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\r\n            return;\r\n        }\r\n        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\r\n            x.domain(zoom.altDomain);\r\n            zoom.scale(x).updateScaleExtent();\r\n            return;\r\n        }\r\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\r\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\r\n        }\r\n        $$.redraw({\r\n            withTransition: false,\r\n            withY: config.zoom_rescale,\r\n            withSubchart: false,\r\n            withEventRect: false,\r\n            withDimension: false\r\n        });\r\n        if (d3.event.sourceEvent.type === 'mousemove') {\r\n            $$.cancelClick = true;\r\n        }\r\n        config.zoom_onzoom.call($$.api, x.orgDomain());\r\n    };\r\n\r\n    return c3;\r\n\r\n})));\r\n","!function() {\r\n  var d3 = {\r\n    version: \"3.5.17\"\r\n  };\r\n  var d3_arraySlice = [].slice, d3_array = function(list) {\r\n    return d3_arraySlice.call(list);\r\n  };\r\n  var d3_document = this.document;\r\n  function d3_documentElement(node) {\r\n    return node && (node.ownerDocument || node.document || node).documentElement;\r\n  }\r\n  function d3_window(node) {\r\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\r\n  }\r\n  if (d3_document) {\r\n    try {\r\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\r\n    } catch (e) {\r\n      d3_array = function(list) {\r\n        var i = list.length, array = new Array(i);\r\n        while (i--) array[i] = list[i];\r\n        return array;\r\n      };\r\n    }\r\n  }\r\n  if (!Date.now) Date.now = function() {\r\n    return +new Date();\r\n  };\r\n  if (d3_document) {\r\n    try {\r\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\r\n    } catch (error) {\r\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\r\n      d3_element_prototype.setAttribute = function(name, value) {\r\n        d3_element_setAttribute.call(this, name, value + \"\");\r\n      };\r\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\r\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\r\n      };\r\n      d3_style_prototype.setProperty = function(name, value, priority) {\r\n        d3_style_setProperty.call(this, name, value + \"\", priority);\r\n      };\r\n    }\r\n  }\r\n  d3.ascending = d3_ascending;\r\n  function d3_ascending(a, b) {\r\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\r\n  }\r\n  d3.descending = function(a, b) {\r\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\r\n  };\r\n  d3.min = function(array, f) {\r\n    var i = -1, n = array.length, a, b;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\r\n        a = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\r\n    } else {\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\r\n        a = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\r\n    }\r\n    return a;\r\n  };\r\n  d3.max = function(array, f) {\r\n    var i = -1, n = array.length, a, b;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\r\n        a = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\r\n    } else {\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\r\n        a = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\r\n    }\r\n    return a;\r\n  };\r\n  d3.extent = function(array, f) {\r\n    var i = -1, n = array.length, a, b, c;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\r\n        a = c = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = array[i]) != null) {\r\n        if (a > b) a = b;\r\n        if (c < b) c = b;\r\n      }\r\n    } else {\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\r\n        a = c = b;\r\n        break;\r\n      }\r\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\r\n        if (a > b) a = b;\r\n        if (c < b) c = b;\r\n      }\r\n    }\r\n    return [ a, c ];\r\n  };\r\n  function d3_number(x) {\r\n    return x === null ? NaN : +x;\r\n  }\r\n  function d3_numeric(x) {\r\n    return !isNaN(x);\r\n  }\r\n  d3.sum = function(array, f) {\r\n    var s = 0, n = array.length, a, i = -1;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\r\n    } else {\r\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\r\n    }\r\n    return s;\r\n  };\r\n  d3.mean = function(array, f) {\r\n    var s = 0, n = array.length, a, i = -1, j = n;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\r\n    } else {\r\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\r\n    }\r\n    if (j) return s / j;\r\n  };\r\n  d3.quantile = function(values, p) {\r\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\r\n    return e ? v + e * (values[h] - v) : v;\r\n  };\r\n  d3.median = function(array, f) {\r\n    var numbers = [], n = array.length, a, i = -1;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\r\n    } else {\r\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\r\n    }\r\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\r\n  };\r\n  d3.variance = function(array, f) {\r\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\r\n    if (arguments.length === 1) {\r\n      while (++i < n) {\r\n        if (d3_numeric(a = d3_number(array[i]))) {\r\n          d = a - m;\r\n          m += d / ++j;\r\n          s += d * (a - m);\r\n        }\r\n      }\r\n    } else {\r\n      while (++i < n) {\r\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\r\n          d = a - m;\r\n          m += d / ++j;\r\n          s += d * (a - m);\r\n        }\r\n      }\r\n    }\r\n    if (j > 1) return s / (j - 1);\r\n  };\r\n  d3.deviation = function() {\r\n    var v = d3.variance.apply(this, arguments);\r\n    return v ? Math.sqrt(v) : v;\r\n  };\r\n  function d3_bisector(compare) {\r\n    return {\r\n      left: function(a, x, lo, hi) {\r\n        if (arguments.length < 3) lo = 0;\r\n        if (arguments.length < 4) hi = a.length;\r\n        while (lo < hi) {\r\n          var mid = lo + hi >>> 1;\r\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\r\n        }\r\n        return lo;\r\n      },\r\n      right: function(a, x, lo, hi) {\r\n        if (arguments.length < 3) lo = 0;\r\n        if (arguments.length < 4) hi = a.length;\r\n        while (lo < hi) {\r\n          var mid = lo + hi >>> 1;\r\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\r\n        }\r\n        return lo;\r\n      }\r\n    };\r\n  }\r\n  var d3_bisect = d3_bisector(d3_ascending);\r\n  d3.bisectLeft = d3_bisect.left;\r\n  d3.bisect = d3.bisectRight = d3_bisect.right;\r\n  d3.bisector = function(f) {\r\n    return d3_bisector(f.length === 1 ? function(d, x) {\r\n      return d3_ascending(f(d), x);\r\n    } : f);\r\n  };\r\n  d3.shuffle = function(array, i0, i1) {\r\n    if ((m = arguments.length) < 3) {\r\n      i1 = array.length;\r\n      if (m < 2) i0 = 0;\r\n    }\r\n    var m = i1 - i0, t, i;\r\n    while (m) {\r\n      i = Math.random() * m-- | 0;\r\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\r\n    }\r\n    return array;\r\n  };\r\n  d3.permute = function(array, indexes) {\r\n    var i = indexes.length, permutes = new Array(i);\r\n    while (i--) permutes[i] = array[indexes[i]];\r\n    return permutes;\r\n  };\r\n  d3.pairs = function(array) {\r\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\r\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\r\n    return pairs;\r\n  };\r\n  d3.transpose = function(matrix) {\r\n    if (!(n = matrix.length)) return [];\r\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\r\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\r\n        row[j] = matrix[j][i];\r\n      }\r\n    }\r\n    return transpose;\r\n  };\r\n  function d3_transposeLength(d) {\r\n    return d.length;\r\n  }\r\n  d3.zip = function() {\r\n    return d3.transpose(arguments);\r\n  };\r\n  d3.keys = function(map) {\r\n    var keys = [];\r\n    for (var key in map) keys.push(key);\r\n    return keys;\r\n  };\r\n  d3.values = function(map) {\r\n    var values = [];\r\n    for (var key in map) values.push(map[key]);\r\n    return values;\r\n  };\r\n  d3.entries = function(map) {\r\n    var entries = [];\r\n    for (var key in map) entries.push({\r\n      key: key,\r\n      value: map[key]\r\n    });\r\n    return entries;\r\n  };\r\n  d3.merge = function(arrays) {\r\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\r\n    while (++i < n) j += arrays[i].length;\r\n    merged = new Array(j);\r\n    while (--n >= 0) {\r\n      array = arrays[n];\r\n      m = array.length;\r\n      while (--m >= 0) {\r\n        merged[--j] = array[m];\r\n      }\r\n    }\r\n    return merged;\r\n  };\r\n  var abs = Math.abs;\r\n  d3.range = function(start, stop, step) {\r\n    if (arguments.length < 3) {\r\n      step = 1;\r\n      if (arguments.length < 2) {\r\n        stop = start;\r\n        start = 0;\r\n      }\r\n    }\r\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\r\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\r\n    start *= k, stop *= k, step *= k;\r\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\r\n    return range;\r\n  };\r\n  function d3_range_integerScale(x) {\r\n    var k = 1;\r\n    while (x * k % 1) k *= 10;\r\n    return k;\r\n  }\r\n  function d3_class(ctor, properties) {\r\n    for (var key in properties) {\r\n      Object.defineProperty(ctor.prototype, key, {\r\n        value: properties[key],\r\n        enumerable: false\r\n      });\r\n    }\r\n  }\r\n  d3.map = function(object, f) {\r\n    var map = new d3_Map();\r\n    if (object instanceof d3_Map) {\r\n      object.forEach(function(key, value) {\r\n        map.set(key, value);\r\n      });\r\n    } else if (Array.isArray(object)) {\r\n      var i = -1, n = object.length, o;\r\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\r\n    } else {\r\n      for (var key in object) map.set(key, object[key]);\r\n    }\r\n    return map;\r\n  };\r\n  function d3_Map() {\r\n    this._ = Object.create(null);\r\n  }\r\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\r\n  d3_class(d3_Map, {\r\n    has: d3_map_has,\r\n    get: function(key) {\r\n      return this._[d3_map_escape(key)];\r\n    },\r\n    set: function(key, value) {\r\n      return this._[d3_map_escape(key)] = value;\r\n    },\r\n    remove: d3_map_remove,\r\n    keys: d3_map_keys,\r\n    values: function() {\r\n      var values = [];\r\n      for (var key in this._) values.push(this._[key]);\r\n      return values;\r\n    },\r\n    entries: function() {\r\n      var entries = [];\r\n      for (var key in this._) entries.push({\r\n        key: d3_map_unescape(key),\r\n        value: this._[key]\r\n      });\r\n      return entries;\r\n    },\r\n    size: d3_map_size,\r\n    empty: d3_map_empty,\r\n    forEach: function(f) {\r\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\r\n    }\r\n  });\r\n  function d3_map_escape(key) {\r\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\r\n  }\r\n  function d3_map_unescape(key) {\r\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\r\n  }\r\n  function d3_map_has(key) {\r\n    return d3_map_escape(key) in this._;\r\n  }\r\n  function d3_map_remove(key) {\r\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\r\n  }\r\n  function d3_map_keys() {\r\n    var keys = [];\r\n    for (var key in this._) keys.push(d3_map_unescape(key));\r\n    return keys;\r\n  }\r\n  function d3_map_size() {\r\n    var size = 0;\r\n    for (var key in this._) ++size;\r\n    return size;\r\n  }\r\n  function d3_map_empty() {\r\n    for (var key in this._) return false;\r\n    return true;\r\n  }\r\n  d3.nest = function() {\r\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\r\n    function map(mapType, array, depth) {\r\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\r\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\r\n      while (++i < n) {\r\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\r\n          values.push(object);\r\n        } else {\r\n          valuesByKey.set(keyValue, [ object ]);\r\n        }\r\n      }\r\n      if (mapType) {\r\n        object = mapType();\r\n        setter = function(keyValue, values) {\r\n          object.set(keyValue, map(mapType, values, depth));\r\n        };\r\n      } else {\r\n        object = {};\r\n        setter = function(keyValue, values) {\r\n          object[keyValue] = map(mapType, values, depth);\r\n        };\r\n      }\r\n      valuesByKey.forEach(setter);\r\n      return object;\r\n    }\r\n    function entries(map, depth) {\r\n      if (depth >= keys.length) return map;\r\n      var array = [], sortKey = sortKeys[depth++];\r\n      map.forEach(function(key, keyMap) {\r\n        array.push({\r\n          key: key,\r\n          values: entries(keyMap, depth)\r\n        });\r\n      });\r\n      return sortKey ? array.sort(function(a, b) {\r\n        return sortKey(a.key, b.key);\r\n      }) : array;\r\n    }\r\n    nest.map = function(array, mapType) {\r\n      return map(mapType, array, 0);\r\n    };\r\n    nest.entries = function(array) {\r\n      return entries(map(d3.map, array, 0), 0);\r\n    };\r\n    nest.key = function(d) {\r\n      keys.push(d);\r\n      return nest;\r\n    };\r\n    nest.sortKeys = function(order) {\r\n      sortKeys[keys.length - 1] = order;\r\n      return nest;\r\n    };\r\n    nest.sortValues = function(order) {\r\n      sortValues = order;\r\n      return nest;\r\n    };\r\n    nest.rollup = function(f) {\r\n      rollup = f;\r\n      return nest;\r\n    };\r\n    return nest;\r\n  };\r\n  d3.set = function(array) {\r\n    var set = new d3_Set();\r\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\r\n    return set;\r\n  };\r\n  function d3_Set() {\r\n    this._ = Object.create(null);\r\n  }\r\n  d3_class(d3_Set, {\r\n    has: d3_map_has,\r\n    add: function(key) {\r\n      this._[d3_map_escape(key += \"\")] = true;\r\n      return key;\r\n    },\r\n    remove: d3_map_remove,\r\n    values: d3_map_keys,\r\n    size: d3_map_size,\r\n    empty: d3_map_empty,\r\n    forEach: function(f) {\r\n      for (var key in this._) f.call(this, d3_map_unescape(key));\r\n    }\r\n  });\r\n  d3.behavior = {};\r\n  function d3_identity(d) {\r\n    return d;\r\n  }\r\n  d3.rebind = function(target, source) {\r\n    var i = 1, n = arguments.length, method;\r\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\r\n    return target;\r\n  };\r\n  function d3_rebind(target, source, method) {\r\n    return function() {\r\n      var value = method.apply(source, arguments);\r\n      return value === source ? target : value;\r\n    };\r\n  }\r\n  function d3_vendorSymbol(object, name) {\r\n    if (name in object) return name;\r\n    name = name.charAt(0).toUpperCase() + name.slice(1);\r\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\r\n      var prefixName = d3_vendorPrefixes[i] + name;\r\n      if (prefixName in object) return prefixName;\r\n    }\r\n  }\r\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\r\n  function d3_noop() {}\r\n  d3.dispatch = function() {\r\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\r\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\r\n    return dispatch;\r\n  };\r\n  function d3_dispatch() {}\r\n  d3_dispatch.prototype.on = function(type, listener) {\r\n    var i = type.indexOf(\".\"), name = \"\";\r\n    if (i >= 0) {\r\n      name = type.slice(i + 1);\r\n      type = type.slice(0, i);\r\n    }\r\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\r\n    if (arguments.length === 2) {\r\n      if (listener == null) for (type in this) {\r\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\r\n      }\r\n      return this;\r\n    }\r\n  };\r\n  function d3_dispatch_event(dispatch) {\r\n    var listeners = [], listenerByName = new d3_Map();\r\n    function event() {\r\n      var z = listeners, i = -1, n = z.length, l;\r\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\r\n      return dispatch;\r\n    }\r\n    event.on = function(name, listener) {\r\n      var l = listenerByName.get(name), i;\r\n      if (arguments.length < 2) return l && l.on;\r\n      if (l) {\r\n        l.on = null;\r\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\r\n        listenerByName.remove(name);\r\n      }\r\n      if (listener) listeners.push(listenerByName.set(name, {\r\n        on: listener\r\n      }));\r\n      return dispatch;\r\n    };\r\n    return event;\r\n  }\r\n  d3.event = null;\r\n  function d3_eventPreventDefault() {\r\n    d3.event.preventDefault();\r\n  }\r\n  function d3_eventSource() {\r\n    var e = d3.event, s;\r\n    while (s = e.sourceEvent) e = s;\r\n    return e;\r\n  }\r\n  function d3_eventDispatch(target) {\r\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\r\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\r\n    dispatch.of = function(thiz, argumentz) {\r\n      return function(e1) {\r\n        try {\r\n          var e0 = e1.sourceEvent = d3.event;\r\n          e1.target = target;\r\n          d3.event = e1;\r\n          dispatch[e1.type].apply(thiz, argumentz);\r\n        } finally {\r\n          d3.event = e0;\r\n        }\r\n      };\r\n    };\r\n    return dispatch;\r\n  }\r\n  d3.requote = function(s) {\r\n    return s.replace(d3_requote_re, \"\\\\$&\");\r\n  };\r\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\r\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\r\n    object.__proto__ = prototype;\r\n  } : function(object, prototype) {\r\n    for (var property in prototype) object[property] = prototype[property];\r\n  };\r\n  function d3_selection(groups) {\r\n    d3_subclass(groups, d3_selectionPrototype);\r\n    return groups;\r\n  }\r\n  var d3_select = function(s, n) {\r\n    return n.querySelector(s);\r\n  }, d3_selectAll = function(s, n) {\r\n    return n.querySelectorAll(s);\r\n  }, d3_selectMatches = function(n, s) {\r\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\r\n    d3_selectMatches = function(n, s) {\r\n      return d3_selectMatcher.call(n, s);\r\n    };\r\n    return d3_selectMatches(n, s);\r\n  };\r\n  if (typeof Sizzle === \"function\") {\r\n    d3_select = function(s, n) {\r\n      return Sizzle(s, n)[0] || null;\r\n    };\r\n    d3_selectAll = Sizzle;\r\n    d3_selectMatches = Sizzle.matchesSelector;\r\n  }\r\n  d3.selection = function() {\r\n    return d3.select(d3_document.documentElement);\r\n  };\r\n  var d3_selectionPrototype = d3.selection.prototype = [];\r\n  d3_selectionPrototype.select = function(selector) {\r\n    var subgroups = [], subgroup, subnode, group, node;\r\n    selector = d3_selection_selector(selector);\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      subgroups.push(subgroup = []);\r\n      subgroup.parentNode = (group = this[j]).parentNode;\r\n      for (var i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) {\r\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\r\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\r\n        } else {\r\n          subgroup.push(null);\r\n        }\r\n      }\r\n    }\r\n    return d3_selection(subgroups);\r\n  };\r\n  function d3_selection_selector(selector) {\r\n    return typeof selector === \"function\" ? selector : function() {\r\n      return d3_select(selector, this);\r\n    };\r\n  }\r\n  d3_selectionPrototype.selectAll = function(selector) {\r\n    var subgroups = [], subgroup, node;\r\n    selector = d3_selection_selectorAll(selector);\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) {\r\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\r\n          subgroup.parentNode = node;\r\n        }\r\n      }\r\n    }\r\n    return d3_selection(subgroups);\r\n  };\r\n  function d3_selection_selectorAll(selector) {\r\n    return typeof selector === \"function\" ? selector : function() {\r\n      return d3_selectAll(selector, this);\r\n    };\r\n  }\r\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\r\n  var d3_nsPrefix = {\r\n    svg: \"http://www.w3.org/2000/svg\",\r\n    xhtml: d3_nsXhtml,\r\n    xlink: \"http://www.w3.org/1999/xlink\",\r\n    xml: \"http://www.w3.org/XML/1998/namespace\",\r\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\r\n  };\r\n  d3.ns = {\r\n    prefix: d3_nsPrefix,\r\n    qualify: function(name) {\r\n      var i = name.indexOf(\":\"), prefix = name;\r\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\r\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\r\n        space: d3_nsPrefix[prefix],\r\n        local: name\r\n      } : name;\r\n    }\r\n  };\r\n  d3_selectionPrototype.attr = function(name, value) {\r\n    if (arguments.length < 2) {\r\n      if (typeof name === \"string\") {\r\n        var node = this.node();\r\n        name = d3.ns.qualify(name);\r\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\r\n      }\r\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\r\n      return this;\r\n    }\r\n    return this.each(d3_selection_attr(name, value));\r\n  };\r\n  function d3_selection_attr(name, value) {\r\n    name = d3.ns.qualify(name);\r\n    function attrNull() {\r\n      this.removeAttribute(name);\r\n    }\r\n    function attrNullNS() {\r\n      this.removeAttributeNS(name.space, name.local);\r\n    }\r\n    function attrConstant() {\r\n      this.setAttribute(name, value);\r\n    }\r\n    function attrConstantNS() {\r\n      this.setAttributeNS(name.space, name.local, value);\r\n    }\r\n    function attrFunction() {\r\n      var x = value.apply(this, arguments);\r\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\r\n    }\r\n    function attrFunctionNS() {\r\n      var x = value.apply(this, arguments);\r\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\r\n    }\r\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\r\n  }\r\n  function d3_collapse(s) {\r\n    return s.trim().replace(/\\s+/g, \" \");\r\n  }\r\n  d3_selectionPrototype.classed = function(name, value) {\r\n    if (arguments.length < 2) {\r\n      if (typeof name === \"string\") {\r\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\r\n        if (value = node.classList) {\r\n          while (++i < n) if (!value.contains(name[i])) return false;\r\n        } else {\r\n          value = node.getAttribute(\"class\");\r\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\r\n        }\r\n        return true;\r\n      }\r\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\r\n      return this;\r\n    }\r\n    return this.each(d3_selection_classed(name, value));\r\n  };\r\n  function d3_selection_classedRe(name) {\r\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\r\n  }\r\n  function d3_selection_classes(name) {\r\n    return (name + \"\").trim().split(/^|\\s+/);\r\n  }\r\n  function d3_selection_classed(name, value) {\r\n    name = d3_selection_classes(name).map(d3_selection_classedName);\r\n    var n = name.length;\r\n    function classedConstant() {\r\n      var i = -1;\r\n      while (++i < n) name[i](this, value);\r\n    }\r\n    function classedFunction() {\r\n      var i = -1, x = value.apply(this, arguments);\r\n      while (++i < n) name[i](this, x);\r\n    }\r\n    return typeof value === \"function\" ? classedFunction : classedConstant;\r\n  }\r\n  function d3_selection_classedName(name) {\r\n    var re = d3_selection_classedRe(name);\r\n    return function(node, value) {\r\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\r\n      var c = node.getAttribute(\"class\") || \"\";\r\n      if (value) {\r\n        re.lastIndex = 0;\r\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\r\n      } else {\r\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\r\n      }\r\n    };\r\n  }\r\n  d3_selectionPrototype.style = function(name, value, priority) {\r\n    var n = arguments.length;\r\n    if (n < 3) {\r\n      if (typeof name !== \"string\") {\r\n        if (n < 2) value = \"\";\r\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\r\n        return this;\r\n      }\r\n      if (n < 2) {\r\n        var node = this.node();\r\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\r\n      }\r\n      priority = \"\";\r\n    }\r\n    return this.each(d3_selection_style(name, value, priority));\r\n  };\r\n  function d3_selection_style(name, value, priority) {\r\n    function styleNull() {\r\n      this.style.removeProperty(name);\r\n    }\r\n    function styleConstant() {\r\n      this.style.setProperty(name, value, priority);\r\n    }\r\n    function styleFunction() {\r\n      var x = value.apply(this, arguments);\r\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\r\n    }\r\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\r\n  }\r\n  d3_selectionPrototype.property = function(name, value) {\r\n    if (arguments.length < 2) {\r\n      if (typeof name === \"string\") return this.node()[name];\r\n      for (value in name) this.each(d3_selection_property(value, name[value]));\r\n      return this;\r\n    }\r\n    return this.each(d3_selection_property(name, value));\r\n  };\r\n  function d3_selection_property(name, value) {\r\n    function propertyNull() {\r\n      delete this[name];\r\n    }\r\n    function propertyConstant() {\r\n      this[name] = value;\r\n    }\r\n    function propertyFunction() {\r\n      var x = value.apply(this, arguments);\r\n      if (x == null) delete this[name]; else this[name] = x;\r\n    }\r\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\r\n  }\r\n  d3_selectionPrototype.text = function(value) {\r\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\r\n      var v = value.apply(this, arguments);\r\n      this.textContent = v == null ? \"\" : v;\r\n    } : value == null ? function() {\r\n      this.textContent = \"\";\r\n    } : function() {\r\n      this.textContent = value;\r\n    }) : this.node().textContent;\r\n  };\r\n  d3_selectionPrototype.html = function(value) {\r\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\r\n      var v = value.apply(this, arguments);\r\n      this.innerHTML = v == null ? \"\" : v;\r\n    } : value == null ? function() {\r\n      this.innerHTML = \"\";\r\n    } : function() {\r\n      this.innerHTML = value;\r\n    }) : this.node().innerHTML;\r\n  };\r\n  d3_selectionPrototype.append = function(name) {\r\n    name = d3_selection_creator(name);\r\n    return this.select(function() {\r\n      return this.appendChild(name.apply(this, arguments));\r\n    });\r\n  };\r\n  function d3_selection_creator(name) {\r\n    function create() {\r\n      var document = this.ownerDocument, namespace = this.namespaceURI;\r\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\r\n    }\r\n    function createNS() {\r\n      return this.ownerDocument.createElementNS(name.space, name.local);\r\n    }\r\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\r\n  }\r\n  d3_selectionPrototype.insert = function(name, before) {\r\n    name = d3_selection_creator(name);\r\n    before = d3_selection_selector(before);\r\n    return this.select(function() {\r\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\r\n    });\r\n  };\r\n  d3_selectionPrototype.remove = function() {\r\n    return this.each(d3_selectionRemove);\r\n  };\r\n  function d3_selectionRemove() {\r\n    var parent = this.parentNode;\r\n    if (parent) parent.removeChild(this);\r\n  }\r\n  d3_selectionPrototype.data = function(value, key) {\r\n    var i = -1, n = this.length, group, node;\r\n    if (!arguments.length) {\r\n      value = new Array(n = (group = this[0]).length);\r\n      while (++i < n) {\r\n        if (node = group[i]) {\r\n          value[i] = node.__data__;\r\n        }\r\n      }\r\n      return value;\r\n    }\r\n    function bind(group, groupData) {\r\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\r\n      if (key) {\r\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\r\n        for (i = -1; ++i < n; ) {\r\n          if (node = group[i]) {\r\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\r\n              exitNodes[i] = node;\r\n            } else {\r\n              nodeByKeyValue.set(keyValue, node);\r\n            }\r\n            keyValues[i] = keyValue;\r\n          }\r\n        }\r\n        for (i = -1; ++i < m; ) {\r\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\r\n            enterNodes[i] = d3_selection_dataNode(nodeData);\r\n          } else if (node !== true) {\r\n            updateNodes[i] = node;\r\n            node.__data__ = nodeData;\r\n          }\r\n          nodeByKeyValue.set(keyValue, true);\r\n        }\r\n        for (i = -1; ++i < n; ) {\r\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\r\n            exitNodes[i] = group[i];\r\n          }\r\n        }\r\n      } else {\r\n        for (i = -1; ++i < n0; ) {\r\n          node = group[i];\r\n          nodeData = groupData[i];\r\n          if (node) {\r\n            node.__data__ = nodeData;\r\n            updateNodes[i] = node;\r\n          } else {\r\n            enterNodes[i] = d3_selection_dataNode(nodeData);\r\n          }\r\n        }\r\n        for (;i < m; ++i) {\r\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\r\n        }\r\n        for (;i < n; ++i) {\r\n          exitNodes[i] = group[i];\r\n        }\r\n      }\r\n      enterNodes.update = updateNodes;\r\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\r\n      enter.push(enterNodes);\r\n      update.push(updateNodes);\r\n      exit.push(exitNodes);\r\n    }\r\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\r\n    if (typeof value === \"function\") {\r\n      while (++i < n) {\r\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\r\n      }\r\n    } else {\r\n      while (++i < n) {\r\n        bind(group = this[i], value);\r\n      }\r\n    }\r\n    update.enter = function() {\r\n      return enter;\r\n    };\r\n    update.exit = function() {\r\n      return exit;\r\n    };\r\n    return update;\r\n  };\r\n  function d3_selection_dataNode(data) {\r\n    return {\r\n      __data__: data\r\n    };\r\n  }\r\n  d3_selectionPrototype.datum = function(value) {\r\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\r\n  };\r\n  d3_selectionPrototype.filter = function(filter) {\r\n    var subgroups = [], subgroup, group, node;\r\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\r\n    for (var j = 0, m = this.length; j < m; j++) {\r\n      subgroups.push(subgroup = []);\r\n      subgroup.parentNode = (group = this[j]).parentNode;\r\n      for (var i = 0, n = group.length; i < n; i++) {\r\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\r\n          subgroup.push(node);\r\n        }\r\n      }\r\n    }\r\n    return d3_selection(subgroups);\r\n  };\r\n  function d3_selection_filter(selector) {\r\n    return function() {\r\n      return d3_selectMatches(this, selector);\r\n    };\r\n  }\r\n  d3_selectionPrototype.order = function() {\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\r\n        if (node = group[i]) {\r\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\r\n          next = node;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  };\r\n  d3_selectionPrototype.sort = function(comparator) {\r\n    comparator = d3_selection_sortComparator.apply(this, arguments);\r\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\r\n    return this.order();\r\n  };\r\n  function d3_selection_sortComparator(comparator) {\r\n    if (!arguments.length) comparator = d3_ascending;\r\n    return function(a, b) {\r\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\r\n    };\r\n  }\r\n  d3_selectionPrototype.each = function(callback) {\r\n    return d3_selection_each(this, function(node, i, j) {\r\n      callback.call(node, node.__data__, i, j);\r\n    });\r\n  };\r\n  function d3_selection_each(groups, callback) {\r\n    for (var j = 0, m = groups.length; j < m; j++) {\r\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\r\n        if (node = group[i]) callback(node, i, j);\r\n      }\r\n    }\r\n    return groups;\r\n  }\r\n  d3_selectionPrototype.call = function(callback) {\r\n    var args = d3_array(arguments);\r\n    callback.apply(args[0] = this, args);\r\n    return this;\r\n  };\r\n  d3_selectionPrototype.empty = function() {\r\n    return !this.node();\r\n  };\r\n  d3_selectionPrototype.node = function() {\r\n    for (var j = 0, m = this.length; j < m; j++) {\r\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\r\n        var node = group[i];\r\n        if (node) return node;\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  d3_selectionPrototype.size = function() {\r\n    var n = 0;\r\n    d3_selection_each(this, function() {\r\n      ++n;\r\n    });\r\n    return n;\r\n  };\r\n  function d3_selection_enter(selection) {\r\n    d3_subclass(selection, d3_selection_enterPrototype);\r\n    return selection;\r\n  }\r\n  var d3_selection_enterPrototype = [];\r\n  d3.selection.enter = d3_selection_enter;\r\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\r\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\r\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\r\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\r\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\r\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\r\n  d3_selection_enterPrototype.select = function(selector) {\r\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      upgroup = (group = this[j]).update;\r\n      subgroups.push(subgroup = []);\r\n      subgroup.parentNode = group.parentNode;\r\n      for (var i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) {\r\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\r\n          subnode.__data__ = node.__data__;\r\n        } else {\r\n          subgroup.push(null);\r\n        }\r\n      }\r\n    }\r\n    return d3_selection(subgroups);\r\n  };\r\n  d3_selection_enterPrototype.insert = function(name, before) {\r\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\r\n    return d3_selectionPrototype.insert.call(this, name, before);\r\n  };\r\n  function d3_selection_enterInsertBefore(enter) {\r\n    var i0, j0;\r\n    return function(d, i, j) {\r\n      var group = enter[j].update, n = group.length, node;\r\n      if (j != j0) j0 = j, i0 = 0;\r\n      if (i >= i0) i0 = i + 1;\r\n      while (!(node = group[i0]) && ++i0 < n) ;\r\n      return node;\r\n    };\r\n  }\r\n  d3.select = function(node) {\r\n    var group;\r\n    if (typeof node === \"string\") {\r\n      group = [ d3_select(node, d3_document) ];\r\n      group.parentNode = d3_document.documentElement;\r\n    } else {\r\n      group = [ node ];\r\n      group.parentNode = d3_documentElement(node);\r\n    }\r\n    return d3_selection([ group ]);\r\n  };\r\n  d3.selectAll = function(nodes) {\r\n    var group;\r\n    if (typeof nodes === \"string\") {\r\n      group = d3_array(d3_selectAll(nodes, d3_document));\r\n      group.parentNode = d3_document.documentElement;\r\n    } else {\r\n      group = d3_array(nodes);\r\n      group.parentNode = null;\r\n    }\r\n    return d3_selection([ group ]);\r\n  };\r\n  d3_selectionPrototype.on = function(type, listener, capture) {\r\n    var n = arguments.length;\r\n    if (n < 3) {\r\n      if (typeof type !== \"string\") {\r\n        if (n < 2) listener = false;\r\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\r\n        return this;\r\n      }\r\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\r\n      capture = false;\r\n    }\r\n    return this.each(d3_selection_on(type, listener, capture));\r\n  };\r\n  function d3_selection_on(type, listener, capture) {\r\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\r\n    if (i > 0) type = type.slice(0, i);\r\n    var filter = d3_selection_onFilters.get(type);\r\n    if (filter) type = filter, wrap = d3_selection_onFilter;\r\n    function onRemove() {\r\n      var l = this[name];\r\n      if (l) {\r\n        this.removeEventListener(type, l, l.$);\r\n        delete this[name];\r\n      }\r\n    }\r\n    function onAdd() {\r\n      var l = wrap(listener, d3_array(arguments));\r\n      onRemove.call(this);\r\n      this.addEventListener(type, this[name] = l, l.$ = capture);\r\n      l._ = listener;\r\n    }\r\n    function removeAll() {\r\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\r\n      for (var name in this) {\r\n        if (match = name.match(re)) {\r\n          var l = this[name];\r\n          this.removeEventListener(match[1], l, l.$);\r\n          delete this[name];\r\n        }\r\n      }\r\n    }\r\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\r\n  }\r\n  var d3_selection_onFilters = d3.map({\r\n    mouseenter: \"mouseover\",\r\n    mouseleave: \"mouseout\"\r\n  });\r\n  if (d3_document) {\r\n    d3_selection_onFilters.forEach(function(k) {\r\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\r\n    });\r\n  }\r\n  function d3_selection_onListener(listener, argumentz) {\r\n    return function(e) {\r\n      var o = d3.event;\r\n      d3.event = e;\r\n      argumentz[0] = this.__data__;\r\n      try {\r\n        listener.apply(this, argumentz);\r\n      } finally {\r\n        d3.event = o;\r\n      }\r\n    };\r\n  }\r\n  function d3_selection_onFilter(listener, argumentz) {\r\n    var l = d3_selection_onListener(listener, argumentz);\r\n    return function(e) {\r\n      var target = this, related = e.relatedTarget;\r\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\r\n        l.call(target, e);\r\n      }\r\n    };\r\n  }\r\n  var d3_event_dragSelect, d3_event_dragId = 0;\r\n  function d3_event_dragSuppress(node) {\r\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\r\n    if (d3_event_dragSelect == null) {\r\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\r\n    }\r\n    if (d3_event_dragSelect) {\r\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\r\n      style[d3_event_dragSelect] = \"none\";\r\n    }\r\n    return function(suppressClick) {\r\n      w.on(name, null);\r\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\r\n      if (suppressClick) {\r\n        var off = function() {\r\n          w.on(click, null);\r\n        };\r\n        w.on(click, function() {\r\n          d3_eventPreventDefault();\r\n          off();\r\n        }, true);\r\n        setTimeout(off, 0);\r\n      }\r\n    };\r\n  }\r\n  d3.mouse = function(container) {\r\n    return d3_mousePoint(container, d3_eventSource());\r\n  };\r\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\r\n  function d3_mousePoint(container, e) {\r\n    if (e.changedTouches) e = e.changedTouches[0];\r\n    var svg = container.ownerSVGElement || container;\r\n    if (svg.createSVGPoint) {\r\n      var point = svg.createSVGPoint();\r\n      if (d3_mouse_bug44083 < 0) {\r\n        var window = d3_window(container);\r\n        if (window.scrollX || window.scrollY) {\r\n          svg = d3.select(\"body\").append(\"svg\").style({\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            margin: 0,\r\n            padding: 0,\r\n            border: \"none\"\r\n          }, \"important\");\r\n          var ctm = svg[0][0].getScreenCTM();\r\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\r\n          svg.remove();\r\n        }\r\n      }\r\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \r\n      point.y = e.clientY;\r\n      point = point.matrixTransform(container.getScreenCTM().inverse());\r\n      return [ point.x, point.y ];\r\n    }\r\n    var rect = container.getBoundingClientRect();\r\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\r\n  }\r\n  d3.touch = function(container, touches, identifier) {\r\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\r\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\r\n      if ((touch = touches[i]).identifier === identifier) {\r\n        return d3_mousePoint(container, touch);\r\n      }\r\n    }\r\n  };\r\n  d3.behavior.drag = function() {\r\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\r\n    function drag() {\r\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\r\n    }\r\n    function dragstart(id, position, subject, move, end) {\r\n      return function() {\r\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\r\n        if (origin) {\r\n          dragOffset = origin.apply(that, arguments);\r\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\r\n        } else {\r\n          dragOffset = [ 0, 0 ];\r\n        }\r\n        dispatch({\r\n          type: \"dragstart\"\r\n        });\r\n        function moved() {\r\n          var position1 = position(parent, dragId), dx, dy;\r\n          if (!position1) return;\r\n          dx = position1[0] - position0[0];\r\n          dy = position1[1] - position0[1];\r\n          dragged |= dx | dy;\r\n          position0 = position1;\r\n          dispatch({\r\n            type: \"drag\",\r\n            x: position1[0] + dragOffset[0],\r\n            y: position1[1] + dragOffset[1],\r\n            dx: dx,\r\n            dy: dy\r\n          });\r\n        }\r\n        function ended() {\r\n          if (!position(parent, dragId)) return;\r\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\r\n          dragRestore(dragged);\r\n          dispatch({\r\n            type: \"dragend\"\r\n          });\r\n        }\r\n      };\r\n    }\r\n    drag.origin = function(x) {\r\n      if (!arguments.length) return origin;\r\n      origin = x;\r\n      return drag;\r\n    };\r\n    return d3.rebind(drag, event, \"on\");\r\n  };\r\n  function d3_behavior_dragTouchId() {\r\n    return d3.event.changedTouches[0].identifier;\r\n  }\r\n  d3.touches = function(container, touches) {\r\n    if (arguments.length < 2) touches = d3_eventSource().touches;\r\n    return touches ? d3_array(touches).map(function(touch) {\r\n      var point = d3_mousePoint(container, touch);\r\n      point.identifier = touch.identifier;\r\n      return point;\r\n    }) : [];\r\n  };\r\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\r\n  function d3_sgn(x) {\r\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\r\n  }\r\n  function d3_cross2d(a, b, c) {\r\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\r\n  }\r\n  function d3_acos(x) {\r\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\r\n  }\r\n  function d3_asin(x) {\r\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\r\n  }\r\n  function d3_sinh(x) {\r\n    return ((x = Math.exp(x)) - 1 / x) / 2;\r\n  }\r\n  function d3_cosh(x) {\r\n    return ((x = Math.exp(x)) + 1 / x) / 2;\r\n  }\r\n  function d3_tanh(x) {\r\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\r\n  }\r\n  function d3_haversin(x) {\r\n    return (x = Math.sin(x / 2)) * x;\r\n  }\r\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\r\n  d3.interpolateZoom = function(p0, p1) {\r\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\r\n    if (d2 < ε2) {\r\n      S = Math.log(w1 / w0) / ρ;\r\n      i = function(t) {\r\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\r\n      };\r\n    } else {\r\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\r\n      S = (r1 - r0) / ρ;\r\n      i = function(t) {\r\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\r\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\r\n      };\r\n    }\r\n    i.duration = S * 1e3;\r\n    return i;\r\n  };\r\n  d3.behavior.zoom = function() {\r\n    var view = {\r\n      x: 0,\r\n      y: 0,\r\n      k: 1\r\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\r\n    if (!d3_behavior_zoomWheel) {\r\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\r\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\r\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\r\n        return d3.event.wheelDelta;\r\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\r\n        return -d3.event.detail;\r\n      }, \"MozMousePixelScroll\");\r\n    }\r\n    function zoom(g) {\r\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\r\n    }\r\n    zoom.event = function(g) {\r\n      g.each(function() {\r\n        var dispatch = event.of(this, arguments), view1 = view;\r\n        if (d3_transitionInheritId) {\r\n          d3.select(this).transition().each(\"start.zoom\", function() {\r\n            view = this.__chart__ || {\r\n              x: 0,\r\n              y: 0,\r\n              k: 1\r\n            };\r\n            zoomstarted(dispatch);\r\n          }).tween(\"zoom:zoom\", function() {\r\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\r\n            return function(t) {\r\n              var l = i(t), k = dx / l[2];\r\n              this.__chart__ = view = {\r\n                x: cx - l[0] * k,\r\n                y: cy - l[1] * k,\r\n                k: k\r\n              };\r\n              zoomed(dispatch);\r\n            };\r\n          }).each(\"interrupt.zoom\", function() {\r\n            zoomended(dispatch);\r\n          }).each(\"end.zoom\", function() {\r\n            zoomended(dispatch);\r\n          });\r\n        } else {\r\n          this.__chart__ = view;\r\n          zoomstarted(dispatch);\r\n          zoomed(dispatch);\r\n          zoomended(dispatch);\r\n        }\r\n      });\r\n    };\r\n    zoom.translate = function(_) {\r\n      if (!arguments.length) return [ view.x, view.y ];\r\n      view = {\r\n        x: +_[0],\r\n        y: +_[1],\r\n        k: view.k\r\n      };\r\n      rescale();\r\n      return zoom;\r\n    };\r\n    zoom.scale = function(_) {\r\n      if (!arguments.length) return view.k;\r\n      view = {\r\n        x: view.x,\r\n        y: view.y,\r\n        k: null\r\n      };\r\n      scaleTo(+_);\r\n      rescale();\r\n      return zoom;\r\n    };\r\n    zoom.scaleExtent = function(_) {\r\n      if (!arguments.length) return scaleExtent;\r\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\r\n      return zoom;\r\n    };\r\n    zoom.center = function(_) {\r\n      if (!arguments.length) return center;\r\n      center = _ && [ +_[0], +_[1] ];\r\n      return zoom;\r\n    };\r\n    zoom.size = function(_) {\r\n      if (!arguments.length) return size;\r\n      size = _ && [ +_[0], +_[1] ];\r\n      return zoom;\r\n    };\r\n    zoom.duration = function(_) {\r\n      if (!arguments.length) return duration;\r\n      duration = +_;\r\n      return zoom;\r\n    };\r\n    zoom.x = function(z) {\r\n      if (!arguments.length) return x1;\r\n      x1 = z;\r\n      x0 = z.copy();\r\n      view = {\r\n        x: 0,\r\n        y: 0,\r\n        k: 1\r\n      };\r\n      return zoom;\r\n    };\r\n    zoom.y = function(z) {\r\n      if (!arguments.length) return y1;\r\n      y1 = z;\r\n      y0 = z.copy();\r\n      view = {\r\n        x: 0,\r\n        y: 0,\r\n        k: 1\r\n      };\r\n      return zoom;\r\n    };\r\n    function location(p) {\r\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\r\n    }\r\n    function point(l) {\r\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\r\n    }\r\n    function scaleTo(s) {\r\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\r\n    }\r\n    function translateTo(p, l) {\r\n      l = point(l);\r\n      view.x += p[0] - l[0];\r\n      view.y += p[1] - l[1];\r\n    }\r\n    function zoomTo(that, p, l, k) {\r\n      that.__chart__ = {\r\n        x: view.x,\r\n        y: view.y,\r\n        k: view.k\r\n      };\r\n      scaleTo(Math.pow(2, k));\r\n      translateTo(center0 = p, l);\r\n      that = d3.select(that);\r\n      if (duration > 0) that = that.transition().duration(duration);\r\n      that.call(zoom.event);\r\n    }\r\n    function rescale() {\r\n      if (x1) x1.domain(x0.range().map(function(x) {\r\n        return (x - view.x) / view.k;\r\n      }).map(x0.invert));\r\n      if (y1) y1.domain(y0.range().map(function(y) {\r\n        return (y - view.y) / view.k;\r\n      }).map(y0.invert));\r\n    }\r\n    function zoomstarted(dispatch) {\r\n      if (!zooming++) dispatch({\r\n        type: \"zoomstart\"\r\n      });\r\n    }\r\n    function zoomed(dispatch) {\r\n      rescale();\r\n      dispatch({\r\n        type: \"zoom\",\r\n        scale: view.k,\r\n        translate: [ view.x, view.y ]\r\n      });\r\n    }\r\n    function zoomended(dispatch) {\r\n      if (!--zooming) dispatch({\r\n        type: \"zoomend\"\r\n      }), center0 = null;\r\n    }\r\n    function mousedowned() {\r\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\r\n      d3_selection_interrupt.call(that);\r\n      zoomstarted(dispatch);\r\n      function moved() {\r\n        dragged = 1;\r\n        translateTo(d3.mouse(that), location0);\r\n        zoomed(dispatch);\r\n      }\r\n      function ended() {\r\n        subject.on(mousemove, null).on(mouseup, null);\r\n        dragRestore(dragged);\r\n        zoomended(dispatch);\r\n      }\r\n    }\r\n    function touchstarted() {\r\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\r\n      started();\r\n      zoomstarted(dispatch);\r\n      subject.on(mousedown, null).on(touchstart, started);\r\n      function relocate() {\r\n        var touches = d3.touches(that);\r\n        scale0 = view.k;\r\n        touches.forEach(function(t) {\r\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\r\n        });\r\n        return touches;\r\n      }\r\n      function started() {\r\n        var target = d3.event.target;\r\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\r\n        targets.push(target);\r\n        var changed = d3.event.changedTouches;\r\n        for (var i = 0, n = changed.length; i < n; ++i) {\r\n          locations0[changed[i].identifier] = null;\r\n        }\r\n        var touches = relocate(), now = Date.now();\r\n        if (touches.length === 1) {\r\n          if (now - touchtime < 500) {\r\n            var p = touches[0];\r\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\r\n            d3_eventPreventDefault();\r\n          }\r\n          touchtime = now;\r\n        } else if (touches.length > 1) {\r\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\r\n          distance0 = dx * dx + dy * dy;\r\n        }\r\n      }\r\n      function moved() {\r\n        var touches = d3.touches(that), p0, l0, p1, l1;\r\n        d3_selection_interrupt.call(that);\r\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\r\n          p1 = touches[i];\r\n          if (l1 = locations0[p1.identifier]) {\r\n            if (l0) break;\r\n            p0 = p1, l0 = l1;\r\n          }\r\n        }\r\n        if (l1) {\r\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\r\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\r\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\r\n          scaleTo(scale1 * scale0);\r\n        }\r\n        touchtime = null;\r\n        translateTo(p0, l0);\r\n        zoomed(dispatch);\r\n      }\r\n      function ended() {\r\n        if (d3.event.touches.length) {\r\n          var changed = d3.event.changedTouches;\r\n          for (var i = 0, n = changed.length; i < n; ++i) {\r\n            delete locations0[changed[i].identifier];\r\n          }\r\n          for (var identifier in locations0) {\r\n            return void relocate();\r\n          }\r\n        }\r\n        d3.selectAll(targets).on(zoomName, null);\r\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\r\n        dragRestore();\r\n        zoomended(dispatch);\r\n      }\r\n    }\r\n    function mousewheeled() {\r\n      var dispatch = event.of(this, arguments);\r\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \r\n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\r\n      mousewheelTimer = setTimeout(function() {\r\n        mousewheelTimer = null;\r\n        zoomended(dispatch);\r\n      }, 50);\r\n      d3_eventPreventDefault();\r\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\r\n      translateTo(center0, translate0);\r\n      zoomed(dispatch);\r\n    }\r\n    function dblclicked() {\r\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\r\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\r\n    }\r\n    return d3.rebind(zoom, event, \"on\");\r\n  };\r\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\r\n  d3.color = d3_color;\r\n  function d3_color() {}\r\n  d3_color.prototype.toString = function() {\r\n    return this.rgb() + \"\";\r\n  };\r\n  d3.hsl = d3_hsl;\r\n  function d3_hsl(h, s, l) {\r\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\r\n  }\r\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\r\n  d3_hslPrototype.brighter = function(k) {\r\n    k = Math.pow(.7, arguments.length ? k : 1);\r\n    return new d3_hsl(this.h, this.s, this.l / k);\r\n  };\r\n  d3_hslPrototype.darker = function(k) {\r\n    k = Math.pow(.7, arguments.length ? k : 1);\r\n    return new d3_hsl(this.h, this.s, k * this.l);\r\n  };\r\n  d3_hslPrototype.rgb = function() {\r\n    return d3_hsl_rgb(this.h, this.s, this.l);\r\n  };\r\n  function d3_hsl_rgb(h, s, l) {\r\n    var m1, m2;\r\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\r\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\r\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\r\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\r\n    m1 = 2 * l - m2;\r\n    function v(h) {\r\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\r\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\r\n      if (h < 180) return m2;\r\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\r\n      return m1;\r\n    }\r\n    function vv(h) {\r\n      return Math.round(v(h) * 255);\r\n    }\r\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\r\n  }\r\n  d3.hcl = d3_hcl;\r\n  function d3_hcl(h, c, l) {\r\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\r\n  }\r\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\r\n  d3_hclPrototype.brighter = function(k) {\r\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\r\n  };\r\n  d3_hclPrototype.darker = function(k) {\r\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\r\n  };\r\n  d3_hclPrototype.rgb = function() {\r\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\r\n  };\r\n  function d3_hcl_lab(h, c, l) {\r\n    if (isNaN(h)) h = 0;\r\n    if (isNaN(c)) c = 0;\r\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\r\n  }\r\n  d3.lab = d3_lab;\r\n  function d3_lab(l, a, b) {\r\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\r\n  }\r\n  var d3_lab_K = 18;\r\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\r\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\r\n  d3_labPrototype.brighter = function(k) {\r\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\r\n  };\r\n  d3_labPrototype.darker = function(k) {\r\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\r\n  };\r\n  d3_labPrototype.rgb = function() {\r\n    return d3_lab_rgb(this.l, this.a, this.b);\r\n  };\r\n  function d3_lab_rgb(l, a, b) {\r\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\r\n    x = d3_lab_xyz(x) * d3_lab_X;\r\n    y = d3_lab_xyz(y) * d3_lab_Y;\r\n    z = d3_lab_xyz(z) * d3_lab_Z;\r\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\r\n  }\r\n  function d3_lab_hcl(l, a, b) {\r\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\r\n  }\r\n  function d3_lab_xyz(x) {\r\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\r\n  }\r\n  function d3_xyz_lab(x) {\r\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\r\n  }\r\n  function d3_xyz_rgb(r) {\r\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\r\n  }\r\n  d3.rgb = d3_rgb;\r\n  function d3_rgb(r, g, b) {\r\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\r\n  }\r\n  function d3_rgbNumber(value) {\r\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\r\n  }\r\n  function d3_rgbString(value) {\r\n    return d3_rgbNumber(value) + \"\";\r\n  }\r\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\r\n  d3_rgbPrototype.brighter = function(k) {\r\n    k = Math.pow(.7, arguments.length ? k : 1);\r\n    var r = this.r, g = this.g, b = this.b, i = 30;\r\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\r\n    if (r && r < i) r = i;\r\n    if (g && g < i) g = i;\r\n    if (b && b < i) b = i;\r\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\r\n  };\r\n  d3_rgbPrototype.darker = function(k) {\r\n    k = Math.pow(.7, arguments.length ? k : 1);\r\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\r\n  };\r\n  d3_rgbPrototype.hsl = function() {\r\n    return d3_rgb_hsl(this.r, this.g, this.b);\r\n  };\r\n  d3_rgbPrototype.toString = function() {\r\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\r\n  };\r\n  function d3_rgb_hex(v) {\r\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\r\n  }\r\n  function d3_rgb_parse(format, rgb, hsl) {\r\n    var r = 0, g = 0, b = 0, m1, m2, color;\r\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\r\n    if (m1) {\r\n      m2 = m1[2].split(\",\");\r\n      switch (m1[1]) {\r\n       case \"hsl\":\r\n        {\r\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\r\n        }\r\n\r\n       case \"rgb\":\r\n        {\r\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\r\n        }\r\n      }\r\n    }\r\n    if (color = d3_rgb_names.get(format)) {\r\n      return rgb(color.r, color.g, color.b);\r\n    }\r\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\r\n      if (format.length === 4) {\r\n        r = (color & 3840) >> 4;\r\n        r = r >> 4 | r;\r\n        g = color & 240;\r\n        g = g >> 4 | g;\r\n        b = color & 15;\r\n        b = b << 4 | b;\r\n      } else if (format.length === 7) {\r\n        r = (color & 16711680) >> 16;\r\n        g = (color & 65280) >> 8;\r\n        b = color & 255;\r\n      }\r\n    }\r\n    return rgb(r, g, b);\r\n  }\r\n  function d3_rgb_hsl(r, g, b) {\r\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\r\n    if (d) {\r\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\r\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\r\n      h *= 60;\r\n    } else {\r\n      h = NaN;\r\n      s = l > 0 && l < 1 ? 0 : h;\r\n    }\r\n    return new d3_hsl(h, s, l);\r\n  }\r\n  function d3_rgb_lab(r, g, b) {\r\n    r = d3_rgb_xyz(r);\r\n    g = d3_rgb_xyz(g);\r\n    b = d3_rgb_xyz(b);\r\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\r\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\r\n  }\r\n  function d3_rgb_xyz(r) {\r\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\r\n  }\r\n  function d3_rgb_parseNumber(c) {\r\n    var f = parseFloat(c);\r\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\r\n  }\r\n  var d3_rgb_names = d3.map({\r\n    aliceblue: 15792383,\r\n    antiquewhite: 16444375,\r\n    aqua: 65535,\r\n    aquamarine: 8388564,\r\n    azure: 15794175,\r\n    beige: 16119260,\r\n    bisque: 16770244,\r\n    black: 0,\r\n    blanchedalmond: 16772045,\r\n    blue: 255,\r\n    blueviolet: 9055202,\r\n    brown: 10824234,\r\n    burlywood: 14596231,\r\n    cadetblue: 6266528,\r\n    chartreuse: 8388352,\r\n    chocolate: 13789470,\r\n    coral: 16744272,\r\n    cornflowerblue: 6591981,\r\n    cornsilk: 16775388,\r\n    crimson: 14423100,\r\n    cyan: 65535,\r\n    darkblue: 139,\r\n    darkcyan: 35723,\r\n    darkgoldenrod: 12092939,\r\n    darkgray: 11119017,\r\n    darkgreen: 25600,\r\n    darkgrey: 11119017,\r\n    darkkhaki: 12433259,\r\n    darkmagenta: 9109643,\r\n    darkolivegreen: 5597999,\r\n    darkorange: 16747520,\r\n    darkorchid: 10040012,\r\n    darkred: 9109504,\r\n    darksalmon: 15308410,\r\n    darkseagreen: 9419919,\r\n    darkslateblue: 4734347,\r\n    darkslategray: 3100495,\r\n    darkslategrey: 3100495,\r\n    darkturquoise: 52945,\r\n    darkviolet: 9699539,\r\n    deeppink: 16716947,\r\n    deepskyblue: 49151,\r\n    dimgray: 6908265,\r\n    dimgrey: 6908265,\r\n    dodgerblue: 2003199,\r\n    firebrick: 11674146,\r\n    floralwhite: 16775920,\r\n    forestgreen: 2263842,\r\n    fuchsia: 16711935,\r\n    gainsboro: 14474460,\r\n    ghostwhite: 16316671,\r\n    gold: 16766720,\r\n    goldenrod: 14329120,\r\n    gray: 8421504,\r\n    green: 32768,\r\n    greenyellow: 11403055,\r\n    grey: 8421504,\r\n    honeydew: 15794160,\r\n    hotpink: 16738740,\r\n    indianred: 13458524,\r\n    indigo: 4915330,\r\n    ivory: 16777200,\r\n    khaki: 15787660,\r\n    lavender: 15132410,\r\n    lavenderblush: 16773365,\r\n    lawngreen: 8190976,\r\n    lemonchiffon: 16775885,\r\n    lightblue: 11393254,\r\n    lightcoral: 15761536,\r\n    lightcyan: 14745599,\r\n    lightgoldenrodyellow: 16448210,\r\n    lightgray: 13882323,\r\n    lightgreen: 9498256,\r\n    lightgrey: 13882323,\r\n    lightpink: 16758465,\r\n    lightsalmon: 16752762,\r\n    lightseagreen: 2142890,\r\n    lightskyblue: 8900346,\r\n    lightslategray: 7833753,\r\n    lightslategrey: 7833753,\r\n    lightsteelblue: 11584734,\r\n    lightyellow: 16777184,\r\n    lime: 65280,\r\n    limegreen: 3329330,\r\n    linen: 16445670,\r\n    magenta: 16711935,\r\n    maroon: 8388608,\r\n    mediumaquamarine: 6737322,\r\n    mediumblue: 205,\r\n    mediumorchid: 12211667,\r\n    mediumpurple: 9662683,\r\n    mediumseagreen: 3978097,\r\n    mediumslateblue: 8087790,\r\n    mediumspringgreen: 64154,\r\n    mediumturquoise: 4772300,\r\n    mediumvioletred: 13047173,\r\n    midnightblue: 1644912,\r\n    mintcream: 16121850,\r\n    mistyrose: 16770273,\r\n    moccasin: 16770229,\r\n    navajowhite: 16768685,\r\n    navy: 128,\r\n    oldlace: 16643558,\r\n    olive: 8421376,\r\n    olivedrab: 7048739,\r\n    orange: 16753920,\r\n    orangered: 16729344,\r\n    orchid: 14315734,\r\n    palegoldenrod: 15657130,\r\n    palegreen: 10025880,\r\n    paleturquoise: 11529966,\r\n    palevioletred: 14381203,\r\n    papayawhip: 16773077,\r\n    peachpuff: 16767673,\r\n    peru: 13468991,\r\n    pink: 16761035,\r\n    plum: 14524637,\r\n    powderblue: 11591910,\r\n    purple: 8388736,\r\n    rebeccapurple: 6697881,\r\n    red: 16711680,\r\n    rosybrown: 12357519,\r\n    royalblue: 4286945,\r\n    saddlebrown: 9127187,\r\n    salmon: 16416882,\r\n    sandybrown: 16032864,\r\n    seagreen: 3050327,\r\n    seashell: 16774638,\r\n    sienna: 10506797,\r\n    silver: 12632256,\r\n    skyblue: 8900331,\r\n    slateblue: 6970061,\r\n    slategray: 7372944,\r\n    slategrey: 7372944,\r\n    snow: 16775930,\r\n    springgreen: 65407,\r\n    steelblue: 4620980,\r\n    tan: 13808780,\r\n    teal: 32896,\r\n    thistle: 14204888,\r\n    tomato: 16737095,\r\n    turquoise: 4251856,\r\n    violet: 15631086,\r\n    wheat: 16113331,\r\n    white: 16777215,\r\n    whitesmoke: 16119285,\r\n    yellow: 16776960,\r\n    yellowgreen: 10145074\r\n  });\r\n  d3_rgb_names.forEach(function(key, value) {\r\n    d3_rgb_names.set(key, d3_rgbNumber(value));\r\n  });\r\n  function d3_functor(v) {\r\n    return typeof v === \"function\" ? v : function() {\r\n      return v;\r\n    };\r\n  }\r\n  d3.functor = d3_functor;\r\n  d3.xhr = d3_xhrType(d3_identity);\r\n  function d3_xhrType(response) {\r\n    return function(url, mimeType, callback) {\r\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \r\n      mimeType = null;\r\n      return d3_xhr(url, mimeType, response, callback);\r\n    };\r\n  }\r\n  function d3_xhr(url, mimeType, response, callback) {\r\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\r\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\r\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\r\n      request.readyState > 3 && respond();\r\n    };\r\n    function respond() {\r\n      var status = request.status, result;\r\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\r\n        try {\r\n          result = response.call(xhr, request);\r\n        } catch (e) {\r\n          dispatch.error.call(xhr, e);\r\n          return;\r\n        }\r\n        dispatch.load.call(xhr, result);\r\n      } else {\r\n        dispatch.error.call(xhr, request);\r\n      }\r\n    }\r\n    request.onprogress = function(event) {\r\n      var o = d3.event;\r\n      d3.event = event;\r\n      try {\r\n        dispatch.progress.call(xhr, request);\r\n      } finally {\r\n        d3.event = o;\r\n      }\r\n    };\r\n    xhr.header = function(name, value) {\r\n      name = (name + \"\").toLowerCase();\r\n      if (arguments.length < 2) return headers[name];\r\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\r\n      return xhr;\r\n    };\r\n    xhr.mimeType = function(value) {\r\n      if (!arguments.length) return mimeType;\r\n      mimeType = value == null ? null : value + \"\";\r\n      return xhr;\r\n    };\r\n    xhr.responseType = function(value) {\r\n      if (!arguments.length) return responseType;\r\n      responseType = value;\r\n      return xhr;\r\n    };\r\n    xhr.response = function(value) {\r\n      response = value;\r\n      return xhr;\r\n    };\r\n    [ \"get\", \"post\" ].forEach(function(method) {\r\n      xhr[method] = function() {\r\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\r\n      };\r\n    });\r\n    xhr.send = function(method, data, callback) {\r\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\r\n      request.open(method, url, true);\r\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\r\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\r\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\r\n      if (responseType != null) request.responseType = responseType;\r\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\r\n        callback(null, request);\r\n      });\r\n      dispatch.beforesend.call(xhr, request);\r\n      request.send(data == null ? null : data);\r\n      return xhr;\r\n    };\r\n    xhr.abort = function() {\r\n      request.abort();\r\n      return xhr;\r\n    };\r\n    d3.rebind(xhr, dispatch, \"on\");\r\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\r\n  }\r\n  function d3_xhr_fixCallback(callback) {\r\n    return callback.length === 1 ? function(error, request) {\r\n      callback(error == null ? request : null);\r\n    } : callback;\r\n  }\r\n  function d3_xhrHasResponse(request) {\r\n    var type = request.responseType;\r\n    return type && type !== \"text\" ? request.response : request.responseText;\r\n  }\r\n  d3.dsv = function(delimiter, mimeType) {\r\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\r\n    function dsv(url, row, callback) {\r\n      if (arguments.length < 3) callback = row, row = null;\r\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\r\n      xhr.row = function(_) {\r\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\r\n      };\r\n      return xhr;\r\n    }\r\n    function response(request) {\r\n      return dsv.parse(request.responseText);\r\n    }\r\n    function typedResponse(f) {\r\n      return function(request) {\r\n        return dsv.parse(request.responseText, f);\r\n      };\r\n    }\r\n    dsv.parse = function(text, f) {\r\n      var o;\r\n      return dsv.parseRows(text, function(row, i) {\r\n        if (o) return o(row, i - 1);\r\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\r\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\r\n        }).join(\",\") + \"}\");\r\n        o = f ? function(row, i) {\r\n          return f(a(row), i);\r\n        } : a;\r\n      });\r\n    };\r\n    dsv.parseRows = function(text, f) {\r\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\r\n      function token() {\r\n        if (I >= N) return EOF;\r\n        if (eol) return eol = false, EOL;\r\n        var j = I;\r\n        if (text.charCodeAt(j) === 34) {\r\n          var i = j;\r\n          while (i++ < N) {\r\n            if (text.charCodeAt(i) === 34) {\r\n              if (text.charCodeAt(i + 1) !== 34) break;\r\n              ++i;\r\n            }\r\n          }\r\n          I = i + 2;\r\n          var c = text.charCodeAt(i + 1);\r\n          if (c === 13) {\r\n            eol = true;\r\n            if (text.charCodeAt(i + 2) === 10) ++I;\r\n          } else if (c === 10) {\r\n            eol = true;\r\n          }\r\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\r\n        }\r\n        while (I < N) {\r\n          var c = text.charCodeAt(I++), k = 1;\r\n          if (c === 10) eol = true; else if (c === 13) {\r\n            eol = true;\r\n            if (text.charCodeAt(I) === 10) ++I, ++k;\r\n          } else if (c !== delimiterCode) continue;\r\n          return text.slice(j, I - k);\r\n        }\r\n        return text.slice(j);\r\n      }\r\n      while ((t = token()) !== EOF) {\r\n        var a = [];\r\n        while (t !== EOL && t !== EOF) {\r\n          a.push(t);\r\n          t = token();\r\n        }\r\n        if (f && (a = f(a, n++)) == null) continue;\r\n        rows.push(a);\r\n      }\r\n      return rows;\r\n    };\r\n    dsv.format = function(rows) {\r\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\r\n      var fieldSet = new d3_Set(), fields = [];\r\n      rows.forEach(function(row) {\r\n        for (var field in row) {\r\n          if (!fieldSet.has(field)) {\r\n            fields.push(fieldSet.add(field));\r\n          }\r\n        }\r\n      });\r\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\r\n        return fields.map(function(field) {\r\n          return formatValue(row[field]);\r\n        }).join(delimiter);\r\n      })).join(\"\\n\");\r\n    };\r\n    dsv.formatRows = function(rows) {\r\n      return rows.map(formatRow).join(\"\\n\");\r\n    };\r\n    function formatRow(row) {\r\n      return row.map(formatValue).join(delimiter);\r\n    }\r\n    function formatValue(text) {\r\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\r\n    }\r\n    return dsv;\r\n  };\r\n  d3.csv = d3.dsv(\",\", \"text/csv\");\r\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\r\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\r\n    setTimeout(callback, 17);\r\n  };\r\n  d3.timer = function() {\r\n    d3_timer.apply(this, arguments);\r\n  };\r\n  function d3_timer(callback, delay, then) {\r\n    var n = arguments.length;\r\n    if (n < 2) delay = 0;\r\n    if (n < 3) then = Date.now();\r\n    var time = then + delay, timer = {\r\n      c: callback,\r\n      t: time,\r\n      n: null\r\n    };\r\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\r\n    d3_timer_queueTail = timer;\r\n    if (!d3_timer_interval) {\r\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\r\n      d3_timer_interval = 1;\r\n      d3_timer_frame(d3_timer_step);\r\n    }\r\n    return timer;\r\n  }\r\n  function d3_timer_step() {\r\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\r\n    if (delay > 24) {\r\n      if (isFinite(delay)) {\r\n        clearTimeout(d3_timer_timeout);\r\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\r\n      }\r\n      d3_timer_interval = 0;\r\n    } else {\r\n      d3_timer_interval = 1;\r\n      d3_timer_frame(d3_timer_step);\r\n    }\r\n  }\r\n  d3.timer.flush = function() {\r\n    d3_timer_mark();\r\n    d3_timer_sweep();\r\n  };\r\n  function d3_timer_mark() {\r\n    var now = Date.now(), timer = d3_timer_queueHead;\r\n    while (timer) {\r\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\r\n      timer = timer.n;\r\n    }\r\n    return now;\r\n  }\r\n  function d3_timer_sweep() {\r\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\r\n    while (t1) {\r\n      if (t1.c) {\r\n        if (t1.t < time) time = t1.t;\r\n        t1 = (t0 = t1).n;\r\n      } else {\r\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\r\n      }\r\n    }\r\n    d3_timer_queueTail = t0;\r\n    return time;\r\n  }\r\n  function d3_format_precision(x, p) {\r\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\r\n  }\r\n  d3.round = function(x, n) {\r\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\r\n  };\r\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\r\n  d3.formatPrefix = function(value, precision) {\r\n    var i = 0;\r\n    if (value = +value) {\r\n      if (value < 0) value *= -1;\r\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\r\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\r\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\r\n    }\r\n    return d3_formatPrefixes[8 + i / 3];\r\n  };\r\n  function d3_formatPrefix(d, i) {\r\n    var k = Math.pow(10, abs(8 - i) * 3);\r\n    return {\r\n      scale: i > 8 ? function(d) {\r\n        return d / k;\r\n      } : function(d) {\r\n        return d * k;\r\n      },\r\n      symbol: d\r\n    };\r\n  }\r\n  function d3_locale_numberFormat(locale) {\r\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\r\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\r\n      while (i > 0 && g > 0) {\r\n        if (length + g + 1 > width) g = Math.max(1, width - length);\r\n        t.push(value.substring(i -= g, i + g));\r\n        if ((length += g + 1) > width) break;\r\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\r\n      }\r\n      return t.reverse().join(locale_thousands);\r\n    } : d3_identity;\r\n    return function(specifier) {\r\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\r\n      if (precision) precision = +precision.substring(1);\r\n      if (zfill || fill === \"0\" && align === \"=\") {\r\n        zfill = fill = \"0\";\r\n        align = \"=\";\r\n      }\r\n      switch (type) {\r\n       case \"n\":\r\n        comma = true;\r\n        type = \"g\";\r\n        break;\r\n\r\n       case \"%\":\r\n        scale = 100;\r\n        suffix = \"%\";\r\n        type = \"f\";\r\n        break;\r\n\r\n       case \"p\":\r\n        scale = 100;\r\n        suffix = \"%\";\r\n        type = \"r\";\r\n        break;\r\n\r\n       case \"b\":\r\n       case \"o\":\r\n       case \"x\":\r\n       case \"X\":\r\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\r\n\r\n       case \"c\":\r\n        exponent = false;\r\n\r\n       case \"d\":\r\n        integer = true;\r\n        precision = 0;\r\n        break;\r\n\r\n       case \"s\":\r\n        scale = -1;\r\n        type = \"r\";\r\n        break;\r\n      }\r\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\r\n      if (type == \"r\" && !precision) type = \"g\";\r\n      if (precision != null) {\r\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\r\n      }\r\n      type = d3_format_types.get(type) || d3_format_typeDefault;\r\n      var zcomma = zfill && comma;\r\n      return function(value) {\r\n        var fullSuffix = suffix;\r\n        if (integer && value % 1) return \"\";\r\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\r\n        if (scale < 0) {\r\n          var unit = d3.formatPrefix(value, precision);\r\n          value = unit.scale(value);\r\n          fullSuffix = unit.symbol + suffix;\r\n        } else {\r\n          value *= scale;\r\n        }\r\n        value = type(value, precision);\r\n        var i = value.lastIndexOf(\".\"), before, after;\r\n        if (i < 0) {\r\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\r\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\r\n        } else {\r\n          before = value.substring(0, i);\r\n          after = locale_decimal + value.substring(i + 1);\r\n        }\r\n        if (!zfill && comma) before = formatGroup(before, Infinity);\r\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\r\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\r\n        negative += prefix;\r\n        value = before + after;\r\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\r\n      };\r\n    };\r\n  }\r\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\r\n  var d3_format_types = d3.map({\r\n    b: function(x) {\r\n      return x.toString(2);\r\n    },\r\n    c: function(x) {\r\n      return String.fromCharCode(x);\r\n    },\r\n    o: function(x) {\r\n      return x.toString(8);\r\n    },\r\n    x: function(x) {\r\n      return x.toString(16);\r\n    },\r\n    X: function(x) {\r\n      return x.toString(16).toUpperCase();\r\n    },\r\n    g: function(x, p) {\r\n      return x.toPrecision(p);\r\n    },\r\n    e: function(x, p) {\r\n      return x.toExponential(p);\r\n    },\r\n    f: function(x, p) {\r\n      return x.toFixed(p);\r\n    },\r\n    r: function(x, p) {\r\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\r\n    }\r\n  });\r\n  function d3_format_typeDefault(x) {\r\n    return x + \"\";\r\n  }\r\n  var d3_time = d3.time = {}, d3_date = Date;\r\n  function d3_date_utc() {\r\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\r\n  }\r\n  d3_date_utc.prototype = {\r\n    getDate: function() {\r\n      return this._.getUTCDate();\r\n    },\r\n    getDay: function() {\r\n      return this._.getUTCDay();\r\n    },\r\n    getFullYear: function() {\r\n      return this._.getUTCFullYear();\r\n    },\r\n    getHours: function() {\r\n      return this._.getUTCHours();\r\n    },\r\n    getMilliseconds: function() {\r\n      return this._.getUTCMilliseconds();\r\n    },\r\n    getMinutes: function() {\r\n      return this._.getUTCMinutes();\r\n    },\r\n    getMonth: function() {\r\n      return this._.getUTCMonth();\r\n    },\r\n    getSeconds: function() {\r\n      return this._.getUTCSeconds();\r\n    },\r\n    getTime: function() {\r\n      return this._.getTime();\r\n    },\r\n    getTimezoneOffset: function() {\r\n      return 0;\r\n    },\r\n    valueOf: function() {\r\n      return this._.valueOf();\r\n    },\r\n    setDate: function() {\r\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\r\n    },\r\n    setDay: function() {\r\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\r\n    },\r\n    setFullYear: function() {\r\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\r\n    },\r\n    setHours: function() {\r\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\r\n    },\r\n    setMilliseconds: function() {\r\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\r\n    },\r\n    setMinutes: function() {\r\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\r\n    },\r\n    setMonth: function() {\r\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\r\n    },\r\n    setSeconds: function() {\r\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\r\n    },\r\n    setTime: function() {\r\n      d3_time_prototype.setTime.apply(this._, arguments);\r\n    }\r\n  };\r\n  var d3_time_prototype = Date.prototype;\r\n  function d3_time_interval(local, step, number) {\r\n    function round(date) {\r\n      var d0 = local(date), d1 = offset(d0, 1);\r\n      return date - d0 < d1 - date ? d0 : d1;\r\n    }\r\n    function ceil(date) {\r\n      step(date = local(new d3_date(date - 1)), 1);\r\n      return date;\r\n    }\r\n    function offset(date, k) {\r\n      step(date = new d3_date(+date), k);\r\n      return date;\r\n    }\r\n    function range(t0, t1, dt) {\r\n      var time = ceil(t0), times = [];\r\n      if (dt > 1) {\r\n        while (time < t1) {\r\n          if (!(number(time) % dt)) times.push(new Date(+time));\r\n          step(time, 1);\r\n        }\r\n      } else {\r\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\r\n      }\r\n      return times;\r\n    }\r\n    function range_utc(t0, t1, dt) {\r\n      try {\r\n        d3_date = d3_date_utc;\r\n        var utc = new d3_date_utc();\r\n        utc._ = t0;\r\n        return range(utc, t1, dt);\r\n      } finally {\r\n        d3_date = Date;\r\n      }\r\n    }\r\n    local.floor = local;\r\n    local.round = round;\r\n    local.ceil = ceil;\r\n    local.offset = offset;\r\n    local.range = range;\r\n    var utc = local.utc = d3_time_interval_utc(local);\r\n    utc.floor = utc;\r\n    utc.round = d3_time_interval_utc(round);\r\n    utc.ceil = d3_time_interval_utc(ceil);\r\n    utc.offset = d3_time_interval_utc(offset);\r\n    utc.range = range_utc;\r\n    return local;\r\n  }\r\n  function d3_time_interval_utc(method) {\r\n    return function(date, k) {\r\n      try {\r\n        d3_date = d3_date_utc;\r\n        var utc = new d3_date_utc();\r\n        utc._ = date;\r\n        return method(utc, k)._;\r\n      } finally {\r\n        d3_date = Date;\r\n      }\r\n    };\r\n  }\r\n  d3_time.year = d3_time_interval(function(date) {\r\n    date = d3_time.day(date);\r\n    date.setMonth(0, 1);\r\n    return date;\r\n  }, function(date, offset) {\r\n    date.setFullYear(date.getFullYear() + offset);\r\n  }, function(date) {\r\n    return date.getFullYear();\r\n  });\r\n  d3_time.years = d3_time.year.range;\r\n  d3_time.years.utc = d3_time.year.utc.range;\r\n  d3_time.day = d3_time_interval(function(date) {\r\n    var day = new d3_date(2e3, 0);\r\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\r\n    return day;\r\n  }, function(date, offset) {\r\n    date.setDate(date.getDate() + offset);\r\n  }, function(date) {\r\n    return date.getDate() - 1;\r\n  });\r\n  d3_time.days = d3_time.day.range;\r\n  d3_time.days.utc = d3_time.day.utc.range;\r\n  d3_time.dayOfYear = function(date) {\r\n    var year = d3_time.year(date);\r\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\r\n  };\r\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\r\n    i = 7 - i;\r\n    var interval = d3_time[day] = d3_time_interval(function(date) {\r\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\r\n      return date;\r\n    }, function(date, offset) {\r\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\r\n    }, function(date) {\r\n      var day = d3_time.year(date).getDay();\r\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\r\n    });\r\n    d3_time[day + \"s\"] = interval.range;\r\n    d3_time[day + \"s\"].utc = interval.utc.range;\r\n    d3_time[day + \"OfYear\"] = function(date) {\r\n      var day = d3_time.year(date).getDay();\r\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\r\n    };\r\n  });\r\n  d3_time.week = d3_time.sunday;\r\n  d3_time.weeks = d3_time.sunday.range;\r\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\r\n  d3_time.weekOfYear = d3_time.sundayOfYear;\r\n  function d3_locale_timeFormat(locale) {\r\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\r\n    function d3_time_format(template) {\r\n      var n = template.length;\r\n      function format(date) {\r\n        var string = [], i = -1, j = 0, c, p, f;\r\n        while (++i < n) {\r\n          if (template.charCodeAt(i) === 37) {\r\n            string.push(template.slice(j, i));\r\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\r\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\r\n            string.push(c);\r\n            j = i + 1;\r\n          }\r\n        }\r\n        string.push(template.slice(j, i));\r\n        return string.join(\"\");\r\n      }\r\n      format.parse = function(string) {\r\n        var d = {\r\n          y: 1900,\r\n          m: 0,\r\n          d: 1,\r\n          H: 0,\r\n          M: 0,\r\n          S: 0,\r\n          L: 0,\r\n          Z: null\r\n        }, i = d3_time_parse(d, template, string, 0);\r\n        if (i != string.length) return null;\r\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\r\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\r\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\r\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\r\n          date.setFullYear(d.y, 0, 1);\r\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\r\n        } else date.setFullYear(d.y, d.m, d.d);\r\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\r\n        return localZ ? date._ : date;\r\n      };\r\n      format.toString = function() {\r\n        return template;\r\n      };\r\n      return format;\r\n    }\r\n    function d3_time_parse(date, template, string, j) {\r\n      var c, p, t, i = 0, n = template.length, m = string.length;\r\n      while (i < n) {\r\n        if (j >= m) return -1;\r\n        c = template.charCodeAt(i++);\r\n        if (c === 37) {\r\n          t = template.charAt(i++);\r\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\r\n          if (!p || (j = p(date, string, j)) < 0) return -1;\r\n        } else if (c != string.charCodeAt(j++)) {\r\n          return -1;\r\n        }\r\n      }\r\n      return j;\r\n    }\r\n    d3_time_format.utc = function(template) {\r\n      var local = d3_time_format(template);\r\n      function format(date) {\r\n        try {\r\n          d3_date = d3_date_utc;\r\n          var utc = new d3_date();\r\n          utc._ = date;\r\n          return local(utc);\r\n        } finally {\r\n          d3_date = Date;\r\n        }\r\n      }\r\n      format.parse = function(string) {\r\n        try {\r\n          d3_date = d3_date_utc;\r\n          var date = local.parse(string);\r\n          return date && date._;\r\n        } finally {\r\n          d3_date = Date;\r\n        }\r\n      };\r\n      format.toString = local.toString;\r\n      return format;\r\n    };\r\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\r\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\r\n    locale_periods.forEach(function(p, i) {\r\n      d3_time_periodLookup.set(p.toLowerCase(), i);\r\n    });\r\n    var d3_time_formats = {\r\n      a: function(d) {\r\n        return locale_shortDays[d.getDay()];\r\n      },\r\n      A: function(d) {\r\n        return locale_days[d.getDay()];\r\n      },\r\n      b: function(d) {\r\n        return locale_shortMonths[d.getMonth()];\r\n      },\r\n      B: function(d) {\r\n        return locale_months[d.getMonth()];\r\n      },\r\n      c: d3_time_format(locale_dateTime),\r\n      d: function(d, p) {\r\n        return d3_time_formatPad(d.getDate(), p, 2);\r\n      },\r\n      e: function(d, p) {\r\n        return d3_time_formatPad(d.getDate(), p, 2);\r\n      },\r\n      H: function(d, p) {\r\n        return d3_time_formatPad(d.getHours(), p, 2);\r\n      },\r\n      I: function(d, p) {\r\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\r\n      },\r\n      j: function(d, p) {\r\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\r\n      },\r\n      L: function(d, p) {\r\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\r\n      },\r\n      m: function(d, p) {\r\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\r\n      },\r\n      M: function(d, p) {\r\n        return d3_time_formatPad(d.getMinutes(), p, 2);\r\n      },\r\n      p: function(d) {\r\n        return locale_periods[+(d.getHours() >= 12)];\r\n      },\r\n      S: function(d, p) {\r\n        return d3_time_formatPad(d.getSeconds(), p, 2);\r\n      },\r\n      U: function(d, p) {\r\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\r\n      },\r\n      w: function(d) {\r\n        return d.getDay();\r\n      },\r\n      W: function(d, p) {\r\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\r\n      },\r\n      x: d3_time_format(locale_date),\r\n      X: d3_time_format(locale_time),\r\n      y: function(d, p) {\r\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\r\n      },\r\n      Y: function(d, p) {\r\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\r\n      },\r\n      Z: d3_time_zone,\r\n      \"%\": function() {\r\n        return \"%\";\r\n      }\r\n    };\r\n    var d3_time_parsers = {\r\n      a: d3_time_parseWeekdayAbbrev,\r\n      A: d3_time_parseWeekday,\r\n      b: d3_time_parseMonthAbbrev,\r\n      B: d3_time_parseMonth,\r\n      c: d3_time_parseLocaleFull,\r\n      d: d3_time_parseDay,\r\n      e: d3_time_parseDay,\r\n      H: d3_time_parseHour24,\r\n      I: d3_time_parseHour24,\r\n      j: d3_time_parseDayOfYear,\r\n      L: d3_time_parseMilliseconds,\r\n      m: d3_time_parseMonthNumber,\r\n      M: d3_time_parseMinutes,\r\n      p: d3_time_parseAmPm,\r\n      S: d3_time_parseSeconds,\r\n      U: d3_time_parseWeekNumberSunday,\r\n      w: d3_time_parseWeekdayNumber,\r\n      W: d3_time_parseWeekNumberMonday,\r\n      x: d3_time_parseLocaleDate,\r\n      X: d3_time_parseLocaleTime,\r\n      y: d3_time_parseYear,\r\n      Y: d3_time_parseFullYear,\r\n      Z: d3_time_parseZone,\r\n      \"%\": d3_time_parseLiteralPercent\r\n    };\r\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\r\n      d3_time_dayAbbrevRe.lastIndex = 0;\r\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\r\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n    }\r\n    function d3_time_parseWeekday(date, string, i) {\r\n      d3_time_dayRe.lastIndex = 0;\r\n      var n = d3_time_dayRe.exec(string.slice(i));\r\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n    }\r\n    function d3_time_parseMonthAbbrev(date, string, i) {\r\n      d3_time_monthAbbrevRe.lastIndex = 0;\r\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\r\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n    }\r\n    function d3_time_parseMonth(date, string, i) {\r\n      d3_time_monthRe.lastIndex = 0;\r\n      var n = d3_time_monthRe.exec(string.slice(i));\r\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\r\n    }\r\n    function d3_time_parseLocaleFull(date, string, i) {\r\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\r\n    }\r\n    function d3_time_parseLocaleDate(date, string, i) {\r\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\r\n    }\r\n    function d3_time_parseLocaleTime(date, string, i) {\r\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\r\n    }\r\n    function d3_time_parseAmPm(date, string, i) {\r\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\r\n      return n == null ? -1 : (date.p = n, i);\r\n    }\r\n    return d3_time_format;\r\n  }\r\n  var d3_time_formatPads = {\r\n    \"-\": \"\",\r\n    _: \" \",\r\n    \"0\": \"0\"\r\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\r\n  function d3_time_formatPad(value, fill, width) {\r\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\r\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\r\n  }\r\n  function d3_time_formatRe(names) {\r\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\r\n  }\r\n  function d3_time_formatLookup(names) {\r\n    var map = new d3_Map(), i = -1, n = names.length;\r\n    while (++i < n) map.set(names[i].toLowerCase(), i);\r\n    return map;\r\n  }\r\n  function d3_time_parseWeekdayNumber(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\r\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseWeekNumberSunday(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i));\r\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseWeekNumberMonday(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i));\r\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseFullYear(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\r\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseYear(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseZone(date, string, i) {\r\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \r\n    i + 5) : -1;\r\n  }\r\n  function d3_time_expandYear(d) {\r\n    return d + (d > 68 ? 1900 : 2e3);\r\n  }\r\n  function d3_time_parseMonthNumber(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseDay(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseDayOfYear(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\r\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseHour24(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseMinutes(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseSeconds(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\r\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_parseMilliseconds(date, string, i) {\r\n    d3_time_numberRe.lastIndex = 0;\r\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\r\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\r\n  }\r\n  function d3_time_zone(d) {\r\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\r\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\r\n  }\r\n  function d3_time_parseLiteralPercent(date, string, i) {\r\n    d3_time_percentRe.lastIndex = 0;\r\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\r\n    return n ? i + n[0].length : -1;\r\n  }\r\n  function d3_time_formatMulti(formats) {\r\n    var n = formats.length, i = -1;\r\n    while (++i < n) formats[i][0] = this(formats[i][0]);\r\n    return function(date) {\r\n      var i = 0, f = formats[i];\r\n      while (!f[1](date)) f = formats[++i];\r\n      return f[0](date);\r\n    };\r\n  }\r\n  d3.locale = function(locale) {\r\n    return {\r\n      numberFormat: d3_locale_numberFormat(locale),\r\n      timeFormat: d3_locale_timeFormat(locale)\r\n    };\r\n  };\r\n  var d3_locale_enUS = d3.locale({\r\n    decimal: \".\",\r\n    thousands: \",\",\r\n    grouping: [ 3 ],\r\n    currency: [ \"$\", \"\" ],\r\n    dateTime: \"%a %b %e %X %Y\",\r\n    date: \"%m/%d/%Y\",\r\n    time: \"%H:%M:%S\",\r\n    periods: [ \"AM\", \"PM\" ],\r\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\r\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\r\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\r\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\r\n  });\r\n  d3.format = d3_locale_enUS.numberFormat;\r\n  d3.geo = {};\r\n  function d3_adder() {}\r\n  d3_adder.prototype = {\r\n    s: 0,\r\n    t: 0,\r\n    add: function(y) {\r\n      d3_adderSum(y, this.t, d3_adderTemp);\r\n      d3_adderSum(d3_adderTemp.s, this.s, this);\r\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\r\n    },\r\n    reset: function() {\r\n      this.s = this.t = 0;\r\n    },\r\n    valueOf: function() {\r\n      return this.s;\r\n    }\r\n  };\r\n  var d3_adderTemp = new d3_adder();\r\n  function d3_adderSum(a, b, o) {\r\n    var x = o.s = a + b, bv = x - a, av = x - bv;\r\n    o.t = a - av + (b - bv);\r\n  }\r\n  d3.geo.stream = function(object, listener) {\r\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\r\n      d3_geo_streamObjectType[object.type](object, listener);\r\n    } else {\r\n      d3_geo_streamGeometry(object, listener);\r\n    }\r\n  };\r\n  function d3_geo_streamGeometry(geometry, listener) {\r\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\r\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\r\n    }\r\n  }\r\n  var d3_geo_streamObjectType = {\r\n    Feature: function(feature, listener) {\r\n      d3_geo_streamGeometry(feature.geometry, listener);\r\n    },\r\n    FeatureCollection: function(object, listener) {\r\n      var features = object.features, i = -1, n = features.length;\r\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\r\n    }\r\n  };\r\n  var d3_geo_streamGeometryType = {\r\n    Sphere: function(object, listener) {\r\n      listener.sphere();\r\n    },\r\n    Point: function(object, listener) {\r\n      object = object.coordinates;\r\n      listener.point(object[0], object[1], object[2]);\r\n    },\r\n    MultiPoint: function(object, listener) {\r\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\r\n    },\r\n    LineString: function(object, listener) {\r\n      d3_geo_streamLine(object.coordinates, listener, 0);\r\n    },\r\n    MultiLineString: function(object, listener) {\r\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\r\n    },\r\n    Polygon: function(object, listener) {\r\n      d3_geo_streamPolygon(object.coordinates, listener);\r\n    },\r\n    MultiPolygon: function(object, listener) {\r\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\r\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\r\n    },\r\n    GeometryCollection: function(object, listener) {\r\n      var geometries = object.geometries, i = -1, n = geometries.length;\r\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\r\n    }\r\n  };\r\n  function d3_geo_streamLine(coordinates, listener, closed) {\r\n    var i = -1, n = coordinates.length - closed, coordinate;\r\n    listener.lineStart();\r\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\r\n    listener.lineEnd();\r\n  }\r\n  function d3_geo_streamPolygon(coordinates, listener) {\r\n    var i = -1, n = coordinates.length;\r\n    listener.polygonStart();\r\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\r\n    listener.polygonEnd();\r\n  }\r\n  d3.geo.area = function(object) {\r\n    d3_geo_areaSum = 0;\r\n    d3.geo.stream(object, d3_geo_area);\r\n    return d3_geo_areaSum;\r\n  };\r\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\r\n  var d3_geo_area = {\r\n    sphere: function() {\r\n      d3_geo_areaSum += 4 * π;\r\n    },\r\n    point: d3_noop,\r\n    lineStart: d3_noop,\r\n    lineEnd: d3_noop,\r\n    polygonStart: function() {\r\n      d3_geo_areaRingSum.reset();\r\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\r\n    },\r\n    polygonEnd: function() {\r\n      var area = 2 * d3_geo_areaRingSum;\r\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\r\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\r\n    }\r\n  };\r\n  function d3_geo_areaRingStart() {\r\n    var λ00, φ00, λ0, cosφ0, sinφ0;\r\n    d3_geo_area.point = function(λ, φ) {\r\n      d3_geo_area.point = nextPoint;\r\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \r\n      sinφ0 = Math.sin(φ);\r\n    };\r\n    function nextPoint(λ, φ) {\r\n      λ *= d3_radians;\r\n      φ = φ * d3_radians / 2 + π / 4;\r\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\r\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\r\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\r\n    }\r\n    d3_geo_area.lineEnd = function() {\r\n      nextPoint(λ00, φ00);\r\n    };\r\n  }\r\n  function d3_geo_cartesian(spherical) {\r\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\r\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\r\n  }\r\n  function d3_geo_cartesianDot(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n  }\r\n  function d3_geo_cartesianCross(a, b) {\r\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\r\n  }\r\n  function d3_geo_cartesianAdd(a, b) {\r\n    a[0] += b[0];\r\n    a[1] += b[1];\r\n    a[2] += b[2];\r\n  }\r\n  function d3_geo_cartesianScale(vector, k) {\r\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\r\n  }\r\n  function d3_geo_cartesianNormalize(d) {\r\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\r\n    d[0] /= l;\r\n    d[1] /= l;\r\n    d[2] /= l;\r\n  }\r\n  function d3_geo_spherical(cartesian) {\r\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\r\n  }\r\n  function d3_geo_sphericalEqual(a, b) {\r\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\r\n  }\r\n  d3.geo.bounds = function() {\r\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\r\n    var bound = {\r\n      point: point,\r\n      lineStart: lineStart,\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        bound.point = ringPoint;\r\n        bound.lineStart = ringStart;\r\n        bound.lineEnd = ringEnd;\r\n        dλSum = 0;\r\n        d3_geo_area.polygonStart();\r\n      },\r\n      polygonEnd: function() {\r\n        d3_geo_area.polygonEnd();\r\n        bound.point = point;\r\n        bound.lineStart = lineStart;\r\n        bound.lineEnd = lineEnd;\r\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\r\n        range[0] = λ0, range[1] = λ1;\r\n      }\r\n    };\r\n    function point(λ, φ) {\r\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\r\n      if (φ < φ0) φ0 = φ;\r\n      if (φ > φ1) φ1 = φ;\r\n    }\r\n    function linePoint(λ, φ) {\r\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\r\n      if (p0) {\r\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\r\n        d3_geo_cartesianNormalize(inflection);\r\n        inflection = d3_geo_spherical(inflection);\r\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\r\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\r\n          var φi = inflection[1] * d3_degrees;\r\n          if (φi > φ1) φ1 = φi;\r\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\r\n          var φi = -inflection[1] * d3_degrees;\r\n          if (φi < φ0) φ0 = φi;\r\n        } else {\r\n          if (φ < φ0) φ0 = φ;\r\n          if (φ > φ1) φ1 = φ;\r\n        }\r\n        if (antimeridian) {\r\n          if (λ < λ_) {\r\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\r\n          } else {\r\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\r\n          }\r\n        } else {\r\n          if (λ1 >= λ0) {\r\n            if (λ < λ0) λ0 = λ;\r\n            if (λ > λ1) λ1 = λ;\r\n          } else {\r\n            if (λ > λ_) {\r\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\r\n            } else {\r\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        point(λ, φ);\r\n      }\r\n      p0 = p, λ_ = λ;\r\n    }\r\n    function lineStart() {\r\n      bound.point = linePoint;\r\n    }\r\n    function lineEnd() {\r\n      range[0] = λ0, range[1] = λ1;\r\n      bound.point = point;\r\n      p0 = null;\r\n    }\r\n    function ringPoint(λ, φ) {\r\n      if (p0) {\r\n        var dλ = λ - λ_;\r\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\r\n      } else λ__ = λ, φ__ = φ;\r\n      d3_geo_area.point(λ, φ);\r\n      linePoint(λ, φ);\r\n    }\r\n    function ringStart() {\r\n      d3_geo_area.lineStart();\r\n    }\r\n    function ringEnd() {\r\n      ringPoint(λ__, φ__);\r\n      d3_geo_area.lineEnd();\r\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\r\n      range[0] = λ0, range[1] = λ1;\r\n      p0 = null;\r\n    }\r\n    function angle(λ0, λ1) {\r\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\r\n    }\r\n    function compareRanges(a, b) {\r\n      return a[0] - b[0];\r\n    }\r\n    function withinRange(x, range) {\r\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\r\n    }\r\n    return function(feature) {\r\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\r\n      ranges = [];\r\n      d3.geo.stream(feature, bound);\r\n      var n = ranges.length;\r\n      if (n) {\r\n        ranges.sort(compareRanges);\r\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\r\n          b = ranges[i];\r\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\r\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\r\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\r\n          } else {\r\n            merged.push(a = b);\r\n          }\r\n        }\r\n        var best = -Infinity, dλ;\r\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\r\n          b = merged[i];\r\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\r\n        }\r\n      }\r\n      ranges = range = null;\r\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\r\n    };\r\n  }();\r\n  d3.geo.centroid = function(object) {\r\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\r\n    d3.geo.stream(object, d3_geo_centroid);\r\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\r\n    if (m < ε2) {\r\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\r\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\r\n      m = x * x + y * y + z * z;\r\n      if (m < ε2) return [ NaN, NaN ];\r\n    }\r\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\r\n  };\r\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\r\n  var d3_geo_centroid = {\r\n    sphere: d3_noop,\r\n    point: d3_geo_centroidPoint,\r\n    lineStart: d3_geo_centroidLineStart,\r\n    lineEnd: d3_geo_centroidLineEnd,\r\n    polygonStart: function() {\r\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\r\n    },\r\n    polygonEnd: function() {\r\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\r\n    }\r\n  };\r\n  function d3_geo_centroidPoint(λ, φ) {\r\n    λ *= d3_radians;\r\n    var cosφ = Math.cos(φ *= d3_radians);\r\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\r\n  }\r\n  function d3_geo_centroidPointXYZ(x, y, z) {\r\n    ++d3_geo_centroidW0;\r\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\r\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\r\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\r\n  }\r\n  function d3_geo_centroidLineStart() {\r\n    var x0, y0, z0;\r\n    d3_geo_centroid.point = function(λ, φ) {\r\n      λ *= d3_radians;\r\n      var cosφ = Math.cos(φ *= d3_radians);\r\n      x0 = cosφ * Math.cos(λ);\r\n      y0 = cosφ * Math.sin(λ);\r\n      z0 = Math.sin(φ);\r\n      d3_geo_centroid.point = nextPoint;\r\n      d3_geo_centroidPointXYZ(x0, y0, z0);\r\n    };\r\n    function nextPoint(λ, φ) {\r\n      λ *= d3_radians;\r\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\r\n      d3_geo_centroidW1 += w;\r\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\r\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\r\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\r\n      d3_geo_centroidPointXYZ(x0, y0, z0);\r\n    }\r\n  }\r\n  function d3_geo_centroidLineEnd() {\r\n    d3_geo_centroid.point = d3_geo_centroidPoint;\r\n  }\r\n  function d3_geo_centroidRingStart() {\r\n    var λ00, φ00, x0, y0, z0;\r\n    d3_geo_centroid.point = function(λ, φ) {\r\n      λ00 = λ, φ00 = φ;\r\n      d3_geo_centroid.point = nextPoint;\r\n      λ *= d3_radians;\r\n      var cosφ = Math.cos(φ *= d3_radians);\r\n      x0 = cosφ * Math.cos(λ);\r\n      y0 = cosφ * Math.sin(λ);\r\n      z0 = Math.sin(φ);\r\n      d3_geo_centroidPointXYZ(x0, y0, z0);\r\n    };\r\n    d3_geo_centroid.lineEnd = function() {\r\n      nextPoint(λ00, φ00);\r\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\r\n      d3_geo_centroid.point = d3_geo_centroidPoint;\r\n    };\r\n    function nextPoint(λ, φ) {\r\n      λ *= d3_radians;\r\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\r\n      d3_geo_centroidX2 += v * cx;\r\n      d3_geo_centroidY2 += v * cy;\r\n      d3_geo_centroidZ2 += v * cz;\r\n      d3_geo_centroidW1 += w;\r\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\r\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\r\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\r\n      d3_geo_centroidPointXYZ(x0, y0, z0);\r\n    }\r\n  }\r\n  function d3_geo_compose(a, b) {\r\n    function compose(x, y) {\r\n      return x = a(x, y), b(x[0], x[1]);\r\n    }\r\n    if (a.invert && b.invert) compose.invert = function(x, y) {\r\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\r\n    };\r\n    return compose;\r\n  }\r\n  function d3_true() {\r\n    return true;\r\n  }\r\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\r\n    var subject = [], clip = [];\r\n    segments.forEach(function(segment) {\r\n      if ((n = segment.length - 1) <= 0) return;\r\n      var n, p0 = segment[0], p1 = segment[n];\r\n      if (d3_geo_sphericalEqual(p0, p1)) {\r\n        listener.lineStart();\r\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\r\n        listener.lineEnd();\r\n        return;\r\n      }\r\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\r\n      a.o = b;\r\n      subject.push(a);\r\n      clip.push(b);\r\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\r\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\r\n      a.o = b;\r\n      subject.push(a);\r\n      clip.push(b);\r\n    });\r\n    clip.sort(compare);\r\n    d3_geo_clipPolygonLinkCircular(subject);\r\n    d3_geo_clipPolygonLinkCircular(clip);\r\n    if (!subject.length) return;\r\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\r\n      clip[i].e = entry = !entry;\r\n    }\r\n    var start = subject[0], points, point;\r\n    while (1) {\r\n      var current = start, isSubject = true;\r\n      while (current.v) if ((current = current.n) === start) return;\r\n      points = current.z;\r\n      listener.lineStart();\r\n      do {\r\n        current.v = current.o.v = true;\r\n        if (current.e) {\r\n          if (isSubject) {\r\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\r\n          } else {\r\n            interpolate(current.x, current.n.x, 1, listener);\r\n          }\r\n          current = current.n;\r\n        } else {\r\n          if (isSubject) {\r\n            points = current.p.z;\r\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\r\n          } else {\r\n            interpolate(current.x, current.p.x, -1, listener);\r\n          }\r\n          current = current.p;\r\n        }\r\n        current = current.o;\r\n        points = current.z;\r\n        isSubject = !isSubject;\r\n      } while (!current.v);\r\n      listener.lineEnd();\r\n    }\r\n  }\r\n  function d3_geo_clipPolygonLinkCircular(array) {\r\n    if (!(n = array.length)) return;\r\n    var n, i = 0, a = array[0], b;\r\n    while (++i < n) {\r\n      a.n = b = array[i];\r\n      b.p = a;\r\n      a = b;\r\n    }\r\n    a.n = b = array[0];\r\n    b.p = a;\r\n  }\r\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\r\n    this.x = point;\r\n    this.z = points;\r\n    this.o = other;\r\n    this.e = entry;\r\n    this.v = false;\r\n    this.n = this.p = null;\r\n  }\r\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\r\n    return function(rotate, listener) {\r\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\r\n      var clip = {\r\n        point: point,\r\n        lineStart: lineStart,\r\n        lineEnd: lineEnd,\r\n        polygonStart: function() {\r\n          clip.point = pointRing;\r\n          clip.lineStart = ringStart;\r\n          clip.lineEnd = ringEnd;\r\n          segments = [];\r\n          polygon = [];\r\n        },\r\n        polygonEnd: function() {\r\n          clip.point = point;\r\n          clip.lineStart = lineStart;\r\n          clip.lineEnd = lineEnd;\r\n          segments = d3.merge(segments);\r\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\r\n          if (segments.length) {\r\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\r\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\r\n          } else if (clipStartInside) {\r\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\r\n            listener.lineStart();\r\n            interpolate(null, null, 1, listener);\r\n            listener.lineEnd();\r\n          }\r\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\r\n          segments = polygon = null;\r\n        },\r\n        sphere: function() {\r\n          listener.polygonStart();\r\n          listener.lineStart();\r\n          interpolate(null, null, 1, listener);\r\n          listener.lineEnd();\r\n          listener.polygonEnd();\r\n        }\r\n      };\r\n      function point(λ, φ) {\r\n        var point = rotate(λ, φ);\r\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\r\n      }\r\n      function pointLine(λ, φ) {\r\n        var point = rotate(λ, φ);\r\n        line.point(point[0], point[1]);\r\n      }\r\n      function lineStart() {\r\n        clip.point = pointLine;\r\n        line.lineStart();\r\n      }\r\n      function lineEnd() {\r\n        clip.point = point;\r\n        line.lineEnd();\r\n      }\r\n      var segments;\r\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\r\n      function pointRing(λ, φ) {\r\n        ring.push([ λ, φ ]);\r\n        var point = rotate(λ, φ);\r\n        ringListener.point(point[0], point[1]);\r\n      }\r\n      function ringStart() {\r\n        ringListener.lineStart();\r\n        ring = [];\r\n      }\r\n      function ringEnd() {\r\n        pointRing(ring[0][0], ring[0][1]);\r\n        ringListener.lineEnd();\r\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\r\n        ring.pop();\r\n        polygon.push(ring);\r\n        ring = null;\r\n        if (!n) return;\r\n        if (clean & 1) {\r\n          segment = ringSegments[0];\r\n          var n = segment.length - 1, i = -1, point;\r\n          if (n > 0) {\r\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\r\n            listener.lineStart();\r\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\r\n            listener.lineEnd();\r\n          }\r\n          return;\r\n        }\r\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\r\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\r\n      }\r\n      return clip;\r\n    };\r\n  }\r\n  function d3_geo_clipSegmentLength1(segment) {\r\n    return segment.length > 1;\r\n  }\r\n  function d3_geo_clipBufferListener() {\r\n    var lines = [], line;\r\n    return {\r\n      lineStart: function() {\r\n        lines.push(line = []);\r\n      },\r\n      point: function(λ, φ) {\r\n        line.push([ λ, φ ]);\r\n      },\r\n      lineEnd: d3_noop,\r\n      buffer: function() {\r\n        var buffer = lines;\r\n        lines = [];\r\n        line = null;\r\n        return buffer;\r\n      },\r\n      rejoin: function() {\r\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\r\n      }\r\n    };\r\n  }\r\n  function d3_geo_clipSort(a, b) {\r\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\r\n  }\r\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\r\n  function d3_geo_clipAntimeridianLine(listener) {\r\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\r\n    return {\r\n      lineStart: function() {\r\n        listener.lineStart();\r\n        clean = 1;\r\n      },\r\n      point: function(λ1, φ1) {\r\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\r\n        if (abs(dλ - π) < ε) {\r\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\r\n          listener.point(sλ0, φ0);\r\n          listener.lineEnd();\r\n          listener.lineStart();\r\n          listener.point(sλ1, φ0);\r\n          listener.point(λ1, φ0);\r\n          clean = 0;\r\n        } else if (sλ0 !== sλ1 && dλ >= π) {\r\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\r\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\r\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\r\n          listener.point(sλ0, φ0);\r\n          listener.lineEnd();\r\n          listener.lineStart();\r\n          listener.point(sλ1, φ0);\r\n          clean = 0;\r\n        }\r\n        listener.point(λ0 = λ1, φ0 = φ1);\r\n        sλ0 = sλ1;\r\n      },\r\n      lineEnd: function() {\r\n        listener.lineEnd();\r\n        λ0 = φ0 = NaN;\r\n      },\r\n      clean: function() {\r\n        return 2 - clean;\r\n      }\r\n    };\r\n  }\r\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\r\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\r\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\r\n  }\r\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\r\n    var φ;\r\n    if (from == null) {\r\n      φ = direction * halfπ;\r\n      listener.point(-π, φ);\r\n      listener.point(0, φ);\r\n      listener.point(π, φ);\r\n      listener.point(π, 0);\r\n      listener.point(π, -φ);\r\n      listener.point(0, -φ);\r\n      listener.point(-π, -φ);\r\n      listener.point(-π, 0);\r\n      listener.point(-π, φ);\r\n    } else if (abs(from[0] - to[0]) > ε) {\r\n      var s = from[0] < to[0] ? π : -π;\r\n      φ = direction * s / 2;\r\n      listener.point(-s, φ);\r\n      listener.point(0, φ);\r\n      listener.point(s, φ);\r\n    } else {\r\n      listener.point(to[0], to[1]);\r\n    }\r\n  }\r\n  function d3_geo_pointInPolygon(point, polygon) {\r\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\r\n    d3_geo_areaRingSum.reset();\r\n    for (var i = 0, n = polygon.length; i < n; ++i) {\r\n      var ring = polygon[i], m = ring.length;\r\n      if (!m) continue;\r\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\r\n      while (true) {\r\n        if (j === m) j = 0;\r\n        point = ring[j];\r\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\r\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\r\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\r\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\r\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\r\n          d3_geo_cartesianNormalize(arc);\r\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\r\n          d3_geo_cartesianNormalize(intersection);\r\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\r\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\r\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\r\n          }\r\n        }\r\n        if (!j++) break;\r\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\r\n      }\r\n    }\r\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\r\n  }\r\n  function d3_geo_clipCircle(radius) {\r\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\r\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\r\n    function visible(λ, φ) {\r\n      return Math.cos(λ) * Math.cos(φ) > cr;\r\n    }\r\n    function clipLine(listener) {\r\n      var point0, c0, v0, v00, clean;\r\n      return {\r\n        lineStart: function() {\r\n          v00 = v0 = false;\r\n          clean = 1;\r\n        },\r\n        point: function(λ, φ) {\r\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\r\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\r\n          if (v !== v0) {\r\n            point2 = intersect(point0, point1);\r\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\r\n              point1[0] += ε;\r\n              point1[1] += ε;\r\n              v = visible(point1[0], point1[1]);\r\n            }\r\n          }\r\n          if (v !== v0) {\r\n            clean = 0;\r\n            if (v) {\r\n              listener.lineStart();\r\n              point2 = intersect(point1, point0);\r\n              listener.point(point2[0], point2[1]);\r\n            } else {\r\n              point2 = intersect(point0, point1);\r\n              listener.point(point2[0], point2[1]);\r\n              listener.lineEnd();\r\n            }\r\n            point0 = point2;\r\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\r\n            var t;\r\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\r\n              clean = 0;\r\n              if (smallRadius) {\r\n                listener.lineStart();\r\n                listener.point(t[0][0], t[0][1]);\r\n                listener.point(t[1][0], t[1][1]);\r\n                listener.lineEnd();\r\n              } else {\r\n                listener.point(t[1][0], t[1][1]);\r\n                listener.lineEnd();\r\n                listener.lineStart();\r\n                listener.point(t[0][0], t[0][1]);\r\n              }\r\n            }\r\n          }\r\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\r\n            listener.point(point1[0], point1[1]);\r\n          }\r\n          point0 = point1, v0 = v, c0 = c;\r\n        },\r\n        lineEnd: function() {\r\n          if (v0) listener.lineEnd();\r\n          point0 = null;\r\n        },\r\n        clean: function() {\r\n          return clean | (v00 && v0) << 1;\r\n        }\r\n      };\r\n    }\r\n    function intersect(a, b, two) {\r\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\r\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\r\n      if (!determinant) return !two && a;\r\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\r\n      d3_geo_cartesianAdd(A, B);\r\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\r\n      if (t2 < 0) return;\r\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\r\n      d3_geo_cartesianAdd(q, A);\r\n      q = d3_geo_spherical(q);\r\n      if (!two) return q;\r\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\r\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\r\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\r\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\r\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\r\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\r\n        d3_geo_cartesianAdd(q1, A);\r\n        return [ q, d3_geo_spherical(q1) ];\r\n      }\r\n    }\r\n    function code(λ, φ) {\r\n      var r = smallRadius ? radius : π - radius, code = 0;\r\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\r\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\r\n      return code;\r\n    }\r\n  }\r\n  function d3_geom_clipLine(x0, y0, x1, y1) {\r\n    return function(line) {\r\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\r\n      r = x0 - ax;\r\n      if (!dx && r > 0) return;\r\n      r /= dx;\r\n      if (dx < 0) {\r\n        if (r < t0) return;\r\n        if (r < t1) t1 = r;\r\n      } else if (dx > 0) {\r\n        if (r > t1) return;\r\n        if (r > t0) t0 = r;\r\n      }\r\n      r = x1 - ax;\r\n      if (!dx && r < 0) return;\r\n      r /= dx;\r\n      if (dx < 0) {\r\n        if (r > t1) return;\r\n        if (r > t0) t0 = r;\r\n      } else if (dx > 0) {\r\n        if (r < t0) return;\r\n        if (r < t1) t1 = r;\r\n      }\r\n      r = y0 - ay;\r\n      if (!dy && r > 0) return;\r\n      r /= dy;\r\n      if (dy < 0) {\r\n        if (r < t0) return;\r\n        if (r < t1) t1 = r;\r\n      } else if (dy > 0) {\r\n        if (r > t1) return;\r\n        if (r > t0) t0 = r;\r\n      }\r\n      r = y1 - ay;\r\n      if (!dy && r < 0) return;\r\n      r /= dy;\r\n      if (dy < 0) {\r\n        if (r > t1) return;\r\n        if (r > t0) t0 = r;\r\n      } else if (dy > 0) {\r\n        if (r < t0) return;\r\n        if (r < t1) t1 = r;\r\n      }\r\n      if (t0 > 0) line.a = {\r\n        x: ax + t0 * dx,\r\n        y: ay + t0 * dy\r\n      };\r\n      if (t1 < 1) line.b = {\r\n        x: ax + t1 * dx,\r\n        y: ay + t1 * dy\r\n      };\r\n      return line;\r\n    };\r\n  }\r\n  var d3_geo_clipExtentMAX = 1e9;\r\n  d3.geo.clipExtent = function() {\r\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\r\n      stream: function(output) {\r\n        if (stream) stream.valid = false;\r\n        stream = clip(output);\r\n        stream.valid = true;\r\n        return stream;\r\n      },\r\n      extent: function(_) {\r\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\r\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\r\n        if (stream) stream.valid = false, stream = null;\r\n        return clipExtent;\r\n      }\r\n    };\r\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\r\n  };\r\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\r\n    return function(listener) {\r\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\r\n      var clip = {\r\n        point: point,\r\n        lineStart: lineStart,\r\n        lineEnd: lineEnd,\r\n        polygonStart: function() {\r\n          listener = bufferListener;\r\n          segments = [];\r\n          polygon = [];\r\n          clean = true;\r\n        },\r\n        polygonEnd: function() {\r\n          listener = listener_;\r\n          segments = d3.merge(segments);\r\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\r\n          if (inside || visible) {\r\n            listener.polygonStart();\r\n            if (inside) {\r\n              listener.lineStart();\r\n              interpolate(null, null, 1, listener);\r\n              listener.lineEnd();\r\n            }\r\n            if (visible) {\r\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\r\n            }\r\n            listener.polygonEnd();\r\n          }\r\n          segments = polygon = ring = null;\r\n        }\r\n      };\r\n      function insidePolygon(p) {\r\n        var wn = 0, n = polygon.length, y = p[1];\r\n        for (var i = 0; i < n; ++i) {\r\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\r\n            b = v[j];\r\n            if (a[1] <= y) {\r\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\r\n            } else {\r\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\r\n            }\r\n            a = b;\r\n          }\r\n        }\r\n        return wn !== 0;\r\n      }\r\n      function interpolate(from, to, direction, listener) {\r\n        var a = 0, a1 = 0;\r\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\r\n          do {\r\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\r\n          } while ((a = (a + direction + 4) % 4) !== a1);\r\n        } else {\r\n          listener.point(to[0], to[1]);\r\n        }\r\n      }\r\n      function pointVisible(x, y) {\r\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\r\n      }\r\n      function point(x, y) {\r\n        if (pointVisible(x, y)) listener.point(x, y);\r\n      }\r\n      var x__, y__, v__, x_, y_, v_, first, clean;\r\n      function lineStart() {\r\n        clip.point = linePoint;\r\n        if (polygon) polygon.push(ring = []);\r\n        first = true;\r\n        v_ = false;\r\n        x_ = y_ = NaN;\r\n      }\r\n      function lineEnd() {\r\n        if (segments) {\r\n          linePoint(x__, y__);\r\n          if (v__ && v_) bufferListener.rejoin();\r\n          segments.push(bufferListener.buffer());\r\n        }\r\n        clip.point = point;\r\n        if (v_) listener.lineEnd();\r\n      }\r\n      function linePoint(x, y) {\r\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\r\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\r\n        var v = pointVisible(x, y);\r\n        if (polygon) ring.push([ x, y ]);\r\n        if (first) {\r\n          x__ = x, y__ = y, v__ = v;\r\n          first = false;\r\n          if (v) {\r\n            listener.lineStart();\r\n            listener.point(x, y);\r\n          }\r\n        } else {\r\n          if (v && v_) listener.point(x, y); else {\r\n            var l = {\r\n              a: {\r\n                x: x_,\r\n                y: y_\r\n              },\r\n              b: {\r\n                x: x,\r\n                y: y\r\n              }\r\n            };\r\n            if (clipLine(l)) {\r\n              if (!v_) {\r\n                listener.lineStart();\r\n                listener.point(l.a.x, l.a.y);\r\n              }\r\n              listener.point(l.b.x, l.b.y);\r\n              if (!v) listener.lineEnd();\r\n              clean = false;\r\n            } else if (v) {\r\n              listener.lineStart();\r\n              listener.point(x, y);\r\n              clean = false;\r\n            }\r\n          }\r\n        }\r\n        x_ = x, y_ = y, v_ = v;\r\n      }\r\n      return clip;\r\n    };\r\n    function corner(p, direction) {\r\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\r\n    }\r\n    function compare(a, b) {\r\n      return comparePoints(a.x, b.x);\r\n    }\r\n    function comparePoints(a, b) {\r\n      var ca = corner(a, 1), cb = corner(b, 1);\r\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\r\n    }\r\n  }\r\n  function d3_geo_conic(projectAt) {\r\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\r\n    p.parallels = function(_) {\r\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\r\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\r\n    };\r\n    return p;\r\n  }\r\n  function d3_geo_conicEqualArea(φ0, φ1) {\r\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\r\n    function forward(λ, φ) {\r\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\r\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ0_y = ρ0 - y;\r\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.conicEqualArea = function() {\r\n    return d3_geo_conic(d3_geo_conicEqualArea);\r\n  }).raw = d3_geo_conicEqualArea;\r\n  d3.geo.albers = function() {\r\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\r\n  };\r\n  d3.geo.albersUsa = function() {\r\n    var lower48 = d3.geo.albers();\r\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\r\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\r\n    var point, pointStream = {\r\n      point: function(x, y) {\r\n        point = [ x, y ];\r\n      }\r\n    }, lower48Point, alaskaPoint, hawaiiPoint;\r\n    function albersUsa(coordinates) {\r\n      var x = coordinates[0], y = coordinates[1];\r\n      point = null;\r\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\r\n      return point;\r\n    }\r\n    albersUsa.invert = function(coordinates) {\r\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\r\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\r\n    };\r\n    albersUsa.stream = function(stream) {\r\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\r\n      return {\r\n        point: function(x, y) {\r\n          lower48Stream.point(x, y);\r\n          alaskaStream.point(x, y);\r\n          hawaiiStream.point(x, y);\r\n        },\r\n        sphere: function() {\r\n          lower48Stream.sphere();\r\n          alaskaStream.sphere();\r\n          hawaiiStream.sphere();\r\n        },\r\n        lineStart: function() {\r\n          lower48Stream.lineStart();\r\n          alaskaStream.lineStart();\r\n          hawaiiStream.lineStart();\r\n        },\r\n        lineEnd: function() {\r\n          lower48Stream.lineEnd();\r\n          alaskaStream.lineEnd();\r\n          hawaiiStream.lineEnd();\r\n        },\r\n        polygonStart: function() {\r\n          lower48Stream.polygonStart();\r\n          alaskaStream.polygonStart();\r\n          hawaiiStream.polygonStart();\r\n        },\r\n        polygonEnd: function() {\r\n          lower48Stream.polygonEnd();\r\n          alaskaStream.polygonEnd();\r\n          hawaiiStream.polygonEnd();\r\n        }\r\n      };\r\n    };\r\n    albersUsa.precision = function(_) {\r\n      if (!arguments.length) return lower48.precision();\r\n      lower48.precision(_);\r\n      alaska.precision(_);\r\n      hawaii.precision(_);\r\n      return albersUsa;\r\n    };\r\n    albersUsa.scale = function(_) {\r\n      if (!arguments.length) return lower48.scale();\r\n      lower48.scale(_);\r\n      alaska.scale(_ * .35);\r\n      hawaii.scale(_);\r\n      return albersUsa.translate(lower48.translate());\r\n    };\r\n    albersUsa.translate = function(_) {\r\n      if (!arguments.length) return lower48.translate();\r\n      var k = lower48.scale(), x = +_[0], y = +_[1];\r\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\r\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\r\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\r\n      return albersUsa;\r\n    };\r\n    return albersUsa.scale(1070);\r\n  };\r\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\r\n    point: d3_noop,\r\n    lineStart: d3_noop,\r\n    lineEnd: d3_noop,\r\n    polygonStart: function() {\r\n      d3_geo_pathAreaPolygon = 0;\r\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\r\n    },\r\n    polygonEnd: function() {\r\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\r\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\r\n    }\r\n  };\r\n  function d3_geo_pathAreaRingStart() {\r\n    var x00, y00, x0, y0;\r\n    d3_geo_pathArea.point = function(x, y) {\r\n      d3_geo_pathArea.point = nextPoint;\r\n      x00 = x0 = x, y00 = y0 = y;\r\n    };\r\n    function nextPoint(x, y) {\r\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\r\n      x0 = x, y0 = y;\r\n    }\r\n    d3_geo_pathArea.lineEnd = function() {\r\n      nextPoint(x00, y00);\r\n    };\r\n  }\r\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\r\n  var d3_geo_pathBounds = {\r\n    point: d3_geo_pathBoundsPoint,\r\n    lineStart: d3_noop,\r\n    lineEnd: d3_noop,\r\n    polygonStart: d3_noop,\r\n    polygonEnd: d3_noop\r\n  };\r\n  function d3_geo_pathBoundsPoint(x, y) {\r\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\r\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\r\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\r\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\r\n  }\r\n  function d3_geo_pathBuffer() {\r\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\r\n    var stream = {\r\n      point: point,\r\n      lineStart: function() {\r\n        stream.point = pointLineStart;\r\n      },\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        stream.lineEnd = lineEndPolygon;\r\n      },\r\n      polygonEnd: function() {\r\n        stream.lineEnd = lineEnd;\r\n        stream.point = point;\r\n      },\r\n      pointRadius: function(_) {\r\n        pointCircle = d3_geo_pathBufferCircle(_);\r\n        return stream;\r\n      },\r\n      result: function() {\r\n        if (buffer.length) {\r\n          var result = buffer.join(\"\");\r\n          buffer = [];\r\n          return result;\r\n        }\r\n      }\r\n    };\r\n    function point(x, y) {\r\n      buffer.push(\"M\", x, \",\", y, pointCircle);\r\n    }\r\n    function pointLineStart(x, y) {\r\n      buffer.push(\"M\", x, \",\", y);\r\n      stream.point = pointLine;\r\n    }\r\n    function pointLine(x, y) {\r\n      buffer.push(\"L\", x, \",\", y);\r\n    }\r\n    function lineEnd() {\r\n      stream.point = point;\r\n    }\r\n    function lineEndPolygon() {\r\n      buffer.push(\"Z\");\r\n    }\r\n    return stream;\r\n  }\r\n  function d3_geo_pathBufferCircle(radius) {\r\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\r\n  }\r\n  var d3_geo_pathCentroid = {\r\n    point: d3_geo_pathCentroidPoint,\r\n    lineStart: d3_geo_pathCentroidLineStart,\r\n    lineEnd: d3_geo_pathCentroidLineEnd,\r\n    polygonStart: function() {\r\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\r\n    },\r\n    polygonEnd: function() {\r\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\r\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\r\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\r\n    }\r\n  };\r\n  function d3_geo_pathCentroidPoint(x, y) {\r\n    d3_geo_centroidX0 += x;\r\n    d3_geo_centroidY0 += y;\r\n    ++d3_geo_centroidZ0;\r\n  }\r\n  function d3_geo_pathCentroidLineStart() {\r\n    var x0, y0;\r\n    d3_geo_pathCentroid.point = function(x, y) {\r\n      d3_geo_pathCentroid.point = nextPoint;\r\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\r\n    };\r\n    function nextPoint(x, y) {\r\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\r\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\r\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\r\n      d3_geo_centroidZ1 += z;\r\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\r\n    }\r\n  }\r\n  function d3_geo_pathCentroidLineEnd() {\r\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\r\n  }\r\n  function d3_geo_pathCentroidRingStart() {\r\n    var x00, y00, x0, y0;\r\n    d3_geo_pathCentroid.point = function(x, y) {\r\n      d3_geo_pathCentroid.point = nextPoint;\r\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\r\n    };\r\n    function nextPoint(x, y) {\r\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\r\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\r\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\r\n      d3_geo_centroidZ1 += z;\r\n      z = y0 * x - x0 * y;\r\n      d3_geo_centroidX2 += z * (x0 + x);\r\n      d3_geo_centroidY2 += z * (y0 + y);\r\n      d3_geo_centroidZ2 += z * 3;\r\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\r\n    }\r\n    d3_geo_pathCentroid.lineEnd = function() {\r\n      nextPoint(x00, y00);\r\n    };\r\n  }\r\n  function d3_geo_pathContext(context) {\r\n    var pointRadius = 4.5;\r\n    var stream = {\r\n      point: point,\r\n      lineStart: function() {\r\n        stream.point = pointLineStart;\r\n      },\r\n      lineEnd: lineEnd,\r\n      polygonStart: function() {\r\n        stream.lineEnd = lineEndPolygon;\r\n      },\r\n      polygonEnd: function() {\r\n        stream.lineEnd = lineEnd;\r\n        stream.point = point;\r\n      },\r\n      pointRadius: function(_) {\r\n        pointRadius = _;\r\n        return stream;\r\n      },\r\n      result: d3_noop\r\n    };\r\n    function point(x, y) {\r\n      context.moveTo(x + pointRadius, y);\r\n      context.arc(x, y, pointRadius, 0, τ);\r\n    }\r\n    function pointLineStart(x, y) {\r\n      context.moveTo(x, y);\r\n      stream.point = pointLine;\r\n    }\r\n    function pointLine(x, y) {\r\n      context.lineTo(x, y);\r\n    }\r\n    function lineEnd() {\r\n      stream.point = point;\r\n    }\r\n    function lineEndPolygon() {\r\n      context.closePath();\r\n    }\r\n    return stream;\r\n  }\r\n  function d3_geo_resample(project) {\r\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\r\n    function resample(stream) {\r\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\r\n    }\r\n    function resampleNone(stream) {\r\n      return d3_geo_transformPoint(stream, function(x, y) {\r\n        x = project(x, y);\r\n        stream.point(x[0], x[1]);\r\n      });\r\n    }\r\n    function resampleRecursive(stream) {\r\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\r\n      var resample = {\r\n        point: point,\r\n        lineStart: lineStart,\r\n        lineEnd: lineEnd,\r\n        polygonStart: function() {\r\n          stream.polygonStart();\r\n          resample.lineStart = ringStart;\r\n        },\r\n        polygonEnd: function() {\r\n          stream.polygonEnd();\r\n          resample.lineStart = lineStart;\r\n        }\r\n      };\r\n      function point(x, y) {\r\n        x = project(x, y);\r\n        stream.point(x[0], x[1]);\r\n      }\r\n      function lineStart() {\r\n        x0 = NaN;\r\n        resample.point = linePoint;\r\n        stream.lineStart();\r\n      }\r\n      function linePoint(λ, φ) {\r\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\r\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\r\n        stream.point(x0, y0);\r\n      }\r\n      function lineEnd() {\r\n        resample.point = point;\r\n        stream.lineEnd();\r\n      }\r\n      function ringStart() {\r\n        lineStart();\r\n        resample.point = ringPoint;\r\n        resample.lineEnd = ringEnd;\r\n      }\r\n      function ringPoint(λ, φ) {\r\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\r\n        resample.point = linePoint;\r\n      }\r\n      function ringEnd() {\r\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\r\n        resample.lineEnd = lineEnd;\r\n        lineEnd();\r\n      }\r\n      return resample;\r\n    }\r\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\r\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\r\n      if (d2 > 4 * δ2 && depth--) {\r\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\r\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\r\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\r\n          stream.point(x2, y2);\r\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\r\n        }\r\n      }\r\n    }\r\n    resample.precision = function(_) {\r\n      if (!arguments.length) return Math.sqrt(δ2);\r\n      maxDepth = (δ2 = _ * _) > 0 && 16;\r\n      return resample;\r\n    };\r\n    return resample;\r\n  }\r\n  d3.geo.path = function() {\r\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\r\n    function path(object) {\r\n      if (object) {\r\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\r\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\r\n        d3.geo.stream(object, cacheStream);\r\n      }\r\n      return contextStream.result();\r\n    }\r\n    path.area = function(object) {\r\n      d3_geo_pathAreaSum = 0;\r\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\r\n      return d3_geo_pathAreaSum;\r\n    };\r\n    path.centroid = function(object) {\r\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\r\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\r\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\r\n    };\r\n    path.bounds = function(object) {\r\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\r\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\r\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\r\n    };\r\n    path.projection = function(_) {\r\n      if (!arguments.length) return projection;\r\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\r\n      return reset();\r\n    };\r\n    path.context = function(_) {\r\n      if (!arguments.length) return context;\r\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\r\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\r\n      return reset();\r\n    };\r\n    path.pointRadius = function(_) {\r\n      if (!arguments.length) return pointRadius;\r\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\r\n      return path;\r\n    };\r\n    function reset() {\r\n      cacheStream = null;\r\n      return path;\r\n    }\r\n    return path.projection(d3.geo.albersUsa()).context(null);\r\n  };\r\n  function d3_geo_pathProjectStream(project) {\r\n    var resample = d3_geo_resample(function(x, y) {\r\n      return project([ x * d3_degrees, y * d3_degrees ]);\r\n    });\r\n    return function(stream) {\r\n      return d3_geo_projectionRadians(resample(stream));\r\n    };\r\n  }\r\n  d3.geo.transform = function(methods) {\r\n    return {\r\n      stream: function(stream) {\r\n        var transform = new d3_geo_transform(stream);\r\n        for (var k in methods) transform[k] = methods[k];\r\n        return transform;\r\n      }\r\n    };\r\n  };\r\n  function d3_geo_transform(stream) {\r\n    this.stream = stream;\r\n  }\r\n  d3_geo_transform.prototype = {\r\n    point: function(x, y) {\r\n      this.stream.point(x, y);\r\n    },\r\n    sphere: function() {\r\n      this.stream.sphere();\r\n    },\r\n    lineStart: function() {\r\n      this.stream.lineStart();\r\n    },\r\n    lineEnd: function() {\r\n      this.stream.lineEnd();\r\n    },\r\n    polygonStart: function() {\r\n      this.stream.polygonStart();\r\n    },\r\n    polygonEnd: function() {\r\n      this.stream.polygonEnd();\r\n    }\r\n  };\r\n  function d3_geo_transformPoint(stream, point) {\r\n    return {\r\n      point: point,\r\n      sphere: function() {\r\n        stream.sphere();\r\n      },\r\n      lineStart: function() {\r\n        stream.lineStart();\r\n      },\r\n      lineEnd: function() {\r\n        stream.lineEnd();\r\n      },\r\n      polygonStart: function() {\r\n        stream.polygonStart();\r\n      },\r\n      polygonEnd: function() {\r\n        stream.polygonEnd();\r\n      }\r\n    };\r\n  }\r\n  d3.geo.projection = d3_geo_projection;\r\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\r\n  function d3_geo_projection(project) {\r\n    return d3_geo_projectionMutator(function() {\r\n      return project;\r\n    })();\r\n  }\r\n  function d3_geo_projectionMutator(projectAt) {\r\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\r\n      x = project(x, y);\r\n      return [ x[0] * k + δx, δy - x[1] * k ];\r\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\r\n    function projection(point) {\r\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\r\n      return [ point[0] * k + δx, δy - point[1] * k ];\r\n    }\r\n    function invert(point) {\r\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\r\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\r\n    }\r\n    projection.stream = function(output) {\r\n      if (stream) stream.valid = false;\r\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\r\n      stream.valid = true;\r\n      return stream;\r\n    };\r\n    projection.clipAngle = function(_) {\r\n      if (!arguments.length) return clipAngle;\r\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\r\n      return invalidate();\r\n    };\r\n    projection.clipExtent = function(_) {\r\n      if (!arguments.length) return clipExtent;\r\n      clipExtent = _;\r\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\r\n      return invalidate();\r\n    };\r\n    projection.scale = function(_) {\r\n      if (!arguments.length) return k;\r\n      k = +_;\r\n      return reset();\r\n    };\r\n    projection.translate = function(_) {\r\n      if (!arguments.length) return [ x, y ];\r\n      x = +_[0];\r\n      y = +_[1];\r\n      return reset();\r\n    };\r\n    projection.center = function(_) {\r\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\r\n      λ = _[0] % 360 * d3_radians;\r\n      φ = _[1] % 360 * d3_radians;\r\n      return reset();\r\n    };\r\n    projection.rotate = function(_) {\r\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\r\n      δλ = _[0] % 360 * d3_radians;\r\n      δφ = _[1] % 360 * d3_radians;\r\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\r\n      return reset();\r\n    };\r\n    d3.rebind(projection, projectResample, \"precision\");\r\n    function reset() {\r\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\r\n      var center = project(λ, φ);\r\n      δx = x - center[0] * k;\r\n      δy = y + center[1] * k;\r\n      return invalidate();\r\n    }\r\n    function invalidate() {\r\n      if (stream) stream.valid = false, stream = null;\r\n      return projection;\r\n    }\r\n    return function() {\r\n      project = projectAt.apply(this, arguments);\r\n      projection.invert = project.invert && invert;\r\n      return reset();\r\n    };\r\n  }\r\n  function d3_geo_projectionRadians(stream) {\r\n    return d3_geo_transformPoint(stream, function(x, y) {\r\n      stream.point(x * d3_radians, y * d3_radians);\r\n    });\r\n  }\r\n  function d3_geo_equirectangular(λ, φ) {\r\n    return [ λ, φ ];\r\n  }\r\n  (d3.geo.equirectangular = function() {\r\n    return d3_geo_projection(d3_geo_equirectangular);\r\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\r\n  d3.geo.rotation = function(rotate) {\r\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\r\n    function forward(coordinates) {\r\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\r\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\r\n    }\r\n    forward.invert = function(coordinates) {\r\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\r\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\r\n    };\r\n    return forward;\r\n  };\r\n  function d3_geo_identityRotation(λ, φ) {\r\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\r\n  }\r\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\r\n  function d3_geo_rotation(δλ, δφ, δγ) {\r\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\r\n  }\r\n  function d3_geo_forwardRotationλ(δλ) {\r\n    return function(λ, φ) {\r\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\r\n    };\r\n  }\r\n  function d3_geo_rotationλ(δλ) {\r\n    var rotation = d3_geo_forwardRotationλ(δλ);\r\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\r\n    return rotation;\r\n  }\r\n  function d3_geo_rotationφγ(δφ, δγ) {\r\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\r\n    function rotation(λ, φ) {\r\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\r\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\r\n    }\r\n    rotation.invert = function(λ, φ) {\r\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\r\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\r\n    };\r\n    return rotation;\r\n  }\r\n  d3.geo.circle = function() {\r\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\r\n    function circle() {\r\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\r\n      interpolate(null, null, 1, {\r\n        point: function(x, y) {\r\n          ring.push(x = rotate(x, y));\r\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\r\n        }\r\n      });\r\n      return {\r\n        type: \"Polygon\",\r\n        coordinates: [ ring ]\r\n      };\r\n    }\r\n    circle.origin = function(x) {\r\n      if (!arguments.length) return origin;\r\n      origin = x;\r\n      return circle;\r\n    };\r\n    circle.angle = function(x) {\r\n      if (!arguments.length) return angle;\r\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\r\n      return circle;\r\n    };\r\n    circle.precision = function(_) {\r\n      if (!arguments.length) return precision;\r\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\r\n      return circle;\r\n    };\r\n    return circle.angle(90);\r\n  };\r\n  function d3_geo_circleInterpolate(radius, precision) {\r\n    var cr = Math.cos(radius), sr = Math.sin(radius);\r\n    return function(from, to, direction, listener) {\r\n      var step = direction * precision;\r\n      if (from != null) {\r\n        from = d3_geo_circleAngle(cr, from);\r\n        to = d3_geo_circleAngle(cr, to);\r\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\r\n      } else {\r\n        from = radius + direction * τ;\r\n        to = radius - .5 * step;\r\n      }\r\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\r\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\r\n      }\r\n    };\r\n  }\r\n  function d3_geo_circleAngle(cr, point) {\r\n    var a = d3_geo_cartesian(point);\r\n    a[0] -= cr;\r\n    d3_geo_cartesianNormalize(a);\r\n    var angle = d3_acos(-a[1]);\r\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\r\n  }\r\n  d3.geo.distance = function(a, b) {\r\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\r\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\r\n  };\r\n  d3.geo.graticule = function() {\r\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\r\n    function graticule() {\r\n      return {\r\n        type: \"MultiLineString\",\r\n        coordinates: lines()\r\n      };\r\n    }\r\n    function lines() {\r\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\r\n        return abs(x % DX) > ε;\r\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\r\n        return abs(y % DY) > ε;\r\n      }).map(y));\r\n    }\r\n    graticule.lines = function() {\r\n      return lines().map(function(coordinates) {\r\n        return {\r\n          type: \"LineString\",\r\n          coordinates: coordinates\r\n        };\r\n      });\r\n    };\r\n    graticule.outline = function() {\r\n      return {\r\n        type: \"Polygon\",\r\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\r\n      };\r\n    };\r\n    graticule.extent = function(_) {\r\n      if (!arguments.length) return graticule.minorExtent();\r\n      return graticule.majorExtent(_).minorExtent(_);\r\n    };\r\n    graticule.majorExtent = function(_) {\r\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\r\n      X0 = +_[0][0], X1 = +_[1][0];\r\n      Y0 = +_[0][1], Y1 = +_[1][1];\r\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\r\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\r\n      return graticule.precision(precision);\r\n    };\r\n    graticule.minorExtent = function(_) {\r\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\r\n      x0 = +_[0][0], x1 = +_[1][0];\r\n      y0 = +_[0][1], y1 = +_[1][1];\r\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\r\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\r\n      return graticule.precision(precision);\r\n    };\r\n    graticule.step = function(_) {\r\n      if (!arguments.length) return graticule.minorStep();\r\n      return graticule.majorStep(_).minorStep(_);\r\n    };\r\n    graticule.majorStep = function(_) {\r\n      if (!arguments.length) return [ DX, DY ];\r\n      DX = +_[0], DY = +_[1];\r\n      return graticule;\r\n    };\r\n    graticule.minorStep = function(_) {\r\n      if (!arguments.length) return [ dx, dy ];\r\n      dx = +_[0], dy = +_[1];\r\n      return graticule;\r\n    };\r\n    graticule.precision = function(_) {\r\n      if (!arguments.length) return precision;\r\n      precision = +_;\r\n      x = d3_geo_graticuleX(y0, y1, 90);\r\n      y = d3_geo_graticuleY(x0, x1, precision);\r\n      X = d3_geo_graticuleX(Y0, Y1, 90);\r\n      Y = d3_geo_graticuleY(X0, X1, precision);\r\n      return graticule;\r\n    };\r\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\r\n  };\r\n  function d3_geo_graticuleX(y0, y1, dy) {\r\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\r\n    return function(x) {\r\n      return y.map(function(y) {\r\n        return [ x, y ];\r\n      });\r\n    };\r\n  }\r\n  function d3_geo_graticuleY(x0, x1, dx) {\r\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\r\n    return function(y) {\r\n      return x.map(function(x) {\r\n        return [ x, y ];\r\n      });\r\n    };\r\n  }\r\n  function d3_source(d) {\r\n    return d.source;\r\n  }\r\n  function d3_target(d) {\r\n    return d.target;\r\n  }\r\n  d3.geo.greatArc = function() {\r\n    var source = d3_source, source_, target = d3_target, target_;\r\n    function greatArc() {\r\n      return {\r\n        type: \"LineString\",\r\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\r\n      };\r\n    }\r\n    greatArc.distance = function() {\r\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\r\n    };\r\n    greatArc.source = function(_) {\r\n      if (!arguments.length) return source;\r\n      source = _, source_ = typeof _ === \"function\" ? null : _;\r\n      return greatArc;\r\n    };\r\n    greatArc.target = function(_) {\r\n      if (!arguments.length) return target;\r\n      target = _, target_ = typeof _ === \"function\" ? null : _;\r\n      return greatArc;\r\n    };\r\n    greatArc.precision = function() {\r\n      return arguments.length ? greatArc : 0;\r\n    };\r\n    return greatArc;\r\n  };\r\n  d3.geo.interpolate = function(source, target) {\r\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\r\n  };\r\n  function d3_geo_interpolate(x0, y0, x1, y1) {\r\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\r\n    var interpolate = d ? function(t) {\r\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\r\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\r\n    } : function() {\r\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\r\n    };\r\n    interpolate.distance = d;\r\n    return interpolate;\r\n  }\r\n  d3.geo.length = function(object) {\r\n    d3_geo_lengthSum = 0;\r\n    d3.geo.stream(object, d3_geo_length);\r\n    return d3_geo_lengthSum;\r\n  };\r\n  var d3_geo_lengthSum;\r\n  var d3_geo_length = {\r\n    sphere: d3_noop,\r\n    point: d3_noop,\r\n    lineStart: d3_geo_lengthLineStart,\r\n    lineEnd: d3_noop,\r\n    polygonStart: d3_noop,\r\n    polygonEnd: d3_noop\r\n  };\r\n  function d3_geo_lengthLineStart() {\r\n    var λ0, sinφ0, cosφ0;\r\n    d3_geo_length.point = function(λ, φ) {\r\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\r\n      d3_geo_length.point = nextPoint;\r\n    };\r\n    d3_geo_length.lineEnd = function() {\r\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\r\n    };\r\n    function nextPoint(λ, φ) {\r\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\r\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\r\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\r\n    }\r\n  }\r\n  function d3_geo_azimuthal(scale, angle) {\r\n    function azimuthal(λ, φ) {\r\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\r\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\r\n    }\r\n    azimuthal.invert = function(x, y) {\r\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\r\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\r\n    };\r\n    return azimuthal;\r\n  }\r\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\r\n    return Math.sqrt(2 / (1 + cosλcosφ));\r\n  }, function(ρ) {\r\n    return 2 * Math.asin(ρ / 2);\r\n  });\r\n  (d3.geo.azimuthalEqualArea = function() {\r\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\r\n  }).raw = d3_geo_azimuthalEqualArea;\r\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\r\n    var c = Math.acos(cosλcosφ);\r\n    return c && c / Math.sin(c);\r\n  }, d3_identity);\r\n  (d3.geo.azimuthalEquidistant = function() {\r\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\r\n  }).raw = d3_geo_azimuthalEquidistant;\r\n  function d3_geo_conicConformal(φ0, φ1) {\r\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\r\n      return Math.tan(π / 4 + φ / 2);\r\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\r\n    if (!n) return d3_geo_mercator;\r\n    function forward(λ, φ) {\r\n      if (F > 0) {\r\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\r\n      } else {\r\n        if (φ > halfπ - ε) φ = halfπ - ε;\r\n      }\r\n      var ρ = F / Math.pow(t(φ), n);\r\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\r\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.conicConformal = function() {\r\n    return d3_geo_conic(d3_geo_conicConformal);\r\n  }).raw = d3_geo_conicConformal;\r\n  function d3_geo_conicEquidistant(φ0, φ1) {\r\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\r\n    if (abs(n) < ε) return d3_geo_equirectangular;\r\n    function forward(λ, φ) {\r\n      var ρ = G - φ;\r\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\r\n    }\r\n    forward.invert = function(x, y) {\r\n      var ρ0_y = G - y;\r\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\r\n    };\r\n    return forward;\r\n  }\r\n  (d3.geo.conicEquidistant = function() {\r\n    return d3_geo_conic(d3_geo_conicEquidistant);\r\n  }).raw = d3_geo_conicEquidistant;\r\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\r\n    return 1 / cosλcosφ;\r\n  }, Math.atan);\r\n  (d3.geo.gnomonic = function() {\r\n    return d3_geo_projection(d3_geo_gnomonic);\r\n  }).raw = d3_geo_gnomonic;\r\n  function d3_geo_mercator(λ, φ) {\r\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\r\n  }\r\n  d3_geo_mercator.invert = function(x, y) {\r\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\r\n  };\r\n  function d3_geo_mercatorProjection(project) {\r\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\r\n    m.scale = function() {\r\n      var v = scale.apply(m, arguments);\r\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\r\n    };\r\n    m.translate = function() {\r\n      var v = translate.apply(m, arguments);\r\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\r\n    };\r\n    m.clipExtent = function(_) {\r\n      var v = clipExtent.apply(m, arguments);\r\n      if (v === m) {\r\n        if (clipAuto = _ == null) {\r\n          var k = π * scale(), t = translate();\r\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\r\n        }\r\n      } else if (clipAuto) {\r\n        v = null;\r\n      }\r\n      return v;\r\n    };\r\n    return m.clipExtent(null);\r\n  }\r\n  (d3.geo.mercator = function() {\r\n    return d3_geo_mercatorProjection(d3_geo_mercator);\r\n  }).raw = d3_geo_mercator;\r\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\r\n    return 1;\r\n  }, Math.asin);\r\n  (d3.geo.orthographic = function() {\r\n    return d3_geo_projection(d3_geo_orthographic);\r\n  }).raw = d3_geo_orthographic;\r\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\r\n    return 1 / (1 + cosλcosφ);\r\n  }, function(ρ) {\r\n    return 2 * Math.atan(ρ);\r\n  });\r\n  (d3.geo.stereographic = function() {\r\n    return d3_geo_projection(d3_geo_stereographic);\r\n  }).raw = d3_geo_stereographic;\r\n  function d3_geo_transverseMercator(λ, φ) {\r\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\r\n  }\r\n  d3_geo_transverseMercator.invert = function(x, y) {\r\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\r\n  };\r\n  (d3.geo.transverseMercator = function() {\r\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\r\n    projection.center = function(_) {\r\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\r\n    };\r\n    projection.rotate = function(_) {\r\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \r\n      [ _[0], _[1], _[2] - 90 ]);\r\n    };\r\n    return rotate([ 0, 0, 90 ]);\r\n  }).raw = d3_geo_transverseMercator;\r\n  d3.geom = {};\r\n  function d3_geom_pointX(d) {\r\n    return d[0];\r\n  }\r\n  function d3_geom_pointY(d) {\r\n    return d[1];\r\n  }\r\n  d3.geom.hull = function(vertices) {\r\n    var x = d3_geom_pointX, y = d3_geom_pointY;\r\n    if (arguments.length) return hull(vertices);\r\n    function hull(data) {\r\n      if (data.length < 3) return [];\r\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\r\n      for (i = 0; i < n; i++) {\r\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\r\n      }\r\n      points.sort(d3_geom_hullOrder);\r\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\r\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\r\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\r\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\r\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\r\n      return polygon;\r\n    }\r\n    hull.x = function(_) {\r\n      return arguments.length ? (x = _, hull) : x;\r\n    };\r\n    hull.y = function(_) {\r\n      return arguments.length ? (y = _, hull) : y;\r\n    };\r\n    return hull;\r\n  };\r\n  function d3_geom_hullUpper(points) {\r\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\r\n    for (var i = 2; i < n; i++) {\r\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\r\n      hull[hs++] = i;\r\n    }\r\n    return hull.slice(0, hs);\r\n  }\r\n  function d3_geom_hullOrder(a, b) {\r\n    return a[0] - b[0] || a[1] - b[1];\r\n  }\r\n  d3.geom.polygon = function(coordinates) {\r\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\r\n    return coordinates;\r\n  };\r\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\r\n  d3_geom_polygonPrototype.area = function() {\r\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\r\n    while (++i < n) {\r\n      a = b;\r\n      b = this[i];\r\n      area += a[1] * b[0] - a[0] * b[1];\r\n    }\r\n    return area * .5;\r\n  };\r\n  d3_geom_polygonPrototype.centroid = function(k) {\r\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\r\n    if (!arguments.length) k = -1 / (6 * this.area());\r\n    while (++i < n) {\r\n      a = b;\r\n      b = this[i];\r\n      c = a[0] * b[1] - b[0] * a[1];\r\n      x += (a[0] + b[0]) * c;\r\n      y += (a[1] + b[1]) * c;\r\n    }\r\n    return [ x * k, y * k ];\r\n  };\r\n  d3_geom_polygonPrototype.clip = function(subject) {\r\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\r\n    while (++i < n) {\r\n      input = subject.slice();\r\n      subject.length = 0;\r\n      b = this[i];\r\n      c = input[(m = input.length - closed) - 1];\r\n      j = -1;\r\n      while (++j < m) {\r\n        d = input[j];\r\n        if (d3_geom_polygonInside(d, a, b)) {\r\n          if (!d3_geom_polygonInside(c, a, b)) {\r\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\r\n          }\r\n          subject.push(d);\r\n        } else if (d3_geom_polygonInside(c, a, b)) {\r\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\r\n        }\r\n        c = d;\r\n      }\r\n      if (closed) subject.push(subject[0]);\r\n      a = b;\r\n    }\r\n    return subject;\r\n  };\r\n  function d3_geom_polygonInside(p, a, b) {\r\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\r\n  }\r\n  function d3_geom_polygonIntersect(c, d, a, b) {\r\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\r\n    return [ x1 + ua * x21, y1 + ua * y21 ];\r\n  }\r\n  function d3_geom_polygonClosed(coordinates) {\r\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\r\n    return !(a[0] - b[0] || a[1] - b[1]);\r\n  }\r\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\r\n  function d3_geom_voronoiBeach() {\r\n    d3_geom_voronoiRedBlackNode(this);\r\n    this.edge = this.site = this.circle = null;\r\n  }\r\n  function d3_geom_voronoiCreateBeach(site) {\r\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\r\n    beach.site = site;\r\n    return beach;\r\n  }\r\n  function d3_geom_voronoiDetachBeach(beach) {\r\n    d3_geom_voronoiDetachCircle(beach);\r\n    d3_geom_voronoiBeaches.remove(beach);\r\n    d3_geom_voronoiBeachPool.push(beach);\r\n    d3_geom_voronoiRedBlackNode(beach);\r\n  }\r\n  function d3_geom_voronoiRemoveBeach(beach) {\r\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\r\n      x: x,\r\n      y: y\r\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\r\n    d3_geom_voronoiDetachBeach(beach);\r\n    var lArc = previous;\r\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\r\n      previous = lArc.P;\r\n      disappearing.unshift(lArc);\r\n      d3_geom_voronoiDetachBeach(lArc);\r\n      lArc = previous;\r\n    }\r\n    disappearing.unshift(lArc);\r\n    d3_geom_voronoiDetachCircle(lArc);\r\n    var rArc = next;\r\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\r\n      next = rArc.N;\r\n      disappearing.push(rArc);\r\n      d3_geom_voronoiDetachBeach(rArc);\r\n      rArc = next;\r\n    }\r\n    disappearing.push(rArc);\r\n    d3_geom_voronoiDetachCircle(rArc);\r\n    var nArcs = disappearing.length, iArc;\r\n    for (iArc = 1; iArc < nArcs; ++iArc) {\r\n      rArc = disappearing[iArc];\r\n      lArc = disappearing[iArc - 1];\r\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\r\n    }\r\n    lArc = disappearing[0];\r\n    rArc = disappearing[nArcs - 1];\r\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\r\n    d3_geom_voronoiAttachCircle(lArc);\r\n    d3_geom_voronoiAttachCircle(rArc);\r\n  }\r\n  function d3_geom_voronoiAddBeach(site) {\r\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\r\n    while (node) {\r\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\r\n      if (dxl > ε) node = node.L; else {\r\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\r\n        if (dxr > ε) {\r\n          if (!node.R) {\r\n            lArc = node;\r\n            break;\r\n          }\r\n          node = node.R;\r\n        } else {\r\n          if (dxl > -ε) {\r\n            lArc = node.P;\r\n            rArc = node;\r\n          } else if (dxr > -ε) {\r\n            lArc = node;\r\n            rArc = node.N;\r\n          } else {\r\n            lArc = rArc = node;\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    var newArc = d3_geom_voronoiCreateBeach(site);\r\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\r\n    if (!lArc && !rArc) return;\r\n    if (lArc === rArc) {\r\n      d3_geom_voronoiDetachCircle(lArc);\r\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\r\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\r\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\r\n      d3_geom_voronoiAttachCircle(lArc);\r\n      d3_geom_voronoiAttachCircle(rArc);\r\n      return;\r\n    }\r\n    if (!rArc) {\r\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\r\n      return;\r\n    }\r\n    d3_geom_voronoiDetachCircle(lArc);\r\n    d3_geom_voronoiDetachCircle(rArc);\r\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\r\n      x: (cy * hb - by * hc) / d + ax,\r\n      y: (bx * hc - cx * hb) / d + ay\r\n    };\r\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\r\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\r\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\r\n    d3_geom_voronoiAttachCircle(lArc);\r\n    d3_geom_voronoiAttachCircle(rArc);\r\n  }\r\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\r\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\r\n    if (!pby2) return rfocx;\r\n    var lArc = arc.P;\r\n    if (!lArc) return -Infinity;\r\n    site = lArc.site;\r\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\r\n    if (!plby2) return lfocx;\r\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\r\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\r\n    return (rfocx + lfocx) / 2;\r\n  }\r\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\r\n    var rArc = arc.N;\r\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\r\n    var site = arc.site;\r\n    return site.y === directrix ? site.x : Infinity;\r\n  }\r\n  function d3_geom_voronoiCell(site) {\r\n    this.site = site;\r\n    this.edges = [];\r\n  }\r\n  d3_geom_voronoiCell.prototype.prepare = function() {\r\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\r\n    while (iHalfEdge--) {\r\n      edge = halfEdges[iHalfEdge].edge;\r\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\r\n    }\r\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\r\n    return halfEdges.length;\r\n  };\r\n  function d3_geom_voronoiCloseCells(extent) {\r\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\r\n    while (iCell--) {\r\n      cell = cells[iCell];\r\n      if (!cell || !cell.prepare()) continue;\r\n      halfEdges = cell.edges;\r\n      nHalfEdges = halfEdges.length;\r\n      iHalfEdge = 0;\r\n      while (iHalfEdge < nHalfEdges) {\r\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\r\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\r\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\r\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\r\n            x: x0,\r\n            y: abs(x2 - x0) < ε ? y2 : y1\r\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\r\n            x: abs(y2 - y1) < ε ? x2 : x1,\r\n            y: y1\r\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\r\n            x: x1,\r\n            y: abs(x2 - x1) < ε ? y2 : y0\r\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\r\n            x: abs(y2 - y0) < ε ? x2 : x0,\r\n            y: y0\r\n          } : null), cell.site, null));\r\n          ++nHalfEdges;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\r\n    return b.angle - a.angle;\r\n  }\r\n  function d3_geom_voronoiCircle() {\r\n    d3_geom_voronoiRedBlackNode(this);\r\n    this.x = this.y = this.arc = this.site = this.cy = null;\r\n  }\r\n  function d3_geom_voronoiAttachCircle(arc) {\r\n    var lArc = arc.P, rArc = arc.N;\r\n    if (!lArc || !rArc) return;\r\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\r\n    if (lSite === rSite) return;\r\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\r\n    var d = 2 * (ax * cy - ay * cx);\r\n    if (d >= -ε2) return;\r\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\r\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\r\n    circle.arc = arc;\r\n    circle.site = cSite;\r\n    circle.x = x + bx;\r\n    circle.y = cy + Math.sqrt(x * x + y * y);\r\n    circle.cy = cy;\r\n    arc.circle = circle;\r\n    var before = null, node = d3_geom_voronoiCircles._;\r\n    while (node) {\r\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\r\n        if (node.L) node = node.L; else {\r\n          before = node.P;\r\n          break;\r\n        }\r\n      } else {\r\n        if (node.R) node = node.R; else {\r\n          before = node;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    d3_geom_voronoiCircles.insert(before, circle);\r\n    if (!before) d3_geom_voronoiFirstCircle = circle;\r\n  }\r\n  function d3_geom_voronoiDetachCircle(arc) {\r\n    var circle = arc.circle;\r\n    if (circle) {\r\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\r\n      d3_geom_voronoiCircles.remove(circle);\r\n      d3_geom_voronoiCirclePool.push(circle);\r\n      d3_geom_voronoiRedBlackNode(circle);\r\n      arc.circle = null;\r\n    }\r\n  }\r\n  function d3_geom_voronoiClipEdges(extent) {\r\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\r\n    while (i--) {\r\n      e = edges[i];\r\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\r\n        e.a = e.b = null;\r\n        edges.splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n  function d3_geom_voronoiConnectEdge(edge, extent) {\r\n    var vb = edge.b;\r\n    if (vb) return true;\r\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\r\n    if (ry === ly) {\r\n      if (fx < x0 || fx >= x1) return;\r\n      if (lx > rx) {\r\n        if (!va) va = {\r\n          x: fx,\r\n          y: y0\r\n        }; else if (va.y >= y1) return;\r\n        vb = {\r\n          x: fx,\r\n          y: y1\r\n        };\r\n      } else {\r\n        if (!va) va = {\r\n          x: fx,\r\n          y: y1\r\n        }; else if (va.y < y0) return;\r\n        vb = {\r\n          x: fx,\r\n          y: y0\r\n        };\r\n      }\r\n    } else {\r\n      fm = (lx - rx) / (ry - ly);\r\n      fb = fy - fm * fx;\r\n      if (fm < -1 || fm > 1) {\r\n        if (lx > rx) {\r\n          if (!va) va = {\r\n            x: (y0 - fb) / fm,\r\n            y: y0\r\n          }; else if (va.y >= y1) return;\r\n          vb = {\r\n            x: (y1 - fb) / fm,\r\n            y: y1\r\n          };\r\n        } else {\r\n          if (!va) va = {\r\n            x: (y1 - fb) / fm,\r\n            y: y1\r\n          }; else if (va.y < y0) return;\r\n          vb = {\r\n            x: (y0 - fb) / fm,\r\n            y: y0\r\n          };\r\n        }\r\n      } else {\r\n        if (ly < ry) {\r\n          if (!va) va = {\r\n            x: x0,\r\n            y: fm * x0 + fb\r\n          }; else if (va.x >= x1) return;\r\n          vb = {\r\n            x: x1,\r\n            y: fm * x1 + fb\r\n          };\r\n        } else {\r\n          if (!va) va = {\r\n            x: x1,\r\n            y: fm * x1 + fb\r\n          }; else if (va.x < x0) return;\r\n          vb = {\r\n            x: x0,\r\n            y: fm * x0 + fb\r\n          };\r\n        }\r\n      }\r\n    }\r\n    edge.a = va;\r\n    edge.b = vb;\r\n    return true;\r\n  }\r\n  function d3_geom_voronoiEdge(lSite, rSite) {\r\n    this.l = lSite;\r\n    this.r = rSite;\r\n    this.a = this.b = null;\r\n  }\r\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\r\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\r\n    d3_geom_voronoiEdges.push(edge);\r\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\r\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\r\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\r\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\r\n    return edge;\r\n  }\r\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\r\n    var edge = new d3_geom_voronoiEdge(lSite, null);\r\n    edge.a = va;\r\n    edge.b = vb;\r\n    d3_geom_voronoiEdges.push(edge);\r\n    return edge;\r\n  }\r\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\r\n    if (!edge.a && !edge.b) {\r\n      edge.a = vertex;\r\n      edge.l = lSite;\r\n      edge.r = rSite;\r\n    } else if (edge.l === rSite) {\r\n      edge.b = vertex;\r\n    } else {\r\n      edge.a = vertex;\r\n    }\r\n  }\r\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\r\n    var va = edge.a, vb = edge.b;\r\n    this.edge = edge;\r\n    this.site = lSite;\r\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\r\n  }\r\n  d3_geom_voronoiHalfEdge.prototype = {\r\n    start: function() {\r\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\r\n    },\r\n    end: function() {\r\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\r\n    }\r\n  };\r\n  function d3_geom_voronoiRedBlackTree() {\r\n    this._ = null;\r\n  }\r\n  function d3_geom_voronoiRedBlackNode(node) {\r\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\r\n  }\r\n  d3_geom_voronoiRedBlackTree.prototype = {\r\n    insert: function(after, node) {\r\n      var parent, grandpa, uncle;\r\n      if (after) {\r\n        node.P = after;\r\n        node.N = after.N;\r\n        if (after.N) after.N.P = node;\r\n        after.N = node;\r\n        if (after.R) {\r\n          after = after.R;\r\n          while (after.L) after = after.L;\r\n          after.L = node;\r\n        } else {\r\n          after.R = node;\r\n        }\r\n        parent = after;\r\n      } else if (this._) {\r\n        after = d3_geom_voronoiRedBlackFirst(this._);\r\n        node.P = null;\r\n        node.N = after;\r\n        after.P = after.L = node;\r\n        parent = after;\r\n      } else {\r\n        node.P = node.N = null;\r\n        this._ = node;\r\n        parent = null;\r\n      }\r\n      node.L = node.R = null;\r\n      node.U = parent;\r\n      node.C = true;\r\n      after = node;\r\n      while (parent && parent.C) {\r\n        grandpa = parent.U;\r\n        if (parent === grandpa.L) {\r\n          uncle = grandpa.R;\r\n          if (uncle && uncle.C) {\r\n            parent.C = uncle.C = false;\r\n            grandpa.C = true;\r\n            after = grandpa;\r\n          } else {\r\n            if (after === parent.R) {\r\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\r\n              after = parent;\r\n              parent = after.U;\r\n            }\r\n            parent.C = false;\r\n            grandpa.C = true;\r\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\r\n          }\r\n        } else {\r\n          uncle = grandpa.L;\r\n          if (uncle && uncle.C) {\r\n            parent.C = uncle.C = false;\r\n            grandpa.C = true;\r\n            after = grandpa;\r\n          } else {\r\n            if (after === parent.L) {\r\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\r\n              after = parent;\r\n              parent = after.U;\r\n            }\r\n            parent.C = false;\r\n            grandpa.C = true;\r\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\r\n          }\r\n        }\r\n        parent = after.U;\r\n      }\r\n      this._.C = false;\r\n    },\r\n    remove: function(node) {\r\n      if (node.N) node.N.P = node.P;\r\n      if (node.P) node.P.N = node.N;\r\n      node.N = node.P = null;\r\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\r\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\r\n      if (parent) {\r\n        if (parent.L === node) parent.L = next; else parent.R = next;\r\n      } else {\r\n        this._ = next;\r\n      }\r\n      if (left && right) {\r\n        red = next.C;\r\n        next.C = node.C;\r\n        next.L = left;\r\n        left.U = next;\r\n        if (next !== right) {\r\n          parent = next.U;\r\n          next.U = node.U;\r\n          node = next.R;\r\n          parent.L = node;\r\n          next.R = right;\r\n          right.U = next;\r\n        } else {\r\n          next.U = parent;\r\n          parent = next;\r\n          node = next.R;\r\n        }\r\n      } else {\r\n        red = node.C;\r\n        node = next;\r\n      }\r\n      if (node) node.U = parent;\r\n      if (red) return;\r\n      if (node && node.C) {\r\n        node.C = false;\r\n        return;\r\n      }\r\n      do {\r\n        if (node === this._) break;\r\n        if (node === parent.L) {\r\n          sibling = parent.R;\r\n          if (sibling.C) {\r\n            sibling.C = false;\r\n            parent.C = true;\r\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\r\n            sibling = parent.R;\r\n          }\r\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\r\n            if (!sibling.R || !sibling.R.C) {\r\n              sibling.L.C = false;\r\n              sibling.C = true;\r\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\r\n              sibling = parent.R;\r\n            }\r\n            sibling.C = parent.C;\r\n            parent.C = sibling.R.C = false;\r\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\r\n            node = this._;\r\n            break;\r\n          }\r\n        } else {\r\n          sibling = parent.L;\r\n          if (sibling.C) {\r\n            sibling.C = false;\r\n            parent.C = true;\r\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\r\n            sibling = parent.L;\r\n          }\r\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\r\n            if (!sibling.L || !sibling.L.C) {\r\n              sibling.R.C = false;\r\n              sibling.C = true;\r\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\r\n              sibling = parent.L;\r\n            }\r\n            sibling.C = parent.C;\r\n            parent.C = sibling.L.C = false;\r\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\r\n            node = this._;\r\n            break;\r\n          }\r\n        }\r\n        sibling.C = true;\r\n        node = parent;\r\n        parent = parent.U;\r\n      } while (!node.C);\r\n      if (node) node.C = false;\r\n    }\r\n  };\r\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\r\n    var p = node, q = node.R, parent = p.U;\r\n    if (parent) {\r\n      if (parent.L === p) parent.L = q; else parent.R = q;\r\n    } else {\r\n      tree._ = q;\r\n    }\r\n    q.U = parent;\r\n    p.U = q;\r\n    p.R = q.L;\r\n    if (p.R) p.R.U = p;\r\n    q.L = p;\r\n  }\r\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\r\n    var p = node, q = node.L, parent = p.U;\r\n    if (parent) {\r\n      if (parent.L === p) parent.L = q; else parent.R = q;\r\n    } else {\r\n      tree._ = q;\r\n    }\r\n    q.U = parent;\r\n    p.U = q;\r\n    p.L = q.R;\r\n    if (p.L) p.L.U = p;\r\n    q.R = p;\r\n  }\r\n  function d3_geom_voronoiRedBlackFirst(node) {\r\n    while (node.L) node = node.L;\r\n    return node;\r\n  }\r\n  function d3_geom_voronoi(sites, bbox) {\r\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\r\n    d3_geom_voronoiEdges = [];\r\n    d3_geom_voronoiCells = new Array(sites.length);\r\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\r\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\r\n    while (true) {\r\n      circle = d3_geom_voronoiFirstCircle;\r\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\r\n        if (site.x !== x0 || site.y !== y0) {\r\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\r\n          d3_geom_voronoiAddBeach(site);\r\n          x0 = site.x, y0 = site.y;\r\n        }\r\n        site = sites.pop();\r\n      } else if (circle) {\r\n        d3_geom_voronoiRemoveBeach(circle.arc);\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\r\n    var diagram = {\r\n      cells: d3_geom_voronoiCells,\r\n      edges: d3_geom_voronoiEdges\r\n    };\r\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\r\n    return diagram;\r\n  }\r\n  function d3_geom_voronoiVertexOrder(a, b) {\r\n    return b.y - a.y || b.x - a.x;\r\n  }\r\n  d3.geom.voronoi = function(points) {\r\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\r\n    if (points) return voronoi(points);\r\n    function voronoi(data) {\r\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\r\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\r\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\r\n          var s = e.start();\r\n          return [ s.x, s.y ];\r\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\r\n        polygon.point = data[i];\r\n      });\r\n      return polygons;\r\n    }\r\n    function sites(data) {\r\n      return data.map(function(d, i) {\r\n        return {\r\n          x: Math.round(fx(d, i) / ε) * ε,\r\n          y: Math.round(fy(d, i) / ε) * ε,\r\n          i: i\r\n        };\r\n      });\r\n    }\r\n    voronoi.links = function(data) {\r\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\r\n        return edge.l && edge.r;\r\n      }).map(function(edge) {\r\n        return {\r\n          source: data[edge.l.i],\r\n          target: data[edge.r.i]\r\n        };\r\n      });\r\n    };\r\n    voronoi.triangles = function(data) {\r\n      var triangles = [];\r\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\r\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\r\n        while (++j < m) {\r\n          e0 = e1;\r\n          s0 = s1;\r\n          e1 = edges[j].edge;\r\n          s1 = e1.l === site ? e1.r : e1.l;\r\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\r\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\r\n          }\r\n        }\r\n      });\r\n      return triangles;\r\n    };\r\n    voronoi.x = function(_) {\r\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\r\n    };\r\n    voronoi.y = function(_) {\r\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\r\n    };\r\n    voronoi.clipExtent = function(_) {\r\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\r\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\r\n      return voronoi;\r\n    };\r\n    voronoi.size = function(_) {\r\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\r\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\r\n    };\r\n    return voronoi;\r\n  };\r\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\r\n  function d3_geom_voronoiTriangleArea(a, b, c) {\r\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\r\n  }\r\n  d3.geom.delaunay = function(vertices) {\r\n    return d3.geom.voronoi().triangles(vertices);\r\n  };\r\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\r\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\r\n    if (compat = arguments.length) {\r\n      x = d3_geom_quadtreeCompatX;\r\n      y = d3_geom_quadtreeCompatY;\r\n      if (compat === 3) {\r\n        y2 = y1;\r\n        x2 = x1;\r\n        y1 = x1 = 0;\r\n      }\r\n      return quadtree(points);\r\n    }\r\n    function quadtree(data) {\r\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\r\n      if (x1 != null) {\r\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\r\n      } else {\r\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\r\n        xs = [], ys = [];\r\n        n = data.length;\r\n        if (compat) for (i = 0; i < n; ++i) {\r\n          d = data[i];\r\n          if (d.x < x1_) x1_ = d.x;\r\n          if (d.y < y1_) y1_ = d.y;\r\n          if (d.x > x2_) x2_ = d.x;\r\n          if (d.y > y2_) y2_ = d.y;\r\n          xs.push(d.x);\r\n          ys.push(d.y);\r\n        } else for (i = 0; i < n; ++i) {\r\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\r\n          if (x_ < x1_) x1_ = x_;\r\n          if (y_ < y1_) y1_ = y_;\r\n          if (x_ > x2_) x2_ = x_;\r\n          if (y_ > y2_) y2_ = y_;\r\n          xs.push(x_);\r\n          ys.push(y_);\r\n        }\r\n      }\r\n      var dx = x2_ - x1_, dy = y2_ - y1_;\r\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\r\n      function insert(n, d, x, y, x1, y1, x2, y2) {\r\n        if (isNaN(x) || isNaN(y)) return;\r\n        if (n.leaf) {\r\n          var nx = n.x, ny = n.y;\r\n          if (nx != null) {\r\n            if (abs(nx - x) + abs(ny - y) < .01) {\r\n              insertChild(n, d, x, y, x1, y1, x2, y2);\r\n            } else {\r\n              var nPoint = n.point;\r\n              n.x = n.y = n.point = null;\r\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\r\n              insertChild(n, d, x, y, x1, y1, x2, y2);\r\n            }\r\n          } else {\r\n            n.x = x, n.y = y, n.point = d;\r\n          }\r\n        } else {\r\n          insertChild(n, d, x, y, x1, y1, x2, y2);\r\n        }\r\n      }\r\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\r\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\r\n        n.leaf = false;\r\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\r\n        if (right) x1 = xm; else x2 = xm;\r\n        if (below) y1 = ym; else y2 = ym;\r\n        insert(n, d, x, y, x1, y1, x2, y2);\r\n      }\r\n      var root = d3_geom_quadtreeNode();\r\n      root.add = function(d) {\r\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\r\n      };\r\n      root.visit = function(f) {\r\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\r\n      };\r\n      root.find = function(point) {\r\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\r\n      };\r\n      i = -1;\r\n      if (x1 == null) {\r\n        while (++i < n) {\r\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\r\n        }\r\n        --i;\r\n      } else data.forEach(root.add);\r\n      xs = ys = data = d = null;\r\n      return root;\r\n    }\r\n    quadtree.x = function(_) {\r\n      return arguments.length ? (x = _, quadtree) : x;\r\n    };\r\n    quadtree.y = function(_) {\r\n      return arguments.length ? (y = _, quadtree) : y;\r\n    };\r\n    quadtree.extent = function(_) {\r\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\r\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \r\n      y2 = +_[1][1];\r\n      return quadtree;\r\n    };\r\n    quadtree.size = function(_) {\r\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\r\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\r\n      return quadtree;\r\n    };\r\n    return quadtree;\r\n  };\r\n  function d3_geom_quadtreeCompatX(d) {\r\n    return d.x;\r\n  }\r\n  function d3_geom_quadtreeCompatY(d) {\r\n    return d.y;\r\n  }\r\n  function d3_geom_quadtreeNode() {\r\n    return {\r\n      leaf: true,\r\n      nodes: [],\r\n      point: null,\r\n      x: null,\r\n      y: null\r\n    };\r\n  }\r\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\r\n    if (!f(node, x1, y1, x2, y2)) {\r\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\r\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\r\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\r\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\r\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\r\n    }\r\n  }\r\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\r\n    var minDistance2 = Infinity, closestPoint;\r\n    (function find(node, x1, y1, x2, y2) {\r\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\r\n      if (point = node.point) {\r\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\r\n        if (distance2 < minDistance2) {\r\n          var distance = Math.sqrt(minDistance2 = distance2);\r\n          x0 = x - distance, y0 = y - distance;\r\n          x3 = x + distance, y3 = y + distance;\r\n          closestPoint = point;\r\n        }\r\n      }\r\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\r\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\r\n        if (node = children[i & 3]) switch (i & 3) {\r\n         case 0:\r\n          find(node, x1, y1, xm, ym);\r\n          break;\r\n\r\n         case 1:\r\n          find(node, xm, y1, x2, ym);\r\n          break;\r\n\r\n         case 2:\r\n          find(node, x1, ym, xm, y2);\r\n          break;\r\n\r\n         case 3:\r\n          find(node, xm, ym, x2, y2);\r\n          break;\r\n        }\r\n      }\r\n    })(root, x0, y0, x3, y3);\r\n    return closestPoint;\r\n  }\r\n  d3.interpolateRgb = d3_interpolateRgb;\r\n  function d3_interpolateRgb(a, b) {\r\n    a = d3.rgb(a);\r\n    b = d3.rgb(b);\r\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\r\n    return function(t) {\r\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\r\n    };\r\n  }\r\n  d3.interpolateObject = d3_interpolateObject;\r\n  function d3_interpolateObject(a, b) {\r\n    var i = {}, c = {}, k;\r\n    for (k in a) {\r\n      if (k in b) {\r\n        i[k] = d3_interpolate(a[k], b[k]);\r\n      } else {\r\n        c[k] = a[k];\r\n      }\r\n    }\r\n    for (k in b) {\r\n      if (!(k in a)) {\r\n        c[k] = b[k];\r\n      }\r\n    }\r\n    return function(t) {\r\n      for (k in i) c[k] = i[k](t);\r\n      return c;\r\n    };\r\n  }\r\n  d3.interpolateNumber = d3_interpolateNumber;\r\n  function d3_interpolateNumber(a, b) {\r\n    a = +a, b = +b;\r\n    return function(t) {\r\n      return a * (1 - t) + b * t;\r\n    };\r\n  }\r\n  d3.interpolateString = d3_interpolateString;\r\n  function d3_interpolateString(a, b) {\r\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\r\n    a = a + \"\", b = b + \"\";\r\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\r\n      if ((bs = bm.index) > bi) {\r\n        bs = b.slice(bi, bs);\r\n        if (s[i]) s[i] += bs; else s[++i] = bs;\r\n      }\r\n      if ((am = am[0]) === (bm = bm[0])) {\r\n        if (s[i]) s[i] += bm; else s[++i] = bm;\r\n      } else {\r\n        s[++i] = null;\r\n        q.push({\r\n          i: i,\r\n          x: d3_interpolateNumber(am, bm)\r\n        });\r\n      }\r\n      bi = d3_interpolate_numberB.lastIndex;\r\n    }\r\n    if (bi < b.length) {\r\n      bs = b.slice(bi);\r\n      if (s[i]) s[i] += bs; else s[++i] = bs;\r\n    }\r\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\r\n      return b(t) + \"\";\r\n    }) : function() {\r\n      return b;\r\n    } : (b = q.length, function(t) {\r\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\r\n      return s.join(\"\");\r\n    });\r\n  }\r\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\r\n  d3.interpolate = d3_interpolate;\r\n  function d3_interpolate(a, b) {\r\n    var i = d3.interpolators.length, f;\r\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\r\n    return f;\r\n  }\r\n  d3.interpolators = [ function(a, b) {\r\n    var t = typeof b;\r\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\r\n  } ];\r\n  d3.interpolateArray = d3_interpolateArray;\r\n  function d3_interpolateArray(a, b) {\r\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\r\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\r\n    for (;i < na; ++i) c[i] = a[i];\r\n    for (;i < nb; ++i) c[i] = b[i];\r\n    return function(t) {\r\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\r\n      return c;\r\n    };\r\n  }\r\n  var d3_ease_default = function() {\r\n    return d3_identity;\r\n  };\r\n  var d3_ease = d3.map({\r\n    linear: d3_ease_default,\r\n    poly: d3_ease_poly,\r\n    quad: function() {\r\n      return d3_ease_quad;\r\n    },\r\n    cubic: function() {\r\n      return d3_ease_cubic;\r\n    },\r\n    sin: function() {\r\n      return d3_ease_sin;\r\n    },\r\n    exp: function() {\r\n      return d3_ease_exp;\r\n    },\r\n    circle: function() {\r\n      return d3_ease_circle;\r\n    },\r\n    elastic: d3_ease_elastic,\r\n    back: d3_ease_back,\r\n    bounce: function() {\r\n      return d3_ease_bounce;\r\n    }\r\n  });\r\n  var d3_ease_mode = d3.map({\r\n    \"in\": d3_identity,\r\n    out: d3_ease_reverse,\r\n    \"in-out\": d3_ease_reflect,\r\n    \"out-in\": function(f) {\r\n      return d3_ease_reflect(d3_ease_reverse(f));\r\n    }\r\n  });\r\n  d3.ease = function(name) {\r\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\r\n    t = d3_ease.get(t) || d3_ease_default;\r\n    m = d3_ease_mode.get(m) || d3_identity;\r\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\r\n  };\r\n  function d3_ease_clamp(f) {\r\n    return function(t) {\r\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\r\n    };\r\n  }\r\n  function d3_ease_reverse(f) {\r\n    return function(t) {\r\n      return 1 - f(1 - t);\r\n    };\r\n  }\r\n  function d3_ease_reflect(f) {\r\n    return function(t) {\r\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\r\n    };\r\n  }\r\n  function d3_ease_quad(t) {\r\n    return t * t;\r\n  }\r\n  function d3_ease_cubic(t) {\r\n    return t * t * t;\r\n  }\r\n  function d3_ease_cubicInOut(t) {\r\n    if (t <= 0) return 0;\r\n    if (t >= 1) return 1;\r\n    var t2 = t * t, t3 = t2 * t;\r\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\r\n  }\r\n  function d3_ease_poly(e) {\r\n    return function(t) {\r\n      return Math.pow(t, e);\r\n    };\r\n  }\r\n  function d3_ease_sin(t) {\r\n    return 1 - Math.cos(t * halfπ);\r\n  }\r\n  function d3_ease_exp(t) {\r\n    return Math.pow(2, 10 * (t - 1));\r\n  }\r\n  function d3_ease_circle(t) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n  }\r\n  function d3_ease_elastic(a, p) {\r\n    var s;\r\n    if (arguments.length < 2) p = .45;\r\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\r\n    return function(t) {\r\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\r\n    };\r\n  }\r\n  function d3_ease_back(s) {\r\n    if (!s) s = 1.70158;\r\n    return function(t) {\r\n      return t * t * ((s + 1) * t - s);\r\n    };\r\n  }\r\n  function d3_ease_bounce(t) {\r\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\r\n  }\r\n  d3.interpolateHcl = d3_interpolateHcl;\r\n  function d3_interpolateHcl(a, b) {\r\n    a = d3.hcl(a);\r\n    b = d3.hcl(b);\r\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\r\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\r\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\r\n    return function(t) {\r\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\r\n    };\r\n  }\r\n  d3.interpolateHsl = d3_interpolateHsl;\r\n  function d3_interpolateHsl(a, b) {\r\n    a = d3.hsl(a);\r\n    b = d3.hsl(b);\r\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\r\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\r\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\r\n    return function(t) {\r\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\r\n    };\r\n  }\r\n  d3.interpolateLab = d3_interpolateLab;\r\n  function d3_interpolateLab(a, b) {\r\n    a = d3.lab(a);\r\n    b = d3.lab(b);\r\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\r\n    return function(t) {\r\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\r\n    };\r\n  }\r\n  d3.interpolateRound = d3_interpolateRound;\r\n  function d3_interpolateRound(a, b) {\r\n    b -= a;\r\n    return function(t) {\r\n      return Math.round(a + b * t);\r\n    };\r\n  }\r\n  d3.transform = function(string) {\r\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\r\n    return (d3.transform = function(string) {\r\n      if (string != null) {\r\n        g.setAttribute(\"transform\", string);\r\n        var t = g.transform.baseVal.consolidate();\r\n      }\r\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\r\n    })(string);\r\n  };\r\n  function d3_transform(m) {\r\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\r\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\r\n      r0[0] *= -1;\r\n      r0[1] *= -1;\r\n      kx *= -1;\r\n      kz *= -1;\r\n    }\r\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\r\n    this.translate = [ m.e, m.f ];\r\n    this.scale = [ kx, ky ];\r\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\r\n  }\r\n  d3_transform.prototype.toString = function() {\r\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\r\n  };\r\n  function d3_transformDot(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1];\r\n  }\r\n  function d3_transformNormalize(a) {\r\n    var k = Math.sqrt(d3_transformDot(a, a));\r\n    if (k) {\r\n      a[0] /= k;\r\n      a[1] /= k;\r\n    }\r\n    return k;\r\n  }\r\n  function d3_transformCombine(a, b, k) {\r\n    a[0] += k * b[0];\r\n    a[1] += k * b[1];\r\n    return a;\r\n  }\r\n  var d3_transformIdentity = {\r\n    a: 1,\r\n    b: 0,\r\n    c: 0,\r\n    d: 1,\r\n    e: 0,\r\n    f: 0\r\n  };\r\n  d3.interpolateTransform = d3_interpolateTransform;\r\n  function d3_interpolateTransformPop(s) {\r\n    return s.length ? s.pop() + \",\" : \"\";\r\n  }\r\n  function d3_interpolateTranslate(ta, tb, s, q) {\r\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\r\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\r\n      q.push({\r\n        i: i - 4,\r\n        x: d3_interpolateNumber(ta[0], tb[0])\r\n      }, {\r\n        i: i - 2,\r\n        x: d3_interpolateNumber(ta[1], tb[1])\r\n      });\r\n    } else if (tb[0] || tb[1]) {\r\n      s.push(\"translate(\" + tb + \")\");\r\n    }\r\n  }\r\n  function d3_interpolateRotate(ra, rb, s, q) {\r\n    if (ra !== rb) {\r\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\r\n      q.push({\r\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\r\n        x: d3_interpolateNumber(ra, rb)\r\n      });\r\n    } else if (rb) {\r\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\r\n    }\r\n  }\r\n  function d3_interpolateSkew(wa, wb, s, q) {\r\n    if (wa !== wb) {\r\n      q.push({\r\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\r\n        x: d3_interpolateNumber(wa, wb)\r\n      });\r\n    } else if (wb) {\r\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\r\n    }\r\n  }\r\n  function d3_interpolateScale(ka, kb, s, q) {\r\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\r\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\r\n      q.push({\r\n        i: i - 4,\r\n        x: d3_interpolateNumber(ka[0], kb[0])\r\n      }, {\r\n        i: i - 2,\r\n        x: d3_interpolateNumber(ka[1], kb[1])\r\n      });\r\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\r\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\r\n    }\r\n  }\r\n  function d3_interpolateTransform(a, b) {\r\n    var s = [], q = [];\r\n    a = d3.transform(a), b = d3.transform(b);\r\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\r\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\r\n    d3_interpolateSkew(a.skew, b.skew, s, q);\r\n    d3_interpolateScale(a.scale, b.scale, s, q);\r\n    a = b = null;\r\n    return function(t) {\r\n      var i = -1, n = q.length, o;\r\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\r\n      return s.join(\"\");\r\n    };\r\n  }\r\n  function d3_uninterpolateNumber(a, b) {\r\n    b = (b -= a = +a) || 1 / b;\r\n    return function(x) {\r\n      return (x - a) / b;\r\n    };\r\n  }\r\n  function d3_uninterpolateClamp(a, b) {\r\n    b = (b -= a = +a) || 1 / b;\r\n    return function(x) {\r\n      return Math.max(0, Math.min(1, (x - a) / b));\r\n    };\r\n  }\r\n  d3.layout = {};\r\n  d3.layout.bundle = function() {\r\n    return function(links) {\r\n      var paths = [], i = -1, n = links.length;\r\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\r\n      return paths;\r\n    };\r\n  };\r\n  function d3_layout_bundlePath(link) {\r\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\r\n    while (start !== lca) {\r\n      start = start.parent;\r\n      points.push(start);\r\n    }\r\n    var k = points.length;\r\n    while (end !== lca) {\r\n      points.splice(k, 0, end);\r\n      end = end.parent;\r\n    }\r\n    return points;\r\n  }\r\n  function d3_layout_bundleAncestors(node) {\r\n    var ancestors = [], parent = node.parent;\r\n    while (parent != null) {\r\n      ancestors.push(node);\r\n      node = parent;\r\n      parent = parent.parent;\r\n    }\r\n    ancestors.push(node);\r\n    return ancestors;\r\n  }\r\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\r\n    if (a === b) return a;\r\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\r\n    while (aNode === bNode) {\r\n      sharedNode = aNode;\r\n      aNode = aNodes.pop();\r\n      bNode = bNodes.pop();\r\n    }\r\n    return sharedNode;\r\n  }\r\n  d3.layout.chord = function() {\r\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\r\n    function relayout() {\r\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\r\n      chords = [];\r\n      groups = [];\r\n      k = 0, i = -1;\r\n      while (++i < n) {\r\n        x = 0, j = -1;\r\n        while (++j < n) {\r\n          x += matrix[i][j];\r\n        }\r\n        groupSums.push(x);\r\n        subgroupIndex.push(d3.range(n));\r\n        k += x;\r\n      }\r\n      if (sortGroups) {\r\n        groupIndex.sort(function(a, b) {\r\n          return sortGroups(groupSums[a], groupSums[b]);\r\n        });\r\n      }\r\n      if (sortSubgroups) {\r\n        subgroupIndex.forEach(function(d, i) {\r\n          d.sort(function(a, b) {\r\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\r\n          });\r\n        });\r\n      }\r\n      k = (τ - padding * n) / k;\r\n      x = 0, i = -1;\r\n      while (++i < n) {\r\n        x0 = x, j = -1;\r\n        while (++j < n) {\r\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\r\n          subgroups[di + \"-\" + dj] = {\r\n            index: di,\r\n            subindex: dj,\r\n            startAngle: a0,\r\n            endAngle: a1,\r\n            value: v\r\n          };\r\n        }\r\n        groups[di] = {\r\n          index: di,\r\n          startAngle: x0,\r\n          endAngle: x,\r\n          value: groupSums[di]\r\n        };\r\n        x += padding;\r\n      }\r\n      i = -1;\r\n      while (++i < n) {\r\n        j = i - 1;\r\n        while (++j < n) {\r\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\r\n          if (source.value || target.value) {\r\n            chords.push(source.value < target.value ? {\r\n              source: target,\r\n              target: source\r\n            } : {\r\n              source: source,\r\n              target: target\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (sortChords) resort();\r\n    }\r\n    function resort() {\r\n      chords.sort(function(a, b) {\r\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\r\n      });\r\n    }\r\n    chord.matrix = function(x) {\r\n      if (!arguments.length) return matrix;\r\n      n = (matrix = x) && matrix.length;\r\n      chords = groups = null;\r\n      return chord;\r\n    };\r\n    chord.padding = function(x) {\r\n      if (!arguments.length) return padding;\r\n      padding = x;\r\n      chords = groups = null;\r\n      return chord;\r\n    };\r\n    chord.sortGroups = function(x) {\r\n      if (!arguments.length) return sortGroups;\r\n      sortGroups = x;\r\n      chords = groups = null;\r\n      return chord;\r\n    };\r\n    chord.sortSubgroups = function(x) {\r\n      if (!arguments.length) return sortSubgroups;\r\n      sortSubgroups = x;\r\n      chords = null;\r\n      return chord;\r\n    };\r\n    chord.sortChords = function(x) {\r\n      if (!arguments.length) return sortChords;\r\n      sortChords = x;\r\n      if (chords) resort();\r\n      return chord;\r\n    };\r\n    chord.chords = function() {\r\n      if (!chords) relayout();\r\n      return chords;\r\n    };\r\n    chord.groups = function() {\r\n      if (!groups) relayout();\r\n      return groups;\r\n    };\r\n    return chord;\r\n  };\r\n  d3.layout.force = function() {\r\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\r\n    function repulse(node) {\r\n      return function(quad, x1, _, x2) {\r\n        if (quad.point !== node) {\r\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\r\n          if (dw * dw / theta2 < dn) {\r\n            if (dn < chargeDistance2) {\r\n              var k = quad.charge / dn;\r\n              node.px -= dx * k;\r\n              node.py -= dy * k;\r\n            }\r\n            return true;\r\n          }\r\n          if (quad.point && dn && dn < chargeDistance2) {\r\n            var k = quad.pointCharge / dn;\r\n            node.px -= dx * k;\r\n            node.py -= dy * k;\r\n          }\r\n        }\r\n        return !quad.charge;\r\n      };\r\n    }\r\n    force.tick = function() {\r\n      if ((alpha *= .99) < .005) {\r\n        timer = null;\r\n        event.end({\r\n          type: \"end\",\r\n          alpha: alpha = 0\r\n        });\r\n        return true;\r\n      }\r\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\r\n      for (i = 0; i < m; ++i) {\r\n        o = links[i];\r\n        s = o.source;\r\n        t = o.target;\r\n        x = t.x - s.x;\r\n        y = t.y - s.y;\r\n        if (l = x * x + y * y) {\r\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\r\n          x *= l;\r\n          y *= l;\r\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\r\n          t.y -= y * k;\r\n          s.x += x * (k = 1 - k);\r\n          s.y += y * k;\r\n        }\r\n      }\r\n      if (k = alpha * gravity) {\r\n        x = size[0] / 2;\r\n        y = size[1] / 2;\r\n        i = -1;\r\n        if (k) while (++i < n) {\r\n          o = nodes[i];\r\n          o.x += (x - o.x) * k;\r\n          o.y += (y - o.y) * k;\r\n        }\r\n      }\r\n      if (charge) {\r\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\r\n        i = -1;\r\n        while (++i < n) {\r\n          if (!(o = nodes[i]).fixed) {\r\n            q.visit(repulse(o));\r\n          }\r\n        }\r\n      }\r\n      i = -1;\r\n      while (++i < n) {\r\n        o = nodes[i];\r\n        if (o.fixed) {\r\n          o.x = o.px;\r\n          o.y = o.py;\r\n        } else {\r\n          o.x -= (o.px - (o.px = o.x)) * friction;\r\n          o.y -= (o.py - (o.py = o.y)) * friction;\r\n        }\r\n      }\r\n      event.tick({\r\n        type: \"tick\",\r\n        alpha: alpha\r\n      });\r\n    };\r\n    force.nodes = function(x) {\r\n      if (!arguments.length) return nodes;\r\n      nodes = x;\r\n      return force;\r\n    };\r\n    force.links = function(x) {\r\n      if (!arguments.length) return links;\r\n      links = x;\r\n      return force;\r\n    };\r\n    force.size = function(x) {\r\n      if (!arguments.length) return size;\r\n      size = x;\r\n      return force;\r\n    };\r\n    force.linkDistance = function(x) {\r\n      if (!arguments.length) return linkDistance;\r\n      linkDistance = typeof x === \"function\" ? x : +x;\r\n      return force;\r\n    };\r\n    force.distance = force.linkDistance;\r\n    force.linkStrength = function(x) {\r\n      if (!arguments.length) return linkStrength;\r\n      linkStrength = typeof x === \"function\" ? x : +x;\r\n      return force;\r\n    };\r\n    force.friction = function(x) {\r\n      if (!arguments.length) return friction;\r\n      friction = +x;\r\n      return force;\r\n    };\r\n    force.charge = function(x) {\r\n      if (!arguments.length) return charge;\r\n      charge = typeof x === \"function\" ? x : +x;\r\n      return force;\r\n    };\r\n    force.chargeDistance = function(x) {\r\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\r\n      chargeDistance2 = x * x;\r\n      return force;\r\n    };\r\n    force.gravity = function(x) {\r\n      if (!arguments.length) return gravity;\r\n      gravity = +x;\r\n      return force;\r\n    };\r\n    force.theta = function(x) {\r\n      if (!arguments.length) return Math.sqrt(theta2);\r\n      theta2 = x * x;\r\n      return force;\r\n    };\r\n    force.alpha = function(x) {\r\n      if (!arguments.length) return alpha;\r\n      x = +x;\r\n      if (alpha) {\r\n        if (x > 0) {\r\n          alpha = x;\r\n        } else {\r\n          timer.c = null, timer.t = NaN, timer = null;\r\n          event.end({\r\n            type: \"end\",\r\n            alpha: alpha = 0\r\n          });\r\n        }\r\n      } else if (x > 0) {\r\n        event.start({\r\n          type: \"start\",\r\n          alpha: alpha = x\r\n        });\r\n        timer = d3_timer(force.tick);\r\n      }\r\n      return force;\r\n    };\r\n    force.start = function() {\r\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\r\n      for (i = 0; i < n; ++i) {\r\n        (o = nodes[i]).index = i;\r\n        o.weight = 0;\r\n      }\r\n      for (i = 0; i < m; ++i) {\r\n        o = links[i];\r\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\r\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\r\n        ++o.source.weight;\r\n        ++o.target.weight;\r\n      }\r\n      for (i = 0; i < n; ++i) {\r\n        o = nodes[i];\r\n        if (isNaN(o.x)) o.x = position(\"x\", w);\r\n        if (isNaN(o.y)) o.y = position(\"y\", h);\r\n        if (isNaN(o.px)) o.px = o.x;\r\n        if (isNaN(o.py)) o.py = o.y;\r\n      }\r\n      distances = [];\r\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\r\n      strengths = [];\r\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\r\n      charges = [];\r\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\r\n      function position(dimension, size) {\r\n        if (!neighbors) {\r\n          neighbors = new Array(n);\r\n          for (j = 0; j < n; ++j) {\r\n            neighbors[j] = [];\r\n          }\r\n          for (j = 0; j < m; ++j) {\r\n            var o = links[j];\r\n            neighbors[o.source.index].push(o.target);\r\n            neighbors[o.target.index].push(o.source);\r\n          }\r\n        }\r\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\r\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\r\n        return Math.random() * size;\r\n      }\r\n      return force.resume();\r\n    };\r\n    force.resume = function() {\r\n      return force.alpha(.1);\r\n    };\r\n    force.stop = function() {\r\n      return force.alpha(0);\r\n    };\r\n    force.drag = function() {\r\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\r\n      if (!arguments.length) return drag;\r\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\r\n    };\r\n    function dragmove(d) {\r\n      d.px = d3.event.x, d.py = d3.event.y;\r\n      force.resume();\r\n    }\r\n    return d3.rebind(force, event, \"on\");\r\n  };\r\n  function d3_layout_forceDragstart(d) {\r\n    d.fixed |= 2;\r\n  }\r\n  function d3_layout_forceDragend(d) {\r\n    d.fixed &= ~6;\r\n  }\r\n  function d3_layout_forceMouseover(d) {\r\n    d.fixed |= 4;\r\n    d.px = d.x, d.py = d.y;\r\n  }\r\n  function d3_layout_forceMouseout(d) {\r\n    d.fixed &= ~4;\r\n  }\r\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\r\n    var cx = 0, cy = 0;\r\n    quad.charge = 0;\r\n    if (!quad.leaf) {\r\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\r\n      while (++i < n) {\r\n        c = nodes[i];\r\n        if (c == null) continue;\r\n        d3_layout_forceAccumulate(c, alpha, charges);\r\n        quad.charge += c.charge;\r\n        cx += c.charge * c.cx;\r\n        cy += c.charge * c.cy;\r\n      }\r\n    }\r\n    if (quad.point) {\r\n      if (!quad.leaf) {\r\n        quad.point.x += Math.random() - .5;\r\n        quad.point.y += Math.random() - .5;\r\n      }\r\n      var k = alpha * charges[quad.point.index];\r\n      quad.charge += quad.pointCharge = k;\r\n      cx += k * quad.point.x;\r\n      cy += k * quad.point.y;\r\n    }\r\n    quad.cx = cx / quad.charge;\r\n    quad.cy = cy / quad.charge;\r\n  }\r\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\r\n  d3.layout.hierarchy = function() {\r\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\r\n    function hierarchy(root) {\r\n      var stack = [ root ], nodes = [], node;\r\n      root.depth = 0;\r\n      while ((node = stack.pop()) != null) {\r\n        nodes.push(node);\r\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\r\n          var n, childs, child;\r\n          while (--n >= 0) {\r\n            stack.push(child = childs[n]);\r\n            child.parent = node;\r\n            child.depth = node.depth + 1;\r\n          }\r\n          if (value) node.value = 0;\r\n          node.children = childs;\r\n        } else {\r\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\r\n          delete node.children;\r\n        }\r\n      }\r\n      d3_layout_hierarchyVisitAfter(root, function(node) {\r\n        var childs, parent;\r\n        if (sort && (childs = node.children)) childs.sort(sort);\r\n        if (value && (parent = node.parent)) parent.value += node.value;\r\n      });\r\n      return nodes;\r\n    }\r\n    hierarchy.sort = function(x) {\r\n      if (!arguments.length) return sort;\r\n      sort = x;\r\n      return hierarchy;\r\n    };\r\n    hierarchy.children = function(x) {\r\n      if (!arguments.length) return children;\r\n      children = x;\r\n      return hierarchy;\r\n    };\r\n    hierarchy.value = function(x) {\r\n      if (!arguments.length) return value;\r\n      value = x;\r\n      return hierarchy;\r\n    };\r\n    hierarchy.revalue = function(root) {\r\n      if (value) {\r\n        d3_layout_hierarchyVisitBefore(root, function(node) {\r\n          if (node.children) node.value = 0;\r\n        });\r\n        d3_layout_hierarchyVisitAfter(root, function(node) {\r\n          var parent;\r\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\r\n          if (parent = node.parent) parent.value += node.value;\r\n        });\r\n      }\r\n      return root;\r\n    };\r\n    return hierarchy;\r\n  };\r\n  function d3_layout_hierarchyRebind(object, hierarchy) {\r\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\r\n    object.nodes = object;\r\n    object.links = d3_layout_hierarchyLinks;\r\n    return object;\r\n  }\r\n  function d3_layout_hierarchyVisitBefore(node, callback) {\r\n    var nodes = [ node ];\r\n    while ((node = nodes.pop()) != null) {\r\n      callback(node);\r\n      if ((children = node.children) && (n = children.length)) {\r\n        var n, children;\r\n        while (--n >= 0) nodes.push(children[n]);\r\n      }\r\n    }\r\n  }\r\n  function d3_layout_hierarchyVisitAfter(node, callback) {\r\n    var nodes = [ node ], nodes2 = [];\r\n    while ((node = nodes.pop()) != null) {\r\n      nodes2.push(node);\r\n      if ((children = node.children) && (n = children.length)) {\r\n        var i = -1, n, children;\r\n        while (++i < n) nodes.push(children[i]);\r\n      }\r\n    }\r\n    while ((node = nodes2.pop()) != null) {\r\n      callback(node);\r\n    }\r\n  }\r\n  function d3_layout_hierarchyChildren(d) {\r\n    return d.children;\r\n  }\r\n  function d3_layout_hierarchyValue(d) {\r\n    return d.value;\r\n  }\r\n  function d3_layout_hierarchySort(a, b) {\r\n    return b.value - a.value;\r\n  }\r\n  function d3_layout_hierarchyLinks(nodes) {\r\n    return d3.merge(nodes.map(function(parent) {\r\n      return (parent.children || []).map(function(child) {\r\n        return {\r\n          source: parent,\r\n          target: child\r\n        };\r\n      });\r\n    }));\r\n  }\r\n  d3.layout.partition = function() {\r\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\r\n    function position(node, x, dx, dy) {\r\n      var children = node.children;\r\n      node.x = x;\r\n      node.y = node.depth * dy;\r\n      node.dx = dx;\r\n      node.dy = dy;\r\n      if (children && (n = children.length)) {\r\n        var i = -1, n, c, d;\r\n        dx = node.value ? dx / node.value : 0;\r\n        while (++i < n) {\r\n          position(c = children[i], x, d = c.value * dx, dy);\r\n          x += d;\r\n        }\r\n      }\r\n    }\r\n    function depth(node) {\r\n      var children = node.children, d = 0;\r\n      if (children && (n = children.length)) {\r\n        var i = -1, n;\r\n        while (++i < n) d = Math.max(d, depth(children[i]));\r\n      }\r\n      return 1 + d;\r\n    }\r\n    function partition(d, i) {\r\n      var nodes = hierarchy.call(this, d, i);\r\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\r\n      return nodes;\r\n    }\r\n    partition.size = function(x) {\r\n      if (!arguments.length) return size;\r\n      size = x;\r\n      return partition;\r\n    };\r\n    return d3_layout_hierarchyRebind(partition, hierarchy);\r\n  };\r\n  d3.layout.pie = function() {\r\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\r\n    function pie(data) {\r\n      var n = data.length, values = data.map(function(d, i) {\r\n        return +value.call(pie, d, i);\r\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\r\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\r\n        return values[j] - values[i];\r\n      } : function(i, j) {\r\n        return sort(data[i], data[j]);\r\n      });\r\n      index.forEach(function(i) {\r\n        arcs[i] = {\r\n          data: data[i],\r\n          value: v = values[i],\r\n          startAngle: a,\r\n          endAngle: a += v * k + pa,\r\n          padAngle: p\r\n        };\r\n      });\r\n      return arcs;\r\n    }\r\n    pie.value = function(_) {\r\n      if (!arguments.length) return value;\r\n      value = _;\r\n      return pie;\r\n    };\r\n    pie.sort = function(_) {\r\n      if (!arguments.length) return sort;\r\n      sort = _;\r\n      return pie;\r\n    };\r\n    pie.startAngle = function(_) {\r\n      if (!arguments.length) return startAngle;\r\n      startAngle = _;\r\n      return pie;\r\n    };\r\n    pie.endAngle = function(_) {\r\n      if (!arguments.length) return endAngle;\r\n      endAngle = _;\r\n      return pie;\r\n    };\r\n    pie.padAngle = function(_) {\r\n      if (!arguments.length) return padAngle;\r\n      padAngle = _;\r\n      return pie;\r\n    };\r\n    return pie;\r\n  };\r\n  var d3_layout_pieSortByValue = {};\r\n  d3.layout.stack = function() {\r\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\r\n    function stack(data, index) {\r\n      if (!(n = data.length)) return data;\r\n      var series = data.map(function(d, i) {\r\n        return values.call(stack, d, i);\r\n      });\r\n      var points = series.map(function(d) {\r\n        return d.map(function(v, i) {\r\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\r\n        });\r\n      });\r\n      var orders = order.call(stack, points, index);\r\n      series = d3.permute(series, orders);\r\n      points = d3.permute(points, orders);\r\n      var offsets = offset.call(stack, points, index);\r\n      var m = series[0].length, n, i, j, o;\r\n      for (j = 0; j < m; ++j) {\r\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\r\n        for (i = 1; i < n; ++i) {\r\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\r\n        }\r\n      }\r\n      return data;\r\n    }\r\n    stack.values = function(x) {\r\n      if (!arguments.length) return values;\r\n      values = x;\r\n      return stack;\r\n    };\r\n    stack.order = function(x) {\r\n      if (!arguments.length) return order;\r\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\r\n      return stack;\r\n    };\r\n    stack.offset = function(x) {\r\n      if (!arguments.length) return offset;\r\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\r\n      return stack;\r\n    };\r\n    stack.x = function(z) {\r\n      if (!arguments.length) return x;\r\n      x = z;\r\n      return stack;\r\n    };\r\n    stack.y = function(z) {\r\n      if (!arguments.length) return y;\r\n      y = z;\r\n      return stack;\r\n    };\r\n    stack.out = function(z) {\r\n      if (!arguments.length) return out;\r\n      out = z;\r\n      return stack;\r\n    };\r\n    return stack;\r\n  };\r\n  function d3_layout_stackX(d) {\r\n    return d.x;\r\n  }\r\n  function d3_layout_stackY(d) {\r\n    return d.y;\r\n  }\r\n  function d3_layout_stackOut(d, y0, y) {\r\n    d.y0 = y0;\r\n    d.y = y;\r\n  }\r\n  var d3_layout_stackOrders = d3.map({\r\n    \"inside-out\": function(data) {\r\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\r\n        return max[a] - max[b];\r\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\r\n      for (i = 0; i < n; ++i) {\r\n        j = index[i];\r\n        if (top < bottom) {\r\n          top += sums[j];\r\n          tops.push(j);\r\n        } else {\r\n          bottom += sums[j];\r\n          bottoms.push(j);\r\n        }\r\n      }\r\n      return bottoms.reverse().concat(tops);\r\n    },\r\n    reverse: function(data) {\r\n      return d3.range(data.length).reverse();\r\n    },\r\n    \"default\": d3_layout_stackOrderDefault\r\n  });\r\n  var d3_layout_stackOffsets = d3.map({\r\n    silhouette: function(data) {\r\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\r\n      for (j = 0; j < m; ++j) {\r\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\r\n        if (o > max) max = o;\r\n        sums.push(o);\r\n      }\r\n      for (j = 0; j < m; ++j) {\r\n        y0[j] = (max - sums[j]) / 2;\r\n      }\r\n      return y0;\r\n    },\r\n    wiggle: function(data) {\r\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\r\n      y0[0] = o = o0 = 0;\r\n      for (j = 1; j < m; ++j) {\r\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\r\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\r\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\r\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\r\n          }\r\n          s2 += s3 * data[i][j][1];\r\n        }\r\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\r\n        if (o < o0) o0 = o;\r\n      }\r\n      for (j = 0; j < m; ++j) y0[j] -= o0;\r\n      return y0;\r\n    },\r\n    expand: function(data) {\r\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\r\n      for (j = 0; j < m; ++j) {\r\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\r\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\r\n      }\r\n      for (j = 0; j < m; ++j) y0[j] = 0;\r\n      return y0;\r\n    },\r\n    zero: d3_layout_stackOffsetZero\r\n  });\r\n  function d3_layout_stackOrderDefault(data) {\r\n    return d3.range(data.length);\r\n  }\r\n  function d3_layout_stackOffsetZero(data) {\r\n    var j = -1, m = data[0].length, y0 = [];\r\n    while (++j < m) y0[j] = 0;\r\n    return y0;\r\n  }\r\n  function d3_layout_stackMaxIndex(array) {\r\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\r\n    for (;i < n; ++i) {\r\n      if ((k = array[i][1]) > v) {\r\n        j = i;\r\n        v = k;\r\n      }\r\n    }\r\n    return j;\r\n  }\r\n  function d3_layout_stackReduceSum(d) {\r\n    return d.reduce(d3_layout_stackSum, 0);\r\n  }\r\n  function d3_layout_stackSum(p, d) {\r\n    return p + d[1];\r\n  }\r\n  d3.layout.histogram = function() {\r\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\r\n    function histogram(data, i) {\r\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\r\n      while (++i < m) {\r\n        bin = bins[i] = [];\r\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\r\n        bin.y = 0;\r\n      }\r\n      if (m > 0) {\r\n        i = -1;\r\n        while (++i < n) {\r\n          x = values[i];\r\n          if (x >= range[0] && x <= range[1]) {\r\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\r\n            bin.y += k;\r\n            bin.push(data[i]);\r\n          }\r\n        }\r\n      }\r\n      return bins;\r\n    }\r\n    histogram.value = function(x) {\r\n      if (!arguments.length) return valuer;\r\n      valuer = x;\r\n      return histogram;\r\n    };\r\n    histogram.range = function(x) {\r\n      if (!arguments.length) return ranger;\r\n      ranger = d3_functor(x);\r\n      return histogram;\r\n    };\r\n    histogram.bins = function(x) {\r\n      if (!arguments.length) return binner;\r\n      binner = typeof x === \"number\" ? function(range) {\r\n        return d3_layout_histogramBinFixed(range, x);\r\n      } : d3_functor(x);\r\n      return histogram;\r\n    };\r\n    histogram.frequency = function(x) {\r\n      if (!arguments.length) return frequency;\r\n      frequency = !!x;\r\n      return histogram;\r\n    };\r\n    return histogram;\r\n  };\r\n  function d3_layout_histogramBinSturges(range, values) {\r\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\r\n  }\r\n  function d3_layout_histogramBinFixed(range, n) {\r\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\r\n    while (++x <= n) f[x] = m * x + b;\r\n    return f;\r\n  }\r\n  function d3_layout_histogramRange(values) {\r\n    return [ d3.min(values), d3.max(values) ];\r\n  }\r\n  d3.layout.pack = function() {\r\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\r\n    function pack(d, i) {\r\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\r\n        return radius;\r\n      };\r\n      root.x = root.y = 0;\r\n      d3_layout_hierarchyVisitAfter(root, function(d) {\r\n        d.r = +r(d.value);\r\n      });\r\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\r\n      if (padding) {\r\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\r\n        d3_layout_hierarchyVisitAfter(root, function(d) {\r\n          d.r += dr;\r\n        });\r\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\r\n        d3_layout_hierarchyVisitAfter(root, function(d) {\r\n          d.r -= dr;\r\n        });\r\n      }\r\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\r\n      return nodes;\r\n    }\r\n    pack.size = function(_) {\r\n      if (!arguments.length) return size;\r\n      size = _;\r\n      return pack;\r\n    };\r\n    pack.radius = function(_) {\r\n      if (!arguments.length) return radius;\r\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\r\n      return pack;\r\n    };\r\n    pack.padding = function(_) {\r\n      if (!arguments.length) return padding;\r\n      padding = +_;\r\n      return pack;\r\n    };\r\n    return d3_layout_hierarchyRebind(pack, hierarchy);\r\n  };\r\n  function d3_layout_packSort(a, b) {\r\n    return a.value - b.value;\r\n  }\r\n  function d3_layout_packInsert(a, b) {\r\n    var c = a._pack_next;\r\n    a._pack_next = b;\r\n    b._pack_prev = a;\r\n    b._pack_next = c;\r\n    c._pack_prev = b;\r\n  }\r\n  function d3_layout_packSplice(a, b) {\r\n    a._pack_next = b;\r\n    b._pack_prev = a;\r\n  }\r\n  function d3_layout_packIntersects(a, b) {\r\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\r\n    return .999 * dr * dr > dx * dx + dy * dy;\r\n  }\r\n  function d3_layout_packSiblings(node) {\r\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\r\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\r\n    function bound(node) {\r\n      xMin = Math.min(node.x - node.r, xMin);\r\n      xMax = Math.max(node.x + node.r, xMax);\r\n      yMin = Math.min(node.y - node.r, yMin);\r\n      yMax = Math.max(node.y + node.r, yMax);\r\n    }\r\n    nodes.forEach(d3_layout_packLink);\r\n    a = nodes[0];\r\n    a.x = -a.r;\r\n    a.y = 0;\r\n    bound(a);\r\n    if (n > 1) {\r\n      b = nodes[1];\r\n      b.x = b.r;\r\n      b.y = 0;\r\n      bound(b);\r\n      if (n > 2) {\r\n        c = nodes[2];\r\n        d3_layout_packPlace(a, b, c);\r\n        bound(c);\r\n        d3_layout_packInsert(a, c);\r\n        a._pack_prev = c;\r\n        d3_layout_packInsert(c, b);\r\n        b = a._pack_next;\r\n        for (i = 3; i < n; i++) {\r\n          d3_layout_packPlace(a, b, c = nodes[i]);\r\n          var isect = 0, s1 = 1, s2 = 1;\r\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\r\n            if (d3_layout_packIntersects(j, c)) {\r\n              isect = 1;\r\n              break;\r\n            }\r\n          }\r\n          if (isect == 1) {\r\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\r\n              if (d3_layout_packIntersects(k, c)) {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          if (isect) {\r\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\r\n            i--;\r\n          } else {\r\n            d3_layout_packInsert(a, c);\r\n            b = c;\r\n            bound(c);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\r\n    for (i = 0; i < n; i++) {\r\n      c = nodes[i];\r\n      c.x -= cx;\r\n      c.y -= cy;\r\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\r\n    }\r\n    node.r = cr;\r\n    nodes.forEach(d3_layout_packUnlink);\r\n  }\r\n  function d3_layout_packLink(node) {\r\n    node._pack_next = node._pack_prev = node;\r\n  }\r\n  function d3_layout_packUnlink(node) {\r\n    delete node._pack_next;\r\n    delete node._pack_prev;\r\n  }\r\n  function d3_layout_packTransform(node, x, y, k) {\r\n    var children = node.children;\r\n    node.x = x += k * node.x;\r\n    node.y = y += k * node.y;\r\n    node.r *= k;\r\n    if (children) {\r\n      var i = -1, n = children.length;\r\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\r\n    }\r\n  }\r\n  function d3_layout_packPlace(a, b, c) {\r\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\r\n    if (db && (dx || dy)) {\r\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\r\n      da *= da;\r\n      db *= db;\r\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\r\n      c.x = a.x + x * dx + y * dy;\r\n      c.y = a.y + x * dy - y * dx;\r\n    } else {\r\n      c.x = a.x + db;\r\n      c.y = a.y;\r\n    }\r\n  }\r\n  d3.layout.tree = function() {\r\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\r\n    function tree(d, i) {\r\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\r\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\r\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\r\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\r\n        var left = root0, right = root0, bottom = root0;\r\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\r\n          if (node.x < left.x) left = node;\r\n          if (node.x > right.x) right = node;\r\n          if (node.depth > bottom.depth) bottom = node;\r\n        });\r\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\r\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\r\n          node.x = (node.x + tx) * kx;\r\n          node.y = node.depth * ky;\r\n        });\r\n      }\r\n      return nodes;\r\n    }\r\n    function wrapTree(root0) {\r\n      var root1 = {\r\n        A: null,\r\n        children: [ root0 ]\r\n      }, queue = [ root1 ], node1;\r\n      while ((node1 = queue.pop()) != null) {\r\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\r\n          queue.push((children[i] = child = {\r\n            _: children[i],\r\n            parent: node1,\r\n            children: (child = children[i].children) && child.slice() || [],\r\n            A: null,\r\n            a: null,\r\n            z: 0,\r\n            m: 0,\r\n            c: 0,\r\n            s: 0,\r\n            t: null,\r\n            i: i\r\n          }).a = child);\r\n        }\r\n      }\r\n      return root1.children[0];\r\n    }\r\n    function firstWalk(v) {\r\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\r\n      if (children.length) {\r\n        d3_layout_treeShift(v);\r\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\r\n        if (w) {\r\n          v.z = w.z + separation(v._, w._);\r\n          v.m = v.z - midpoint;\r\n        } else {\r\n          v.z = midpoint;\r\n        }\r\n      } else if (w) {\r\n        v.z = w.z + separation(v._, w._);\r\n      }\r\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\r\n    }\r\n    function secondWalk(v) {\r\n      v._.x = v.z + v.parent.m;\r\n      v.m += v.parent.m;\r\n    }\r\n    function apportion(v, w, ancestor) {\r\n      if (w) {\r\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\r\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\r\n          vom = d3_layout_treeLeft(vom);\r\n          vop = d3_layout_treeRight(vop);\r\n          vop.a = v;\r\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\r\n          if (shift > 0) {\r\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\r\n            sip += shift;\r\n            sop += shift;\r\n          }\r\n          sim += vim.m;\r\n          sip += vip.m;\r\n          som += vom.m;\r\n          sop += vop.m;\r\n        }\r\n        if (vim && !d3_layout_treeRight(vop)) {\r\n          vop.t = vim;\r\n          vop.m += sim - sop;\r\n        }\r\n        if (vip && !d3_layout_treeLeft(vom)) {\r\n          vom.t = vip;\r\n          vom.m += sip - som;\r\n          ancestor = v;\r\n        }\r\n      }\r\n      return ancestor;\r\n    }\r\n    function sizeNode(node) {\r\n      node.x *= size[0];\r\n      node.y = node.depth * size[1];\r\n    }\r\n    tree.separation = function(x) {\r\n      if (!arguments.length) return separation;\r\n      separation = x;\r\n      return tree;\r\n    };\r\n    tree.size = function(x) {\r\n      if (!arguments.length) return nodeSize ? null : size;\r\n      nodeSize = (size = x) == null ? sizeNode : null;\r\n      return tree;\r\n    };\r\n    tree.nodeSize = function(x) {\r\n      if (!arguments.length) return nodeSize ? size : null;\r\n      nodeSize = (size = x) == null ? null : sizeNode;\r\n      return tree;\r\n    };\r\n    return d3_layout_hierarchyRebind(tree, hierarchy);\r\n  };\r\n  function d3_layout_treeSeparation(a, b) {\r\n    return a.parent == b.parent ? 1 : 2;\r\n  }\r\n  function d3_layout_treeLeft(v) {\r\n    var children = v.children;\r\n    return children.length ? children[0] : v.t;\r\n  }\r\n  function d3_layout_treeRight(v) {\r\n    var children = v.children, n;\r\n    return (n = children.length) ? children[n - 1] : v.t;\r\n  }\r\n  function d3_layout_treeMove(wm, wp, shift) {\r\n    var change = shift / (wp.i - wm.i);\r\n    wp.c -= change;\r\n    wp.s += shift;\r\n    wm.c += change;\r\n    wp.z += shift;\r\n    wp.m += shift;\r\n  }\r\n  function d3_layout_treeShift(v) {\r\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\r\n    while (--i >= 0) {\r\n      w = children[i];\r\n      w.z += shift;\r\n      w.m += shift;\r\n      shift += w.s + (change += w.c);\r\n    }\r\n  }\r\n  function d3_layout_treeAncestor(vim, v, ancestor) {\r\n    return vim.a.parent === v.parent ? vim.a : ancestor;\r\n  }\r\n  d3.layout.cluster = function() {\r\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\r\n    function cluster(d, i) {\r\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\r\n      d3_layout_hierarchyVisitAfter(root, function(node) {\r\n        var children = node.children;\r\n        if (children && children.length) {\r\n          node.x = d3_layout_clusterX(children);\r\n          node.y = d3_layout_clusterY(children);\r\n        } else {\r\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\r\n          node.y = 0;\r\n          previousNode = node;\r\n        }\r\n      });\r\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\r\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\r\n        node.x = (node.x - root.x) * size[0];\r\n        node.y = (root.y - node.y) * size[1];\r\n      } : function(node) {\r\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\r\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\r\n      });\r\n      return nodes;\r\n    }\r\n    cluster.separation = function(x) {\r\n      if (!arguments.length) return separation;\r\n      separation = x;\r\n      return cluster;\r\n    };\r\n    cluster.size = function(x) {\r\n      if (!arguments.length) return nodeSize ? null : size;\r\n      nodeSize = (size = x) == null;\r\n      return cluster;\r\n    };\r\n    cluster.nodeSize = function(x) {\r\n      if (!arguments.length) return nodeSize ? size : null;\r\n      nodeSize = (size = x) != null;\r\n      return cluster;\r\n    };\r\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\r\n  };\r\n  function d3_layout_clusterY(children) {\r\n    return 1 + d3.max(children, function(child) {\r\n      return child.y;\r\n    });\r\n  }\r\n  function d3_layout_clusterX(children) {\r\n    return children.reduce(function(x, child) {\r\n      return x + child.x;\r\n    }, 0) / children.length;\r\n  }\r\n  function d3_layout_clusterLeft(node) {\r\n    var children = node.children;\r\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\r\n  }\r\n  function d3_layout_clusterRight(node) {\r\n    var children = node.children, n;\r\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\r\n  }\r\n  d3.layout.treemap = function() {\r\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\r\n    function scale(children, k) {\r\n      var i = -1, n = children.length, child, area;\r\n      while (++i < n) {\r\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\r\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\r\n      }\r\n    }\r\n    function squarify(node) {\r\n      var children = node.children;\r\n      if (children && children.length) {\r\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\r\n        scale(remaining, rect.dx * rect.dy / node.value);\r\n        row.area = 0;\r\n        while ((n = remaining.length) > 0) {\r\n          row.push(child = remaining[n - 1]);\r\n          row.area += child.area;\r\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\r\n            remaining.pop();\r\n            best = score;\r\n          } else {\r\n            row.area -= row.pop().area;\r\n            position(row, u, rect, false);\r\n            u = Math.min(rect.dx, rect.dy);\r\n            row.length = row.area = 0;\r\n            best = Infinity;\r\n          }\r\n        }\r\n        if (row.length) {\r\n          position(row, u, rect, true);\r\n          row.length = row.area = 0;\r\n        }\r\n        children.forEach(squarify);\r\n      }\r\n    }\r\n    function stickify(node) {\r\n      var children = node.children;\r\n      if (children && children.length) {\r\n        var rect = pad(node), remaining = children.slice(), child, row = [];\r\n        scale(remaining, rect.dx * rect.dy / node.value);\r\n        row.area = 0;\r\n        while (child = remaining.pop()) {\r\n          row.push(child);\r\n          row.area += child.area;\r\n          if (child.z != null) {\r\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\r\n            row.length = row.area = 0;\r\n          }\r\n        }\r\n        children.forEach(stickify);\r\n      }\r\n    }\r\n    function worst(row, u) {\r\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\r\n      while (++i < n) {\r\n        if (!(r = row[i].area)) continue;\r\n        if (r < rmin) rmin = r;\r\n        if (r > rmax) rmax = r;\r\n      }\r\n      s *= s;\r\n      u *= u;\r\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\r\n    }\r\n    function position(row, u, rect, flush) {\r\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\r\n      if (u == rect.dx) {\r\n        if (flush || v > rect.dy) v = rect.dy;\r\n        while (++i < n) {\r\n          o = row[i];\r\n          o.x = x;\r\n          o.y = y;\r\n          o.dy = v;\r\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\r\n        }\r\n        o.z = true;\r\n        o.dx += rect.x + rect.dx - x;\r\n        rect.y += v;\r\n        rect.dy -= v;\r\n      } else {\r\n        if (flush || v > rect.dx) v = rect.dx;\r\n        while (++i < n) {\r\n          o = row[i];\r\n          o.x = x;\r\n          o.y = y;\r\n          o.dx = v;\r\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\r\n        }\r\n        o.z = false;\r\n        o.dy += rect.y + rect.dy - y;\r\n        rect.x += v;\r\n        rect.dx -= v;\r\n      }\r\n    }\r\n    function treemap(d) {\r\n      var nodes = stickies || hierarchy(d), root = nodes[0];\r\n      root.x = root.y = 0;\r\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\r\n      if (stickies) hierarchy.revalue(root);\r\n      scale([ root ], root.dx * root.dy / root.value);\r\n      (stickies ? stickify : squarify)(root);\r\n      if (sticky) stickies = nodes;\r\n      return nodes;\r\n    }\r\n    treemap.size = function(x) {\r\n      if (!arguments.length) return size;\r\n      size = x;\r\n      return treemap;\r\n    };\r\n    treemap.padding = function(x) {\r\n      if (!arguments.length) return padding;\r\n      function padFunction(node) {\r\n        var p = x.call(treemap, node, node.depth);\r\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\r\n      }\r\n      function padConstant(node) {\r\n        return d3_layout_treemapPad(node, x);\r\n      }\r\n      var type;\r\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \r\n      padConstant) : padConstant;\r\n      return treemap;\r\n    };\r\n    treemap.round = function(x) {\r\n      if (!arguments.length) return round != Number;\r\n      round = x ? Math.round : Number;\r\n      return treemap;\r\n    };\r\n    treemap.sticky = function(x) {\r\n      if (!arguments.length) return sticky;\r\n      sticky = x;\r\n      stickies = null;\r\n      return treemap;\r\n    };\r\n    treemap.ratio = function(x) {\r\n      if (!arguments.length) return ratio;\r\n      ratio = x;\r\n      return treemap;\r\n    };\r\n    treemap.mode = function(x) {\r\n      if (!arguments.length) return mode;\r\n      mode = x + \"\";\r\n      return treemap;\r\n    };\r\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\r\n  };\r\n  function d3_layout_treemapPadNull(node) {\r\n    return {\r\n      x: node.x,\r\n      y: node.y,\r\n      dx: node.dx,\r\n      dy: node.dy\r\n    };\r\n  }\r\n  function d3_layout_treemapPad(node, padding) {\r\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\r\n    if (dx < 0) {\r\n      x += dx / 2;\r\n      dx = 0;\r\n    }\r\n    if (dy < 0) {\r\n      y += dy / 2;\r\n      dy = 0;\r\n    }\r\n    return {\r\n      x: x,\r\n      y: y,\r\n      dx: dx,\r\n      dy: dy\r\n    };\r\n  }\r\n  d3.random = {\r\n    normal: function(µ, σ) {\r\n      var n = arguments.length;\r\n      if (n < 2) σ = 1;\r\n      if (n < 1) µ = 0;\r\n      return function() {\r\n        var x, y, r;\r\n        do {\r\n          x = Math.random() * 2 - 1;\r\n          y = Math.random() * 2 - 1;\r\n          r = x * x + y * y;\r\n        } while (!r || r > 1);\r\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\r\n      };\r\n    },\r\n    logNormal: function() {\r\n      var random = d3.random.normal.apply(d3, arguments);\r\n      return function() {\r\n        return Math.exp(random());\r\n      };\r\n    },\r\n    bates: function(m) {\r\n      var random = d3.random.irwinHall(m);\r\n      return function() {\r\n        return random() / m;\r\n      };\r\n    },\r\n    irwinHall: function(m) {\r\n      return function() {\r\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\r\n        return s;\r\n      };\r\n    }\r\n  };\r\n  d3.scale = {};\r\n  function d3_scaleExtent(domain) {\r\n    var start = domain[0], stop = domain[domain.length - 1];\r\n    return start < stop ? [ start, stop ] : [ stop, start ];\r\n  }\r\n  function d3_scaleRange(scale) {\r\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\r\n  }\r\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\r\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\r\n    return function(x) {\r\n      return i(u(x));\r\n    };\r\n  }\r\n  function d3_scale_nice(domain, nice) {\r\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\r\n    if (x1 < x0) {\r\n      dx = i0, i0 = i1, i1 = dx;\r\n      dx = x0, x0 = x1, x1 = dx;\r\n    }\r\n    domain[i0] = nice.floor(x0);\r\n    domain[i1] = nice.ceil(x1);\r\n    return domain;\r\n  }\r\n  function d3_scale_niceStep(step) {\r\n    return step ? {\r\n      floor: function(x) {\r\n        return Math.floor(x / step) * step;\r\n      },\r\n      ceil: function(x) {\r\n        return Math.ceil(x / step) * step;\r\n      }\r\n    } : d3_scale_niceIdentity;\r\n  }\r\n  var d3_scale_niceIdentity = {\r\n    floor: d3_identity,\r\n    ceil: d3_identity\r\n  };\r\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\r\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\r\n    if (domain[k] < domain[0]) {\r\n      domain = domain.slice().reverse();\r\n      range = range.slice().reverse();\r\n    }\r\n    while (++j <= k) {\r\n      u.push(uninterpolate(domain[j - 1], domain[j]));\r\n      i.push(interpolate(range[j - 1], range[j]));\r\n    }\r\n    return function(x) {\r\n      var j = d3.bisect(domain, x, 1, k) - 1;\r\n      return i[j](u[j](x));\r\n    };\r\n  }\r\n  d3.scale.linear = function() {\r\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\r\n  };\r\n  function d3_scale_linear(domain, range, interpolate, clamp) {\r\n    var output, input;\r\n    function rescale() {\r\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\r\n      output = linear(domain, range, uninterpolate, interpolate);\r\n      input = linear(range, domain, uninterpolate, d3_interpolate);\r\n      return scale;\r\n    }\r\n    function scale(x) {\r\n      return output(x);\r\n    }\r\n    scale.invert = function(y) {\r\n      return input(y);\r\n    };\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      domain = x.map(Number);\r\n      return rescale();\r\n    };\r\n    scale.range = function(x) {\r\n      if (!arguments.length) return range;\r\n      range = x;\r\n      return rescale();\r\n    };\r\n    scale.rangeRound = function(x) {\r\n      return scale.range(x).interpolate(d3_interpolateRound);\r\n    };\r\n    scale.clamp = function(x) {\r\n      if (!arguments.length) return clamp;\r\n      clamp = x;\r\n      return rescale();\r\n    };\r\n    scale.interpolate = function(x) {\r\n      if (!arguments.length) return interpolate;\r\n      interpolate = x;\r\n      return rescale();\r\n    };\r\n    scale.ticks = function(m) {\r\n      return d3_scale_linearTicks(domain, m);\r\n    };\r\n    scale.tickFormat = function(m, format) {\r\n      return d3_scale_linearTickFormat(domain, m, format);\r\n    };\r\n    scale.nice = function(m) {\r\n      d3_scale_linearNice(domain, m);\r\n      return rescale();\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_linear(domain, range, interpolate, clamp);\r\n    };\r\n    return rescale();\r\n  }\r\n  function d3_scale_linearRebind(scale, linear) {\r\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\r\n  }\r\n  function d3_scale_linearNice(domain, m) {\r\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\r\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\r\n    return domain;\r\n  }\r\n  function d3_scale_linearTickRange(domain, m) {\r\n    if (m == null) m = 10;\r\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\r\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\r\n    extent[0] = Math.ceil(extent[0] / step) * step;\r\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\r\n    extent[2] = step;\r\n    return extent;\r\n  }\r\n  function d3_scale_linearTicks(domain, m) {\r\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\r\n  }\r\n  function d3_scale_linearTickFormat(domain, m, format) {\r\n    var range = d3_scale_linearTickRange(domain, m);\r\n    if (format) {\r\n      var match = d3_format_re.exec(format);\r\n      match.shift();\r\n      if (match[8] === \"s\") {\r\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\r\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\r\n        match[8] = \"f\";\r\n        format = d3.format(match.join(\"\"));\r\n        return function(d) {\r\n          return format(prefix.scale(d)) + prefix.symbol;\r\n        };\r\n      }\r\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\r\n      format = match.join(\"\");\r\n    } else {\r\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\r\n    }\r\n    return d3.format(format);\r\n  }\r\n  var d3_scale_linearFormatSignificant = {\r\n    s: 1,\r\n    g: 1,\r\n    p: 1,\r\n    r: 1,\r\n    e: 1\r\n  };\r\n  function d3_scale_linearPrecision(value) {\r\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\r\n  }\r\n  function d3_scale_linearFormatPrecision(type, range) {\r\n    var p = d3_scale_linearPrecision(range[2]);\r\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\r\n  }\r\n  d3.scale.log = function() {\r\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\r\n  };\r\n  function d3_scale_log(linear, base, positive, domain) {\r\n    function log(x) {\r\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\r\n    }\r\n    function pow(x) {\r\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\r\n    }\r\n    function scale(x) {\r\n      return linear(log(x));\r\n    }\r\n    scale.invert = function(x) {\r\n      return pow(linear.invert(x));\r\n    };\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      positive = x[0] >= 0;\r\n      linear.domain((domain = x.map(Number)).map(log));\r\n      return scale;\r\n    };\r\n    scale.base = function(_) {\r\n      if (!arguments.length) return base;\r\n      base = +_;\r\n      linear.domain(domain.map(log));\r\n      return scale;\r\n    };\r\n    scale.nice = function() {\r\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\r\n      linear.domain(niced);\r\n      domain = niced.map(pow);\r\n      return scale;\r\n    };\r\n    scale.ticks = function() {\r\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\r\n      if (isFinite(j - i)) {\r\n        if (positive) {\r\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\r\n          ticks.push(pow(i));\r\n        } else {\r\n          ticks.push(pow(i));\r\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\r\n        }\r\n        for (i = 0; ticks[i] < u; i++) {}\r\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\r\n        ticks = ticks.slice(i, j);\r\n      }\r\n      return ticks;\r\n    };\r\n    scale.tickFormat = function(n, format) {\r\n      if (!arguments.length) return d3_scale_logFormat;\r\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\r\n      var k = Math.max(1, base * n / scale.ticks().length);\r\n      return function(d) {\r\n        var i = d / pow(Math.round(log(d)));\r\n        if (i * base < base - .5) i *= base;\r\n        return i <= k ? format(d) : \"\";\r\n      };\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_log(linear.copy(), base, positive, domain);\r\n    };\r\n    return d3_scale_linearRebind(scale, linear);\r\n  }\r\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\r\n    floor: function(x) {\r\n      return -Math.ceil(-x);\r\n    },\r\n    ceil: function(x) {\r\n      return -Math.floor(-x);\r\n    }\r\n  };\r\n  d3.scale.pow = function() {\r\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\r\n  };\r\n  function d3_scale_pow(linear, exponent, domain) {\r\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\r\n    function scale(x) {\r\n      return linear(powp(x));\r\n    }\r\n    scale.invert = function(x) {\r\n      return powb(linear.invert(x));\r\n    };\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      linear.domain((domain = x.map(Number)).map(powp));\r\n      return scale;\r\n    };\r\n    scale.ticks = function(m) {\r\n      return d3_scale_linearTicks(domain, m);\r\n    };\r\n    scale.tickFormat = function(m, format) {\r\n      return d3_scale_linearTickFormat(domain, m, format);\r\n    };\r\n    scale.nice = function(m) {\r\n      return scale.domain(d3_scale_linearNice(domain, m));\r\n    };\r\n    scale.exponent = function(x) {\r\n      if (!arguments.length) return exponent;\r\n      powp = d3_scale_powPow(exponent = x);\r\n      powb = d3_scale_powPow(1 / exponent);\r\n      linear.domain(domain.map(powp));\r\n      return scale;\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_pow(linear.copy(), exponent, domain);\r\n    };\r\n    return d3_scale_linearRebind(scale, linear);\r\n  }\r\n  function d3_scale_powPow(e) {\r\n    return function(x) {\r\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\r\n    };\r\n  }\r\n  d3.scale.sqrt = function() {\r\n    return d3.scale.pow().exponent(.5);\r\n  };\r\n  d3.scale.ordinal = function() {\r\n    return d3_scale_ordinal([], {\r\n      t: \"range\",\r\n      a: [ [] ]\r\n    });\r\n  };\r\n  function d3_scale_ordinal(domain, ranger) {\r\n    var index, range, rangeBand;\r\n    function scale(x) {\r\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\r\n    }\r\n    function steps(start, step) {\r\n      return d3.range(domain.length).map(function(i) {\r\n        return start + step * i;\r\n      });\r\n    }\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      domain = [];\r\n      index = new d3_Map();\r\n      var i = -1, n = x.length, xi;\r\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\r\n      return scale[ranger.t].apply(scale, ranger.a);\r\n    };\r\n    scale.range = function(x) {\r\n      if (!arguments.length) return range;\r\n      range = x;\r\n      rangeBand = 0;\r\n      ranger = {\r\n        t: \"range\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangePoints = function(x, padding) {\r\n      if (arguments.length < 2) padding = 0;\r\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \r\n      0) : (stop - start) / (domain.length - 1 + padding);\r\n      range = steps(start + step * padding / 2, step);\r\n      rangeBand = 0;\r\n      ranger = {\r\n        t: \"rangePoints\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangeRoundPoints = function(x, padding) {\r\n      if (arguments.length < 2) padding = 0;\r\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \r\n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\r\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\r\n      rangeBand = 0;\r\n      ranger = {\r\n        t: \"rangeRoundPoints\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangeBands = function(x, padding, outerPadding) {\r\n      if (arguments.length < 2) padding = 0;\r\n      if (arguments.length < 3) outerPadding = padding;\r\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\r\n      range = steps(start + step * outerPadding, step);\r\n      if (reverse) range.reverse();\r\n      rangeBand = step * (1 - padding);\r\n      ranger = {\r\n        t: \"rangeBands\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\r\n      if (arguments.length < 2) padding = 0;\r\n      if (arguments.length < 3) outerPadding = padding;\r\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\r\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\r\n      if (reverse) range.reverse();\r\n      rangeBand = Math.round(step * (1 - padding));\r\n      ranger = {\r\n        t: \"rangeRoundBands\",\r\n        a: arguments\r\n      };\r\n      return scale;\r\n    };\r\n    scale.rangeBand = function() {\r\n      return rangeBand;\r\n    };\r\n    scale.rangeExtent = function() {\r\n      return d3_scaleExtent(ranger.a[0]);\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_ordinal(domain, ranger);\r\n    };\r\n    return scale.domain(domain);\r\n  }\r\n  d3.scale.category10 = function() {\r\n    return d3.scale.ordinal().range(d3_category10);\r\n  };\r\n  d3.scale.category20 = function() {\r\n    return d3.scale.ordinal().range(d3_category20);\r\n  };\r\n  d3.scale.category20b = function() {\r\n    return d3.scale.ordinal().range(d3_category20b);\r\n  };\r\n  d3.scale.category20c = function() {\r\n    return d3.scale.ordinal().range(d3_category20c);\r\n  };\r\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\r\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\r\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\r\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\r\n  d3.scale.quantile = function() {\r\n    return d3_scale_quantile([], []);\r\n  };\r\n  function d3_scale_quantile(domain, range) {\r\n    var thresholds;\r\n    function rescale() {\r\n      var k = 0, q = range.length;\r\n      thresholds = [];\r\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\r\n      return scale;\r\n    }\r\n    function scale(x) {\r\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\r\n    }\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return domain;\r\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\r\n      return rescale();\r\n    };\r\n    scale.range = function(x) {\r\n      if (!arguments.length) return range;\r\n      range = x;\r\n      return rescale();\r\n    };\r\n    scale.quantiles = function() {\r\n      return thresholds;\r\n    };\r\n    scale.invertExtent = function(y) {\r\n      y = range.indexOf(y);\r\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_quantile(domain, range);\r\n    };\r\n    return rescale();\r\n  }\r\n  d3.scale.quantize = function() {\r\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\r\n  };\r\n  function d3_scale_quantize(x0, x1, range) {\r\n    var kx, i;\r\n    function scale(x) {\r\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\r\n    }\r\n    function rescale() {\r\n      kx = range.length / (x1 - x0);\r\n      i = range.length - 1;\r\n      return scale;\r\n    }\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return [ x0, x1 ];\r\n      x0 = +x[0];\r\n      x1 = +x[x.length - 1];\r\n      return rescale();\r\n    };\r\n    scale.range = function(x) {\r\n      if (!arguments.length) return range;\r\n      range = x;\r\n      return rescale();\r\n    };\r\n    scale.invertExtent = function(y) {\r\n      y = range.indexOf(y);\r\n      y = y < 0 ? NaN : y / kx + x0;\r\n      return [ y, y + 1 / kx ];\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_quantize(x0, x1, range);\r\n    };\r\n    return rescale();\r\n  }\r\n  d3.scale.threshold = function() {\r\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\r\n  };\r\n  function d3_scale_threshold(domain, range) {\r\n    function scale(x) {\r\n      if (x <= x) return range[d3.bisect(domain, x)];\r\n    }\r\n    scale.domain = function(_) {\r\n      if (!arguments.length) return domain;\r\n      domain = _;\r\n      return scale;\r\n    };\r\n    scale.range = function(_) {\r\n      if (!arguments.length) return range;\r\n      range = _;\r\n      return scale;\r\n    };\r\n    scale.invertExtent = function(y) {\r\n      y = range.indexOf(y);\r\n      return [ domain[y - 1], domain[y] ];\r\n    };\r\n    scale.copy = function() {\r\n      return d3_scale_threshold(domain, range);\r\n    };\r\n    return scale;\r\n  }\r\n  d3.scale.identity = function() {\r\n    return d3_scale_identity([ 0, 1 ]);\r\n  };\r\n  function d3_scale_identity(domain) {\r\n    function identity(x) {\r\n      return +x;\r\n    }\r\n    identity.invert = identity;\r\n    identity.domain = identity.range = function(x) {\r\n      if (!arguments.length) return domain;\r\n      domain = x.map(identity);\r\n      return identity;\r\n    };\r\n    identity.ticks = function(m) {\r\n      return d3_scale_linearTicks(domain, m);\r\n    };\r\n    identity.tickFormat = function(m, format) {\r\n      return d3_scale_linearTickFormat(domain, m, format);\r\n    };\r\n    identity.copy = function() {\r\n      return d3_scale_identity(domain);\r\n    };\r\n    return identity;\r\n  }\r\n  d3.svg = {};\r\n  function d3_zero() {\r\n    return 0;\r\n  }\r\n  d3.svg.arc = function() {\r\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\r\n    function arc() {\r\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\r\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\r\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\r\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\r\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\r\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\r\n        if (!cw) p1 *= -1;\r\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\r\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\r\n      }\r\n      if (r1) {\r\n        x0 = r1 * Math.cos(a0 + p1);\r\n        y0 = r1 * Math.sin(a0 + p1);\r\n        x1 = r1 * Math.cos(a1 - p1);\r\n        y1 = r1 * Math.sin(a1 - p1);\r\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\r\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\r\n          var h1 = (a0 + a1) / 2;\r\n          x0 = r1 * Math.cos(h1);\r\n          y0 = r1 * Math.sin(h1);\r\n          x1 = y1 = null;\r\n        }\r\n      } else {\r\n        x0 = y0 = 0;\r\n      }\r\n      if (r0) {\r\n        x2 = r0 * Math.cos(a1 - p0);\r\n        y2 = r0 * Math.sin(a1 - p0);\r\n        x3 = r0 * Math.cos(a0 + p0);\r\n        y3 = r0 * Math.sin(a0 + p0);\r\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\r\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\r\n          var h0 = (a0 + a1) / 2;\r\n          x2 = r0 * Math.cos(h0);\r\n          y2 = r0 * Math.sin(h0);\r\n          x3 = y3 = null;\r\n        }\r\n      } else {\r\n        x2 = y2 = 0;\r\n      }\r\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\r\n        cr = r0 < r1 ^ cw ? 0 : 1;\r\n        var rc1 = rc, rc0 = rc;\r\n        if (da < π) {\r\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\r\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\r\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\r\n        }\r\n        if (x1 != null) {\r\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\r\n          if (rc === rc1) {\r\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\r\n          } else {\r\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\r\n          }\r\n        } else {\r\n          path.push(\"M\", x0, \",\", y0);\r\n        }\r\n        if (x3 != null) {\r\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\r\n          if (rc === rc0) {\r\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\r\n          } else {\r\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\r\n          }\r\n        } else {\r\n          path.push(\"L\", x2, \",\", y2);\r\n        }\r\n      } else {\r\n        path.push(\"M\", x0, \",\", y0);\r\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\r\n        path.push(\"L\", x2, \",\", y2);\r\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\r\n      }\r\n      path.push(\"Z\");\r\n      return path.join(\"\");\r\n    }\r\n    function circleSegment(r1, cw) {\r\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\r\n    }\r\n    arc.innerRadius = function(v) {\r\n      if (!arguments.length) return innerRadius;\r\n      innerRadius = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.outerRadius = function(v) {\r\n      if (!arguments.length) return outerRadius;\r\n      outerRadius = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.cornerRadius = function(v) {\r\n      if (!arguments.length) return cornerRadius;\r\n      cornerRadius = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.padRadius = function(v) {\r\n      if (!arguments.length) return padRadius;\r\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.startAngle = function(v) {\r\n      if (!arguments.length) return startAngle;\r\n      startAngle = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.endAngle = function(v) {\r\n      if (!arguments.length) return endAngle;\r\n      endAngle = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.padAngle = function(v) {\r\n      if (!arguments.length) return padAngle;\r\n      padAngle = d3_functor(v);\r\n      return arc;\r\n    };\r\n    arc.centroid = function() {\r\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\r\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\r\n    };\r\n    return arc;\r\n  };\r\n  var d3_svg_arcAuto = \"auto\";\r\n  function d3_svg_arcInnerRadius(d) {\r\n    return d.innerRadius;\r\n  }\r\n  function d3_svg_arcOuterRadius(d) {\r\n    return d.outerRadius;\r\n  }\r\n  function d3_svg_arcStartAngle(d) {\r\n    return d.startAngle;\r\n  }\r\n  function d3_svg_arcEndAngle(d) {\r\n    return d.endAngle;\r\n  }\r\n  function d3_svg_arcPadAngle(d) {\r\n    return d && d.padAngle;\r\n  }\r\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\r\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\r\n  }\r\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\r\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\r\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\r\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\r\n  }\r\n  function d3_svg_line(projection) {\r\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\r\n    function line(data) {\r\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\r\n      function segment() {\r\n        segments.push(\"M\", interpolate(projection(points), tension));\r\n      }\r\n      while (++i < n) {\r\n        if (defined.call(this, d = data[i], i)) {\r\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\r\n        } else if (points.length) {\r\n          segment();\r\n          points = [];\r\n        }\r\n      }\r\n      if (points.length) segment();\r\n      return segments.length ? segments.join(\"\") : null;\r\n    }\r\n    line.x = function(_) {\r\n      if (!arguments.length) return x;\r\n      x = _;\r\n      return line;\r\n    };\r\n    line.y = function(_) {\r\n      if (!arguments.length) return y;\r\n      y = _;\r\n      return line;\r\n    };\r\n    line.defined = function(_) {\r\n      if (!arguments.length) return defined;\r\n      defined = _;\r\n      return line;\r\n    };\r\n    line.interpolate = function(_) {\r\n      if (!arguments.length) return interpolateKey;\r\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\r\n      return line;\r\n    };\r\n    line.tension = function(_) {\r\n      if (!arguments.length) return tension;\r\n      tension = _;\r\n      return line;\r\n    };\r\n    return line;\r\n  }\r\n  d3.svg.line = function() {\r\n    return d3_svg_line(d3_identity);\r\n  };\r\n  var d3_svg_lineInterpolators = d3.map({\r\n    linear: d3_svg_lineLinear,\r\n    \"linear-closed\": d3_svg_lineLinearClosed,\r\n    step: d3_svg_lineStep,\r\n    \"step-before\": d3_svg_lineStepBefore,\r\n    \"step-after\": d3_svg_lineStepAfter,\r\n    basis: d3_svg_lineBasis,\r\n    \"basis-open\": d3_svg_lineBasisOpen,\r\n    \"basis-closed\": d3_svg_lineBasisClosed,\r\n    bundle: d3_svg_lineBundle,\r\n    cardinal: d3_svg_lineCardinal,\r\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\r\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\r\n    monotone: d3_svg_lineMonotone\r\n  });\r\n  d3_svg_lineInterpolators.forEach(function(key, value) {\r\n    value.key = key;\r\n    value.closed = /-closed$/.test(key);\r\n  });\r\n  function d3_svg_lineLinear(points) {\r\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\r\n  }\r\n  function d3_svg_lineLinearClosed(points) {\r\n    return points.join(\"L\") + \"Z\";\r\n  }\r\n  function d3_svg_lineStep(points) {\r\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\r\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\r\n    if (n > 1) path.push(\"H\", p[0]);\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineStepBefore(points) {\r\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\r\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineStepAfter(points) {\r\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\r\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineCardinalOpen(points, tension) {\r\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\r\n  }\r\n  function d3_svg_lineCardinalClosed(points, tension) {\r\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \r\n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\r\n  }\r\n  function d3_svg_lineCardinal(points, tension) {\r\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\r\n  }\r\n  function d3_svg_lineHermite(points, tangents) {\r\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\r\n      return d3_svg_lineLinear(points);\r\n    }\r\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\r\n    if (quad) {\r\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\r\n      p0 = points[1];\r\n      pi = 2;\r\n    }\r\n    if (tangents.length > 1) {\r\n      t = tangents[1];\r\n      p = points[pi];\r\n      pi++;\r\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\r\n      for (var i = 2; i < tangents.length; i++, pi++) {\r\n        p = points[pi];\r\n        t = tangents[i];\r\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\r\n      }\r\n    }\r\n    if (quad) {\r\n      var lp = points[pi];\r\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\r\n    }\r\n    return path;\r\n  }\r\n  function d3_svg_lineCardinalTangents(points, tension) {\r\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\r\n    while (++i < n) {\r\n      p0 = p1;\r\n      p1 = p2;\r\n      p2 = points[i];\r\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\r\n    }\r\n    return tangents;\r\n  }\r\n  function d3_svg_lineBasis(points) {\r\n    if (points.length < 3) return d3_svg_lineLinear(points);\r\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\r\n    points.push(points[n - 1]);\r\n    while (++i <= n) {\r\n      pi = points[i];\r\n      px.shift();\r\n      px.push(pi[0]);\r\n      py.shift();\r\n      py.push(pi[1]);\r\n      d3_svg_lineBasisBezier(path, px, py);\r\n    }\r\n    points.pop();\r\n    path.push(\"L\", pi);\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineBasisOpen(points) {\r\n    if (points.length < 4) return d3_svg_lineLinear(points);\r\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\r\n    while (++i < 3) {\r\n      pi = points[i];\r\n      px.push(pi[0]);\r\n      py.push(pi[1]);\r\n    }\r\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\r\n    --i;\r\n    while (++i < n) {\r\n      pi = points[i];\r\n      px.shift();\r\n      px.push(pi[0]);\r\n      py.shift();\r\n      py.push(pi[1]);\r\n      d3_svg_lineBasisBezier(path, px, py);\r\n    }\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineBasisClosed(points) {\r\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\r\n    while (++i < 4) {\r\n      pi = points[i % n];\r\n      px.push(pi[0]);\r\n      py.push(pi[1]);\r\n    }\r\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\r\n    --i;\r\n    while (++i < m) {\r\n      pi = points[i % n];\r\n      px.shift();\r\n      px.push(pi[0]);\r\n      py.shift();\r\n      py.push(pi[1]);\r\n      d3_svg_lineBasisBezier(path, px, py);\r\n    }\r\n    return path.join(\"\");\r\n  }\r\n  function d3_svg_lineBundle(points, tension) {\r\n    var n = points.length - 1;\r\n    if (n) {\r\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\r\n      while (++i <= n) {\r\n        p = points[i];\r\n        t = i / n;\r\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\r\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\r\n      }\r\n    }\r\n    return d3_svg_lineBasis(points);\r\n  }\r\n  function d3_svg_lineDot4(a, b) {\r\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n  }\r\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\r\n  function d3_svg_lineBasisBezier(path, x, y) {\r\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\r\n  }\r\n  function d3_svg_lineSlope(p0, p1) {\r\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\r\n  }\r\n  function d3_svg_lineFiniteDifferences(points) {\r\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\r\n    while (++i < j) {\r\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\r\n    }\r\n    m[i] = d;\r\n    return m;\r\n  }\r\n  function d3_svg_lineMonotoneTangents(points) {\r\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\r\n    while (++i < j) {\r\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\r\n      if (abs(d) < ε) {\r\n        m[i] = m[i + 1] = 0;\r\n      } else {\r\n        a = m[i] / d;\r\n        b = m[i + 1] / d;\r\n        s = a * a + b * b;\r\n        if (s > 9) {\r\n          s = d * 3 / Math.sqrt(s);\r\n          m[i] = s * a;\r\n          m[i + 1] = s * b;\r\n        }\r\n      }\r\n    }\r\n    i = -1;\r\n    while (++i <= j) {\r\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\r\n      tangents.push([ s || 0, m[i] * s || 0 ]);\r\n    }\r\n    return tangents;\r\n  }\r\n  function d3_svg_lineMonotone(points) {\r\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\r\n  }\r\n  d3.svg.line.radial = function() {\r\n    var line = d3_svg_line(d3_svg_lineRadial);\r\n    line.radius = line.x, delete line.x;\r\n    line.angle = line.y, delete line.y;\r\n    return line;\r\n  };\r\n  function d3_svg_lineRadial(points) {\r\n    var point, i = -1, n = points.length, r, a;\r\n    while (++i < n) {\r\n      point = points[i];\r\n      r = point[0];\r\n      a = point[1] - halfπ;\r\n      point[0] = r * Math.cos(a);\r\n      point[1] = r * Math.sin(a);\r\n    }\r\n    return points;\r\n  }\r\n  function d3_svg_area(projection) {\r\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\r\n    function area(data) {\r\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\r\n        return x;\r\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\r\n        return y;\r\n      } : d3_functor(y1), x, y;\r\n      function segment() {\r\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\r\n      }\r\n      while (++i < n) {\r\n        if (defined.call(this, d = data[i], i)) {\r\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\r\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\r\n        } else if (points0.length) {\r\n          segment();\r\n          points0 = [];\r\n          points1 = [];\r\n        }\r\n      }\r\n      if (points0.length) segment();\r\n      return segments.length ? segments.join(\"\") : null;\r\n    }\r\n    area.x = function(_) {\r\n      if (!arguments.length) return x1;\r\n      x0 = x1 = _;\r\n      return area;\r\n    };\r\n    area.x0 = function(_) {\r\n      if (!arguments.length) return x0;\r\n      x0 = _;\r\n      return area;\r\n    };\r\n    area.x1 = function(_) {\r\n      if (!arguments.length) return x1;\r\n      x1 = _;\r\n      return area;\r\n    };\r\n    area.y = function(_) {\r\n      if (!arguments.length) return y1;\r\n      y0 = y1 = _;\r\n      return area;\r\n    };\r\n    area.y0 = function(_) {\r\n      if (!arguments.length) return y0;\r\n      y0 = _;\r\n      return area;\r\n    };\r\n    area.y1 = function(_) {\r\n      if (!arguments.length) return y1;\r\n      y1 = _;\r\n      return area;\r\n    };\r\n    area.defined = function(_) {\r\n      if (!arguments.length) return defined;\r\n      defined = _;\r\n      return area;\r\n    };\r\n    area.interpolate = function(_) {\r\n      if (!arguments.length) return interpolateKey;\r\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\r\n      interpolateReverse = interpolate.reverse || interpolate;\r\n      L = interpolate.closed ? \"M\" : \"L\";\r\n      return area;\r\n    };\r\n    area.tension = function(_) {\r\n      if (!arguments.length) return tension;\r\n      tension = _;\r\n      return area;\r\n    };\r\n    return area;\r\n  }\r\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\r\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\r\n  d3.svg.area = function() {\r\n    return d3_svg_area(d3_identity);\r\n  };\r\n  d3.svg.area.radial = function() {\r\n    var area = d3_svg_area(d3_svg_lineRadial);\r\n    area.radius = area.x, delete area.x;\r\n    area.innerRadius = area.x0, delete area.x0;\r\n    area.outerRadius = area.x1, delete area.x1;\r\n    area.angle = area.y, delete area.y;\r\n    area.startAngle = area.y0, delete area.y0;\r\n    area.endAngle = area.y1, delete area.y1;\r\n    return area;\r\n  };\r\n  d3.svg.chord = function() {\r\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\r\n    function chord(d, i) {\r\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\r\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\r\n    }\r\n    function subgroup(self, f, d, i) {\r\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\r\n      return {\r\n        r: r,\r\n        a0: a0,\r\n        a1: a1,\r\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\r\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\r\n      };\r\n    }\r\n    function equals(a, b) {\r\n      return a.a0 == b.a0 && a.a1 == b.a1;\r\n    }\r\n    function arc(r, p, a) {\r\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\r\n    }\r\n    function curve(r0, p0, r1, p1) {\r\n      return \"Q 0,0 \" + p1;\r\n    }\r\n    chord.radius = function(v) {\r\n      if (!arguments.length) return radius;\r\n      radius = d3_functor(v);\r\n      return chord;\r\n    };\r\n    chord.source = function(v) {\r\n      if (!arguments.length) return source;\r\n      source = d3_functor(v);\r\n      return chord;\r\n    };\r\n    chord.target = function(v) {\r\n      if (!arguments.length) return target;\r\n      target = d3_functor(v);\r\n      return chord;\r\n    };\r\n    chord.startAngle = function(v) {\r\n      if (!arguments.length) return startAngle;\r\n      startAngle = d3_functor(v);\r\n      return chord;\r\n    };\r\n    chord.endAngle = function(v) {\r\n      if (!arguments.length) return endAngle;\r\n      endAngle = d3_functor(v);\r\n      return chord;\r\n    };\r\n    return chord;\r\n  };\r\n  function d3_svg_chordRadius(d) {\r\n    return d.radius;\r\n  }\r\n  d3.svg.diagonal = function() {\r\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\r\n    function diagonal(d, i) {\r\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\r\n        x: p0.x,\r\n        y: m\r\n      }, {\r\n        x: p3.x,\r\n        y: m\r\n      }, p3 ];\r\n      p = p.map(projection);\r\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\r\n    }\r\n    diagonal.source = function(x) {\r\n      if (!arguments.length) return source;\r\n      source = d3_functor(x);\r\n      return diagonal;\r\n    };\r\n    diagonal.target = function(x) {\r\n      if (!arguments.length) return target;\r\n      target = d3_functor(x);\r\n      return diagonal;\r\n    };\r\n    diagonal.projection = function(x) {\r\n      if (!arguments.length) return projection;\r\n      projection = x;\r\n      return diagonal;\r\n    };\r\n    return diagonal;\r\n  };\r\n  function d3_svg_diagonalProjection(d) {\r\n    return [ d.x, d.y ];\r\n  }\r\n  d3.svg.diagonal.radial = function() {\r\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\r\n    diagonal.projection = function(x) {\r\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\r\n    };\r\n    return diagonal;\r\n  };\r\n  function d3_svg_diagonalRadialProjection(projection) {\r\n    return function() {\r\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\r\n      return [ r * Math.cos(a), r * Math.sin(a) ];\r\n    };\r\n  }\r\n  d3.svg.symbol = function() {\r\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\r\n    function symbol(d, i) {\r\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\r\n    }\r\n    symbol.type = function(x) {\r\n      if (!arguments.length) return type;\r\n      type = d3_functor(x);\r\n      return symbol;\r\n    };\r\n    symbol.size = function(x) {\r\n      if (!arguments.length) return size;\r\n      size = d3_functor(x);\r\n      return symbol;\r\n    };\r\n    return symbol;\r\n  };\r\n  function d3_svg_symbolSize() {\r\n    return 64;\r\n  }\r\n  function d3_svg_symbolType() {\r\n    return \"circle\";\r\n  }\r\n  function d3_svg_symbolCircle(size) {\r\n    var r = Math.sqrt(size / π);\r\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\r\n  }\r\n  var d3_svg_symbols = d3.map({\r\n    circle: d3_svg_symbolCircle,\r\n    cross: function(size) {\r\n      var r = Math.sqrt(size / 5) / 2;\r\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\r\n    },\r\n    diamond: function(size) {\r\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\r\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\r\n    },\r\n    square: function(size) {\r\n      var r = Math.sqrt(size) / 2;\r\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\r\n    },\r\n    \"triangle-down\": function(size) {\r\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\r\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\r\n    },\r\n    \"triangle-up\": function(size) {\r\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\r\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\r\n    }\r\n  });\r\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\r\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\r\n  d3_selectionPrototype.transition = function(name) {\r\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\r\n      time: Date.now(),\r\n      ease: d3_ease_cubicInOut,\r\n      delay: 0,\r\n      duration: 250\r\n    };\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      subgroups.push(subgroup = []);\r\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\r\n        subgroup.push(node);\r\n      }\r\n    }\r\n    return d3_transition(subgroups, ns, id);\r\n  };\r\n  d3_selectionPrototype.interrupt = function(name) {\r\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\r\n  };\r\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\r\n  function d3_selection_interruptNS(ns) {\r\n    return function() {\r\n      var lock, activeId, active;\r\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\r\n        active.timer.c = null;\r\n        active.timer.t = NaN;\r\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\r\n        lock.active += .5;\r\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\r\n      }\r\n    };\r\n  }\r\n  function d3_transition(groups, ns, id) {\r\n    d3_subclass(groups, d3_transitionPrototype);\r\n    groups.namespace = ns;\r\n    groups.id = id;\r\n    return groups;\r\n  }\r\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\r\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\r\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\r\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\r\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\r\n  d3.transition = function(selection, name) {\r\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\r\n  };\r\n  d3.transition.prototype = d3_transitionPrototype;\r\n  d3_transitionPrototype.select = function(selector) {\r\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\r\n    selector = d3_selection_selector(selector);\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      subgroups.push(subgroup = []);\r\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\r\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\r\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\r\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\r\n          subgroup.push(subnode);\r\n        } else {\r\n          subgroup.push(null);\r\n        }\r\n      }\r\n    }\r\n    return d3_transition(subgroups, ns, id);\r\n  };\r\n  d3_transitionPrototype.selectAll = function(selector) {\r\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\r\n    selector = d3_selection_selectorAll(selector);\r\n    for (var j = -1, m = this.length; ++j < m; ) {\r\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\r\n        if (node = group[i]) {\r\n          transition = node[ns][id];\r\n          subnodes = selector.call(node, node.__data__, i, j);\r\n          subgroups.push(subgroup = []);\r\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\r\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\r\n            subgroup.push(subnode);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return d3_transition(subgroups, ns, id);\r\n  };\r\n  d3_transitionPrototype.filter = function(filter) {\r\n    var subgroups = [], subgroup, group, node;\r\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\r\n    for (var j = 0, m = this.length; j < m; j++) {\r\n      subgroups.push(subgroup = []);\r\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\r\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\r\n          subgroup.push(node);\r\n        }\r\n      }\r\n    }\r\n    return d3_transition(subgroups, this.namespace, this.id);\r\n  };\r\n  d3_transitionPrototype.tween = function(name, tween) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\r\n    return d3_selection_each(this, tween == null ? function(node) {\r\n      node[ns][id].tween.remove(name);\r\n    } : function(node) {\r\n      node[ns][id].tween.set(name, tween);\r\n    });\r\n  };\r\n  function d3_transition_tween(groups, name, value, tween) {\r\n    var id = groups.id, ns = groups.namespace;\r\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\r\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\r\n    } : (value = tween(value), function(node) {\r\n      node[ns][id].tween.set(name, value);\r\n    }));\r\n  }\r\n  d3_transitionPrototype.attr = function(nameNS, value) {\r\n    if (arguments.length < 2) {\r\n      for (value in nameNS) this.attr(value, nameNS[value]);\r\n      return this;\r\n    }\r\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\r\n    function attrNull() {\r\n      this.removeAttribute(name);\r\n    }\r\n    function attrNullNS() {\r\n      this.removeAttributeNS(name.space, name.local);\r\n    }\r\n    function attrTween(b) {\r\n      return b == null ? attrNull : (b += \"\", function() {\r\n        var a = this.getAttribute(name), i;\r\n        return a !== b && (i = interpolate(a, b), function(t) {\r\n          this.setAttribute(name, i(t));\r\n        });\r\n      });\r\n    }\r\n    function attrTweenNS(b) {\r\n      return b == null ? attrNullNS : (b += \"\", function() {\r\n        var a = this.getAttributeNS(name.space, name.local), i;\r\n        return a !== b && (i = interpolate(a, b), function(t) {\r\n          this.setAttributeNS(name.space, name.local, i(t));\r\n        });\r\n      });\r\n    }\r\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\r\n  };\r\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\r\n    var name = d3.ns.qualify(nameNS);\r\n    function attrTween(d, i) {\r\n      var f = tween.call(this, d, i, this.getAttribute(name));\r\n      return f && function(t) {\r\n        this.setAttribute(name, f(t));\r\n      };\r\n    }\r\n    function attrTweenNS(d, i) {\r\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\r\n      return f && function(t) {\r\n        this.setAttributeNS(name.space, name.local, f(t));\r\n      };\r\n    }\r\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\r\n  };\r\n  d3_transitionPrototype.style = function(name, value, priority) {\r\n    var n = arguments.length;\r\n    if (n < 3) {\r\n      if (typeof name !== \"string\") {\r\n        if (n < 2) value = \"\";\r\n        for (priority in name) this.style(priority, name[priority], value);\r\n        return this;\r\n      }\r\n      priority = \"\";\r\n    }\r\n    function styleNull() {\r\n      this.style.removeProperty(name);\r\n    }\r\n    function styleString(b) {\r\n      return b == null ? styleNull : (b += \"\", function() {\r\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\r\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\r\n          this.style.setProperty(name, i(t), priority);\r\n        });\r\n      });\r\n    }\r\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\r\n  };\r\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\r\n    if (arguments.length < 3) priority = \"\";\r\n    function styleTween(d, i) {\r\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\r\n      return f && function(t) {\r\n        this.style.setProperty(name, f(t), priority);\r\n      };\r\n    }\r\n    return this.tween(\"style.\" + name, styleTween);\r\n  };\r\n  d3_transitionPrototype.text = function(value) {\r\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\r\n  };\r\n  function d3_transition_text(b) {\r\n    if (b == null) b = \"\";\r\n    return function() {\r\n      this.textContent = b;\r\n    };\r\n  }\r\n  d3_transitionPrototype.remove = function() {\r\n    var ns = this.namespace;\r\n    return this.each(\"end.transition\", function() {\r\n      var p;\r\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\r\n    });\r\n  };\r\n  d3_transitionPrototype.ease = function(value) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 1) return this.node()[ns][id].ease;\r\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\r\n    return d3_selection_each(this, function(node) {\r\n      node[ns][id].ease = value;\r\n    });\r\n  };\r\n  d3_transitionPrototype.delay = function(value) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 1) return this.node()[ns][id].delay;\r\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\r\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\r\n    } : (value = +value, function(node) {\r\n      node[ns][id].delay = value;\r\n    }));\r\n  };\r\n  d3_transitionPrototype.duration = function(value) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 1) return this.node()[ns][id].duration;\r\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\r\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\r\n    } : (value = Math.max(1, value), function(node) {\r\n      node[ns][id].duration = value;\r\n    }));\r\n  };\r\n  d3_transitionPrototype.each = function(type, listener) {\r\n    var id = this.id, ns = this.namespace;\r\n    if (arguments.length < 2) {\r\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\r\n      try {\r\n        d3_transitionInheritId = id;\r\n        d3_selection_each(this, function(node, i, j) {\r\n          d3_transitionInherit = node[ns][id];\r\n          type.call(node, node.__data__, i, j);\r\n        });\r\n      } finally {\r\n        d3_transitionInherit = inherit;\r\n        d3_transitionInheritId = inheritId;\r\n      }\r\n    } else {\r\n      d3_selection_each(this, function(node) {\r\n        var transition = node[ns][id];\r\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\r\n      });\r\n    }\r\n    return this;\r\n  };\r\n  d3_transitionPrototype.transition = function() {\r\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\r\n    for (var j = 0, m = this.length; j < m; j++) {\r\n      subgroups.push(subgroup = []);\r\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\r\n        if (node = group[i]) {\r\n          transition = node[ns][id0];\r\n          d3_transitionNode(node, i, ns, id1, {\r\n            time: transition.time,\r\n            ease: transition.ease,\r\n            delay: transition.delay + transition.duration,\r\n            duration: transition.duration\r\n          });\r\n        }\r\n        subgroup.push(node);\r\n      }\r\n    }\r\n    return d3_transition(subgroups, ns, id1);\r\n  };\r\n  function d3_transitionNamespace(name) {\r\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\r\n  }\r\n  function d3_transitionNode(node, i, ns, id, inherit) {\r\n    var lock = node[ns] || (node[ns] = {\r\n      active: 0,\r\n      count: 0\r\n    }), transition = lock[id], time, timer, duration, ease, tweens;\r\n    function schedule(elapsed) {\r\n      var delay = transition.delay;\r\n      timer.t = delay + time;\r\n      if (delay <= elapsed) return start(elapsed - delay);\r\n      timer.c = start;\r\n    }\r\n    function start(elapsed) {\r\n      var activeId = lock.active, active = lock[activeId];\r\n      if (active) {\r\n        active.timer.c = null;\r\n        active.timer.t = NaN;\r\n        --lock.count;\r\n        delete lock[activeId];\r\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\r\n      }\r\n      for (var cancelId in lock) {\r\n        if (+cancelId < id) {\r\n          var cancel = lock[cancelId];\r\n          cancel.timer.c = null;\r\n          cancel.timer.t = NaN;\r\n          --lock.count;\r\n          delete lock[cancelId];\r\n        }\r\n      }\r\n      timer.c = tick;\r\n      d3_timer(function() {\r\n        if (timer.c && tick(elapsed || 1)) {\r\n          timer.c = null;\r\n          timer.t = NaN;\r\n        }\r\n        return 1;\r\n      }, 0, time);\r\n      lock.active = id;\r\n      transition.event && transition.event.start.call(node, node.__data__, i);\r\n      tweens = [];\r\n      transition.tween.forEach(function(key, value) {\r\n        if (value = value.call(node, node.__data__, i)) {\r\n          tweens.push(value);\r\n        }\r\n      });\r\n      ease = transition.ease;\r\n      duration = transition.duration;\r\n    }\r\n    function tick(elapsed) {\r\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\r\n      while (n > 0) {\r\n        tweens[--n].call(node, e);\r\n      }\r\n      if (t >= 1) {\r\n        transition.event && transition.event.end.call(node, node.__data__, i);\r\n        if (--lock.count) delete lock[id]; else delete node[ns];\r\n        return 1;\r\n      }\r\n    }\r\n    if (!transition) {\r\n      time = inherit.time;\r\n      timer = d3_timer(schedule, 0, time);\r\n      transition = lock[id] = {\r\n        tween: new d3_Map(),\r\n        time: time,\r\n        timer: timer,\r\n        delay: inherit.delay,\r\n        duration: inherit.duration,\r\n        ease: inherit.ease,\r\n        index: i\r\n      };\r\n      inherit = null;\r\n      ++lock.count;\r\n    }\r\n  }\r\n  d3.svg.axis = function() {\r\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\r\n    function axis(g) {\r\n      g.each(function() {\r\n        var g = d3.select(this);\r\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\r\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\r\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \r\n        d3.transition(path));\r\n        tickEnter.append(\"line\");\r\n        tickEnter.append(\"text\");\r\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\r\n        if (orient === \"bottom\" || orient === \"top\") {\r\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\r\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\r\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\r\n        } else {\r\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\r\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\r\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\r\n        }\r\n        lineEnter.attr(y2, sign * innerTickSize);\r\n        textEnter.attr(y1, sign * tickSpacing);\r\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\r\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\r\n        if (scale1.rangeBand) {\r\n          var x = scale1, dx = x.rangeBand() / 2;\r\n          scale0 = scale1 = function(d) {\r\n            return x(d) + dx;\r\n          };\r\n        } else if (scale0.rangeBand) {\r\n          scale0 = scale1;\r\n        } else {\r\n          tickExit.call(tickTransform, scale1, scale0);\r\n        }\r\n        tickEnter.call(tickTransform, scale0, scale1);\r\n        tickUpdate.call(tickTransform, scale1, scale1);\r\n      });\r\n    }\r\n    axis.scale = function(x) {\r\n      if (!arguments.length) return scale;\r\n      scale = x;\r\n      return axis;\r\n    };\r\n    axis.orient = function(x) {\r\n      if (!arguments.length) return orient;\r\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\r\n      return axis;\r\n    };\r\n    axis.ticks = function() {\r\n      if (!arguments.length) return tickArguments_;\r\n      tickArguments_ = d3_array(arguments);\r\n      return axis;\r\n    };\r\n    axis.tickValues = function(x) {\r\n      if (!arguments.length) return tickValues;\r\n      tickValues = x;\r\n      return axis;\r\n    };\r\n    axis.tickFormat = function(x) {\r\n      if (!arguments.length) return tickFormat_;\r\n      tickFormat_ = x;\r\n      return axis;\r\n    };\r\n    axis.tickSize = function(x) {\r\n      var n = arguments.length;\r\n      if (!n) return innerTickSize;\r\n      innerTickSize = +x;\r\n      outerTickSize = +arguments[n - 1];\r\n      return axis;\r\n    };\r\n    axis.innerTickSize = function(x) {\r\n      if (!arguments.length) return innerTickSize;\r\n      innerTickSize = +x;\r\n      return axis;\r\n    };\r\n    axis.outerTickSize = function(x) {\r\n      if (!arguments.length) return outerTickSize;\r\n      outerTickSize = +x;\r\n      return axis;\r\n    };\r\n    axis.tickPadding = function(x) {\r\n      if (!arguments.length) return tickPadding;\r\n      tickPadding = +x;\r\n      return axis;\r\n    };\r\n    axis.tickSubdivide = function() {\r\n      return arguments.length && axis;\r\n    };\r\n    return axis;\r\n  };\r\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\r\n    top: 1,\r\n    right: 1,\r\n    bottom: 1,\r\n    left: 1\r\n  };\r\n  function d3_svg_axisX(selection, x0, x1) {\r\n    selection.attr(\"transform\", function(d) {\r\n      var v0 = x0(d);\r\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\r\n    });\r\n  }\r\n  function d3_svg_axisY(selection, y0, y1) {\r\n    selection.attr(\"transform\", function(d) {\r\n      var v0 = y0(d);\r\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\r\n    });\r\n  }\r\n  d3.svg.brush = function() {\r\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\r\n    function brush(g) {\r\n      g.each(function() {\r\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\r\n        var background = g.selectAll(\".background\").data([ 0 ]);\r\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\r\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\r\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\r\n        resize.exit().remove();\r\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\r\n          return \"resize \" + d;\r\n        }).style(\"cursor\", function(d) {\r\n          return d3_svg_brushCursor[d];\r\n        }).append(\"rect\").attr(\"x\", function(d) {\r\n          return /[ew]$/.test(d) ? -3 : null;\r\n        }).attr(\"y\", function(d) {\r\n          return /^[ns]/.test(d) ? -3 : null;\r\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\r\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\r\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\r\n        if (x) {\r\n          range = d3_scaleRange(x);\r\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\r\n          redrawX(gUpdate);\r\n        }\r\n        if (y) {\r\n          range = d3_scaleRange(y);\r\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\r\n          redrawY(gUpdate);\r\n        }\r\n        redraw(gUpdate);\r\n      });\r\n    }\r\n    brush.event = function(g) {\r\n      g.each(function() {\r\n        var event_ = event.of(this, arguments), extent1 = {\r\n          x: xExtent,\r\n          y: yExtent,\r\n          i: xExtentDomain,\r\n          j: yExtentDomain\r\n        }, extent0 = this.__chart__ || extent1;\r\n        this.__chart__ = extent1;\r\n        if (d3_transitionInheritId) {\r\n          d3.select(this).transition().each(\"start.brush\", function() {\r\n            xExtentDomain = extent0.i;\r\n            yExtentDomain = extent0.j;\r\n            xExtent = extent0.x;\r\n            yExtent = extent0.y;\r\n            event_({\r\n              type: \"brushstart\"\r\n            });\r\n          }).tween(\"brush:brush\", function() {\r\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\r\n            xExtentDomain = yExtentDomain = null;\r\n            return function(t) {\r\n              xExtent = extent1.x = xi(t);\r\n              yExtent = extent1.y = yi(t);\r\n              event_({\r\n                type: \"brush\",\r\n                mode: \"resize\"\r\n              });\r\n            };\r\n          }).each(\"end.brush\", function() {\r\n            xExtentDomain = extent1.i;\r\n            yExtentDomain = extent1.j;\r\n            event_({\r\n              type: \"brush\",\r\n              mode: \"resize\"\r\n            });\r\n            event_({\r\n              type: \"brushend\"\r\n            });\r\n          });\r\n        } else {\r\n          event_({\r\n            type: \"brushstart\"\r\n          });\r\n          event_({\r\n            type: \"brush\",\r\n            mode: \"resize\"\r\n          });\r\n          event_({\r\n            type: \"brushend\"\r\n          });\r\n        }\r\n      });\r\n    };\r\n    function redraw(g) {\r\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\r\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\r\n      });\r\n    }\r\n    function redrawX(g) {\r\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\r\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\r\n    }\r\n    function redrawY(g) {\r\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\r\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\r\n    }\r\n    function brushstart() {\r\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\r\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\r\n      if (d3.event.changedTouches) {\r\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\r\n      } else {\r\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\r\n      }\r\n      g.interrupt().selectAll(\"*\").interrupt();\r\n      if (dragging) {\r\n        origin[0] = xExtent[0] - origin[0];\r\n        origin[1] = yExtent[0] - origin[1];\r\n      } else if (resizing) {\r\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\r\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\r\n        origin[0] = xExtent[ex];\r\n        origin[1] = yExtent[ey];\r\n      } else if (d3.event.altKey) center = origin.slice();\r\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\r\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\r\n      event_({\r\n        type: \"brushstart\"\r\n      });\r\n      brushmove();\r\n      function keydown() {\r\n        if (d3.event.keyCode == 32) {\r\n          if (!dragging) {\r\n            center = null;\r\n            origin[0] -= xExtent[1];\r\n            origin[1] -= yExtent[1];\r\n            dragging = 2;\r\n          }\r\n          d3_eventPreventDefault();\r\n        }\r\n      }\r\n      function keyup() {\r\n        if (d3.event.keyCode == 32 && dragging == 2) {\r\n          origin[0] += xExtent[1];\r\n          origin[1] += yExtent[1];\r\n          dragging = 0;\r\n          d3_eventPreventDefault();\r\n        }\r\n      }\r\n      function brushmove() {\r\n        var point = d3.mouse(target), moved = false;\r\n        if (offset) {\r\n          point[0] += offset[0];\r\n          point[1] += offset[1];\r\n        }\r\n        if (!dragging) {\r\n          if (d3.event.altKey) {\r\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\r\n            origin[0] = xExtent[+(point[0] < center[0])];\r\n            origin[1] = yExtent[+(point[1] < center[1])];\r\n          } else center = null;\r\n        }\r\n        if (resizingX && move1(point, x, 0)) {\r\n          redrawX(g);\r\n          moved = true;\r\n        }\r\n        if (resizingY && move1(point, y, 1)) {\r\n          redrawY(g);\r\n          moved = true;\r\n        }\r\n        if (moved) {\r\n          redraw(g);\r\n          event_({\r\n            type: \"brush\",\r\n            mode: dragging ? \"move\" : \"resize\"\r\n          });\r\n        }\r\n      }\r\n      function move1(point, scale, i) {\r\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\r\n        if (dragging) {\r\n          r0 -= position;\r\n          r1 -= size + position;\r\n        }\r\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\r\n        if (dragging) {\r\n          max = (min += position) + size;\r\n        } else {\r\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\r\n          if (position < min) {\r\n            max = min;\r\n            min = position;\r\n          } else {\r\n            max = position;\r\n          }\r\n        }\r\n        if (extent[0] != min || extent[1] != max) {\r\n          if (i) yExtentDomain = null; else xExtentDomain = null;\r\n          extent[0] = min;\r\n          extent[1] = max;\r\n          return true;\r\n        }\r\n      }\r\n      function brushend() {\r\n        brushmove();\r\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\r\n        d3.select(\"body\").style(\"cursor\", null);\r\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\r\n        dragRestore();\r\n        event_({\r\n          type: \"brushend\"\r\n        });\r\n      }\r\n    }\r\n    brush.x = function(z) {\r\n      if (!arguments.length) return x;\r\n      x = z;\r\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\r\n      return brush;\r\n    };\r\n    brush.y = function(z) {\r\n      if (!arguments.length) return y;\r\n      y = z;\r\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\r\n      return brush;\r\n    };\r\n    brush.clamp = function(z) {\r\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\r\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\r\n      return brush;\r\n    };\r\n    brush.extent = function(z) {\r\n      var x0, x1, y0, y1, t;\r\n      if (!arguments.length) {\r\n        if (x) {\r\n          if (xExtentDomain) {\r\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\r\n          } else {\r\n            x0 = xExtent[0], x1 = xExtent[1];\r\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\r\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\r\n          }\r\n        }\r\n        if (y) {\r\n          if (yExtentDomain) {\r\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\r\n          } else {\r\n            y0 = yExtent[0], y1 = yExtent[1];\r\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\r\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\r\n          }\r\n        }\r\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\r\n      }\r\n      if (x) {\r\n        x0 = z[0], x1 = z[1];\r\n        if (y) x0 = x0[0], x1 = x1[0];\r\n        xExtentDomain = [ x0, x1 ];\r\n        if (x.invert) x0 = x(x0), x1 = x(x1);\r\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\r\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\r\n      }\r\n      if (y) {\r\n        y0 = z[0], y1 = z[1];\r\n        if (x) y0 = y0[1], y1 = y1[1];\r\n        yExtentDomain = [ y0, y1 ];\r\n        if (y.invert) y0 = y(y0), y1 = y(y1);\r\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\r\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\r\n      }\r\n      return brush;\r\n    };\r\n    brush.clear = function() {\r\n      if (!brush.empty()) {\r\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\r\n        xExtentDomain = yExtentDomain = null;\r\n      }\r\n      return brush;\r\n    };\r\n    brush.empty = function() {\r\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\r\n    };\r\n    return d3.rebind(brush, event, \"on\");\r\n  };\r\n  var d3_svg_brushCursor = {\r\n    n: \"ns-resize\",\r\n    e: \"ew-resize\",\r\n    s: \"ns-resize\",\r\n    w: \"ew-resize\",\r\n    nw: \"nwse-resize\",\r\n    ne: \"nesw-resize\",\r\n    se: \"nwse-resize\",\r\n    sw: \"nesw-resize\"\r\n  };\r\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\r\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\r\n  var d3_time_formatUtc = d3_time_format.utc;\r\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\r\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\r\n  function d3_time_formatIsoNative(date) {\r\n    return date.toISOString();\r\n  }\r\n  d3_time_formatIsoNative.parse = function(string) {\r\n    var date = new Date(string);\r\n    return isNaN(date) ? null : date;\r\n  };\r\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\r\n  d3_time.second = d3_time_interval(function(date) {\r\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\r\n  }, function(date, offset) {\r\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\r\n  }, function(date) {\r\n    return date.getSeconds();\r\n  });\r\n  d3_time.seconds = d3_time.second.range;\r\n  d3_time.seconds.utc = d3_time.second.utc.range;\r\n  d3_time.minute = d3_time_interval(function(date) {\r\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\r\n  }, function(date, offset) {\r\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\r\n  }, function(date) {\r\n    return date.getMinutes();\r\n  });\r\n  d3_time.minutes = d3_time.minute.range;\r\n  d3_time.minutes.utc = d3_time.minute.utc.range;\r\n  d3_time.hour = d3_time_interval(function(date) {\r\n    var timezone = date.getTimezoneOffset() / 60;\r\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\r\n  }, function(date, offset) {\r\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\r\n  }, function(date) {\r\n    return date.getHours();\r\n  });\r\n  d3_time.hours = d3_time.hour.range;\r\n  d3_time.hours.utc = d3_time.hour.utc.range;\r\n  d3_time.month = d3_time_interval(function(date) {\r\n    date = d3_time.day(date);\r\n    date.setDate(1);\r\n    return date;\r\n  }, function(date, offset) {\r\n    date.setMonth(date.getMonth() + offset);\r\n  }, function(date) {\r\n    return date.getMonth();\r\n  });\r\n  d3_time.months = d3_time.month.range;\r\n  d3_time.months.utc = d3_time.month.utc.range;\r\n  function d3_time_scale(linear, methods, format) {\r\n    function scale(x) {\r\n      return linear(x);\r\n    }\r\n    scale.invert = function(x) {\r\n      return d3_time_scaleDate(linear.invert(x));\r\n    };\r\n    scale.domain = function(x) {\r\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\r\n      linear.domain(x);\r\n      return scale;\r\n    };\r\n    function tickMethod(extent, count) {\r\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\r\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\r\n        return d / 31536e6;\r\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\r\n    }\r\n    scale.nice = function(interval, skip) {\r\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\r\n      if (method) interval = method[0], skip = method[1];\r\n      function skipped(date) {\r\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\r\n      }\r\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\r\n        floor: function(date) {\r\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\r\n          return date;\r\n        },\r\n        ceil: function(date) {\r\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\r\n          return date;\r\n        }\r\n      } : interval));\r\n    };\r\n    scale.ticks = function(interval, skip) {\r\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\r\n        range: interval\r\n      }, skip ];\r\n      if (method) interval = method[0], skip = method[1];\r\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\r\n    };\r\n    scale.tickFormat = function() {\r\n      return format;\r\n    };\r\n    scale.copy = function() {\r\n      return d3_time_scale(linear.copy(), methods, format);\r\n    };\r\n    return d3_scale_linearRebind(scale, linear);\r\n  }\r\n  function d3_time_scaleDate(t) {\r\n    return new Date(t);\r\n  }\r\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\r\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\r\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\r\n    return d.getMilliseconds();\r\n  } ], [ \":%S\", function(d) {\r\n    return d.getSeconds();\r\n  } ], [ \"%I:%M\", function(d) {\r\n    return d.getMinutes();\r\n  } ], [ \"%I %p\", function(d) {\r\n    return d.getHours();\r\n  } ], [ \"%a %d\", function(d) {\r\n    return d.getDay() && d.getDate() != 1;\r\n  } ], [ \"%b %d\", function(d) {\r\n    return d.getDate() != 1;\r\n  } ], [ \"%B\", function(d) {\r\n    return d.getMonth();\r\n  } ], [ \"%Y\", d3_true ] ]);\r\n  var d3_time_scaleMilliseconds = {\r\n    range: function(start, stop, step) {\r\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\r\n    },\r\n    floor: d3_identity,\r\n    ceil: d3_identity\r\n  };\r\n  d3_time_scaleLocalMethods.year = d3_time.year;\r\n  d3_time.scale = function() {\r\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\r\n  };\r\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\r\n    return [ m[0].utc, m[1] ];\r\n  });\r\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\r\n    return d.getUTCMilliseconds();\r\n  } ], [ \":%S\", function(d) {\r\n    return d.getUTCSeconds();\r\n  } ], [ \"%I:%M\", function(d) {\r\n    return d.getUTCMinutes();\r\n  } ], [ \"%I %p\", function(d) {\r\n    return d.getUTCHours();\r\n  } ], [ \"%a %d\", function(d) {\r\n    return d.getUTCDay() && d.getUTCDate() != 1;\r\n  } ], [ \"%b %d\", function(d) {\r\n    return d.getUTCDate() != 1;\r\n  } ], [ \"%B\", function(d) {\r\n    return d.getUTCMonth();\r\n  } ], [ \"%Y\", d3_true ] ]);\r\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\r\n  d3_time.scale.utc = function() {\r\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\r\n  };\r\n  d3.text = d3_xhrType(function(request) {\r\n    return request.responseText;\r\n  });\r\n  d3.json = function(url, callback) {\r\n    return d3_xhr(url, \"application/json\", d3_json, callback);\r\n  };\r\n  function d3_json(request) {\r\n    return JSON.parse(request.responseText);\r\n  }\r\n  d3.html = function(url, callback) {\r\n    return d3_xhr(url, \"text/html\", d3_html, callback);\r\n  };\r\n  function d3_html(request) {\r\n    var range = d3_document.createRange();\r\n    range.selectNode(d3_document.body);\r\n    return range.createContextualFragment(request.responseText);\r\n  }\r\n  d3.xml = d3_xhrType(function(request) {\r\n    return request.responseXML;\r\n  });\r\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\r\n}();"],"sourceRoot":"webpack:///"}